[{"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/src/abi.ts":"1","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/src/accounts.ts":"2","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/src/eth.exports.ts":"3","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/src/index.ts":"4","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/src/providers.exports.ts":"5","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/src/types.ts":"6","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/src/version.ts":"7","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/src/web3.ts":"8","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/src/web3_eip6963.ts":"9","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/benchmark/abi.ts":"10","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/benchmark/benchmark.ts":"11","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/benchmark/helpers.ts":"12","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/benchmark/processingContract.ts":"13","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/benchmark/processingTx.ts":"14","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/benchmark/wallet.ts":"15","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/cjs_black_box/test/batchRequest.test.ts":"16","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/cjs_black_box/test/web3-eth/getBlock.test.ts":"17","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/cjs_black_box/test/web3-eth/getTransaction.test.ts":"18","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/cjs_black_box/test/web3-eth-accounts/create.test.ts":"19","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/cjs_black_box/test/web3-eth-accounts/hashMessage.test.ts":"20","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/cjs_black_box/test/web3-eth-contract/erc20.test.ts":"21","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/e2e_utils.ts":"22","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/estimate_gas.test.ts":"23","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/fixtures/mainnet.ts":"24","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/fixtures/mainnet_block_hydrated.ts":"25","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/fixtures/sepolia.ts":"26","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/get_accounts.test.ts":"27","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/get_balance.test.ts":"28","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/get_block.test.ts":"29","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/get_block_number.test.ts":"30","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/get_block_transaction_count.test.ts":"31","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/get_block_uncle_count.test.ts":"32","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/get_chain_id.test.ts":"33","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/get_fee_history.test.ts":"34","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/get_gas_price.test.ts":"35","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/get_id.test.ts":"36","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/get_peer_count.test.ts":"37","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/get_proof.test.ts":"38","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/get_protocol_version.test.ts":"39","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/get_transaction_count.test.ts":"40","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/get_transaction_from_block.test.ts":"41","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/get_uncle.test.ts":"42","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/is_listening.test.ts":"43","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/is_syncing.test.ts":"44","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/mainnet/call.test.ts":"45","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/mainnet/get_code.test.ts":"46","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/mainnet/get_past_logs.test.ts":"47","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/mainnet/get_storage_at.test.ts":"48","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/mainnet/get_transaction.test.ts":"49","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/mainnet/get_transaction_receipt.test.ts":"50","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/sepolia/call.test.ts":"51","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/sepolia/contract.test.ts":"52","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/sepolia/get_code.test.ts":"53","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/sepolia/get_past_logs.test.ts":"54","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/sepolia/get_storage_at.test.ts":"55","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/sepolia/get_transaction.test.ts":"56","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/sepolia/get_transaction_receipt.test.ts":"57","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/sepolia/send_signed_transaction.test.ts":"58","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/web3_extend.test.ts":"59","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/esm_black_box/test/batchRequest.test.ts":"60","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/esm_black_box/test/web3-eth/getBlock.test.ts":"61","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/esm_black_box/test/web3-eth/getTransaction.test.ts":"62","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/esm_black_box/test/web3-eth-accounts/create.test.ts":"63","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/esm_black_box/test/web3-eth-accounts/hashMessage.test.ts":"64","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/esm_black_box/test/web3-eth-contract/erc20.test.ts":"65","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/fixtures/tx-type-15/index.ts":"66","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/integration/contract.test.ts":"67","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/integration/external-providers/extremely_simple.test.ts":"68","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/integration/external-providers/ganache.test.ts":"69","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/integration/external-providers/hardhat.test.ts":"70","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/integration/external-providers/helper.ts":"71","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/integration/external-providers/in3.test.ts":"72","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/integration/external-providers/infura-rpc.test.ts":"73","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/integration/external-providers/truffle-hdwallet.test.ts":"74","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/integration/handle_revert.test.ts":"75","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/integration/ipc.test.ts":"76","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/integration/sync.test.ts":"77","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/integration/web3-plugin-add-tx.test.ts":"78","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/integration/web3.abi.test.ts":"79","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/integration/web3.accounts.test.ts":"80","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/integration/web3.config.test.ts":"81","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/integration/web3.eth.transaction.test.ts":"82","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/integration/web3.format.test.ts":"83","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/integration/web3.setProvider.test.ts":"84","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/integration/web3.test.ts":"85","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/integration/ws.test.ts":"86","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/shared_fixtures/Basic.ts":"87","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/shared_fixtures/Greeter.ts":"88","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/shared_fixtures/build/Basic.ts":"89","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/shared_fixtures/build/DeployRevert.ts":"90","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/shared_fixtures/build/ERC20Token.ts":"91","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/shared_fixtures/build/ERC721Token.ts":"92","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/shared_fixtures/build/ErrorsContract.ts":"93","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/shared_fixtures/build/Greeter.ts":"94","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/shared_fixtures/build/GreeterWithOverloading.ts":"95","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/shared_fixtures/build/MsgSender.ts":"96","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/shared_fixtures/build/MyContract.ts":"97","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/shared_fixtures/build/NegativeNumbers.ts":"98","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/shared_fixtures/contracts/ERC20Token.ts":"99","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/shared_fixtures/contracts/ERC721Token.ts":"100","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/shared_fixtures/data.ts":"101","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/shared_fixtures/system_tests_utils.ts":"102","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/shared_fixtures/utils.ts":"103","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/stress/data.test.ts":"104","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/stress/requests.test.ts":"105","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/stress/validation.test.ts":"106","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/unit/accounts.test.ts":"107","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/unit/index.test.ts":"108","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/unit/version.test.ts":"109","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/unit/web3-custom-subscriptions.test.ts":"110","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/unit/web3.config.test.ts":"111","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/unit/web3.extend.test.ts":"112","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/unit/web3.test.ts":"113","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/unit/web3eip6963.test.ts":"114"},{"size":1058,"mtime":1678154646197,"results":"115","hashOfConfig":"116"},{"size":3168,"mtime":1713877869085,"results":"117","hashOfConfig":"116"},{"size":937,"mtime":1678154646197,"results":"118","hashOfConfig":"116"},{"size":9557,"mtime":1710252929023,"results":"119","hashOfConfig":"116"},{"size":839,"mtime":1709764624544,"results":"120","hashOfConfig":"116"},{"size":3042,"mtime":1712054274755,"results":"121","hashOfConfig":"116"},{"size":84,"mtime":1714409405140,"results":"122","hashOfConfig":"116"},{"size":7489,"mtime":1713453005527,"results":"123","hashOfConfig":"116"},{"size":2786,"mtime":1709764624544,"results":"124","hashOfConfig":"116"},{"size":1264,"mtime":1702590085108,"results":"125","hashOfConfig":"126"},{"size":1619,"mtime":1702592760828,"results":"127","hashOfConfig":"126"},{"size":890,"mtime":1702590085109,"results":"128","hashOfConfig":"126"},{"size":2110,"mtime":1702592397917,"results":"129","hashOfConfig":"126"},{"size":1166,"mtime":1702590085112,"results":"130","hashOfConfig":"126"},{"size":1665,"mtime":1702590085112,"results":"131","hashOfConfig":"126"},{"size":2058,"mtime":1681350953495,"results":"132","hashOfConfig":"133"},{"size":1887,"mtime":1681350953496,"results":"134","hashOfConfig":"133"},{"size":2607,"mtime":1681350953496,"results":"135","hashOfConfig":"133"},{"size":1963,"mtime":1681350953495,"results":"136","hashOfConfig":"133"},{"size":1608,"mtime":1681350953495,"results":"137","hashOfConfig":"133"},{"size":3215,"mtime":1707238177050,"results":"138","hashOfConfig":"133"},{"size":3544,"mtime":1710201498815,"results":"139","hashOfConfig":"126"},{"size":9280,"mtime":1707238177050,"results":"140","hashOfConfig":"126"},{"size":47900,"mtime":1684961961647,"results":"141","hashOfConfig":"126"},{"size":696776,"mtime":1684961961650,"results":"142","hashOfConfig":"126"},{"size":134486,"mtime":1684961961651,"results":"143","hashOfConfig":"126"},{"size":1263,"mtime":1682532948015,"results":"144","hashOfConfig":"126"},{"size":3516,"mtime":1707238177051,"results":"145","hashOfConfig":"126"},{"size":3345,"mtime":1707238177051,"results":"146","hashOfConfig":"126"},{"size":2148,"mtime":1682532948015,"results":"147","hashOfConfig":"126"},{"size":3592,"mtime":1707238177051,"results":"148","hashOfConfig":"126"},{"size":1938,"mtime":1707238177051,"results":"149","hashOfConfig":"126"},{"size":2202,"mtime":1707238177051,"results":"150","hashOfConfig":"126"},{"size":2694,"mtime":1682532948016,"results":"151","hashOfConfig":"126"},{"size":2139,"mtime":1682532948016,"results":"152","hashOfConfig":"126"},{"size":1358,"mtime":1707238177051,"results":"153","hashOfConfig":"126"},{"size":1263,"mtime":1682532948016,"results":"154","hashOfConfig":"126"},{"size":2685,"mtime":1707238177052,"results":"155","hashOfConfig":"126"},{"size":1328,"mtime":1682532948016,"results":"156","hashOfConfig":"126"},{"size":2236,"mtime":1707238177053,"results":"157","hashOfConfig":"126"},{"size":6151,"mtime":1707238177053,"results":"158","hashOfConfig":"126"},{"size":2081,"mtime":1707238177053,"results":"159","hashOfConfig":"126"},{"size":1268,"mtime":1682532948017,"results":"160","hashOfConfig":"126"},{"size":1258,"mtime":1682532948017,"results":"161","hashOfConfig":"126"},{"size":2023,"mtime":1684961961651,"results":"162","hashOfConfig":"126"},{"size":2536,"mtime":1684961961651,"results":"163","hashOfConfig":"126"},{"size":6031,"mtime":1684961961651,"results":"164","hashOfConfig":"126"},{"size":2327,"mtime":1684961961651,"results":"165","hashOfConfig":"126"},{"size":5940,"mtime":1683162042544,"results":"166","hashOfConfig":"126"},{"size":6946,"mtime":1684961961651,"results":"167","hashOfConfig":"126"},{"size":3107,"mtime":1684961961651,"results":"168","hashOfConfig":"126"},{"size":6621,"mtime":1682532948018,"results":"169","hashOfConfig":"126"},{"size":4734,"mtime":1684961961651,"results":"170","hashOfConfig":"126"},{"size":6458,"mtime":1684961961652,"results":"171","hashOfConfig":"126"},{"size":2411,"mtime":1684961961652,"results":"172","hashOfConfig":"126"},{"size":5695,"mtime":1683650420010,"results":"173","hashOfConfig":"126"},{"size":3577,"mtime":1684961961652,"results":"174","hashOfConfig":"126"},{"size":6633,"mtime":1682532948019,"results":"175","hashOfConfig":"126"},{"size":1482,"mtime":1690943262297,"results":"176","hashOfConfig":"126"},{"size":1882,"mtime":1681350953497,"results":"177","hashOfConfig":"126"},{"size":1710,"mtime":1681350953498,"results":"178","hashOfConfig":"126"},{"size":2582,"mtime":1684961961652,"results":"179","hashOfConfig":"126"},{"size":1963,"mtime":1681350953497,"results":"180","hashOfConfig":"126"},{"size":1431,"mtime":1681350953497,"results":"181","hashOfConfig":"126"},{"size":2967,"mtime":1707238177053,"results":"182","hashOfConfig":"126"},{"size":13835,"mtime":1697120522663,"results":"183","hashOfConfig":"126"},{"size":3074,"mtime":1706734513684,"results":"184","hashOfConfig":"126"},{"size":1342,"mtime":1678154646201,"results":"185","hashOfConfig":"126"},{"size":1189,"mtime":1679687265393,"results":"186","hashOfConfig":"126"},{"size":1061,"mtime":1678154646202,"results":"187","hashOfConfig":"126"},{"size":1749,"mtime":1700492614540,"results":"188","hashOfConfig":"126"},{"size":1874,"mtime":1685135517617,"results":"189","hashOfConfig":"126"},{"size":1552,"mtime":1678154646202,"results":"190","hashOfConfig":"126"},{"size":1873,"mtime":1681824985800,"results":"191","hashOfConfig":"126"},{"size":4059,"mtime":1681350953501,"results":"192","hashOfConfig":"126"},{"size":1801,"mtime":1685553797015,"results":"193","hashOfConfig":"126"},{"size":3021,"mtime":1681350953501,"results":"194","hashOfConfig":"126"},{"size":2414,"mtime":1702344429597,"results":"195","hashOfConfig":"126"},{"size":1463,"mtime":1681350953501,"results":"196","hashOfConfig":"126"},{"size":6051,"mtime":1689218498168,"results":"197","hashOfConfig":"126"},{"size":2464,"mtime":1709764624545,"results":"198","hashOfConfig":"126"},{"size":3904,"mtime":1685048312113,"results":"199","hashOfConfig":"126"},{"size":3778,"mtime":1713453005527,"results":"200","hashOfConfig":"126"},{"size":2303,"mtime":1681350953501,"results":"201","hashOfConfig":"126"},{"size":10442,"mtime":1700492614541,"results":"202","hashOfConfig":"126"},{"size":1469,"mtime":1700525068272,"results":"203","hashOfConfig":"126"},{"size":13544,"mtime":1700492614523,"results":"204","hashOfConfig":"126"},{"size":9395,"mtime":1700492614525,"results":"205","hashOfConfig":"126"},{"size":13544,"mtime":1700492614523,"results":"206","hashOfConfig":"126"},{"size":1016,"mtime":1700492614523,"results":"207","hashOfConfig":"126"},{"size":17276,"mtime":1700492614524,"results":"208","hashOfConfig":"126"},{"size":28948,"mtime":1700492614524,"results":"209","hashOfConfig":"126"},{"size":2740,"mtime":1700492614524,"results":"210","hashOfConfig":"126"},{"size":9395,"mtime":1700492614525,"results":"211","hashOfConfig":"126"},{"size":10792,"mtime":1702486194986,"results":"212","hashOfConfig":"126"},{"size":8367,"mtime":1700492614525,"results":"213","hashOfConfig":"126"},{"size":2061,"mtime":1700492614525,"results":"214","hashOfConfig":"126"},{"size":6610,"mtime":1700492614526,"results":"215","hashOfConfig":"126"},{"size":16300,"mtime":1681350953502,"results":"216","hashOfConfig":"126"},{"size":28567,"mtime":1681350953502,"results":"217","hashOfConfig":"126"},{"size":1310,"mtime":1679686929301,"results":"218","hashOfConfig":"126"},{"size":15907,"mtime":1713826363670,"results":"219","hashOfConfig":"126"},{"size":1920,"mtime":1678154646075,"results":"220","hashOfConfig":"126"},{"size":2311,"mtime":1701707080046,"results":"221","hashOfConfig":"126"},{"size":4363,"mtime":1702068294493,"results":"222","hashOfConfig":"126"},{"size":4761,"mtime":1701184014714,"results":"223","hashOfConfig":"126"},{"size":3350,"mtime":1678154646206,"results":"224","hashOfConfig":"126"},{"size":2069,"mtime":1681350953502,"results":"225","hashOfConfig":"126"},{"size":949,"mtime":1678154646206,"results":"226","hashOfConfig":"126"},{"size":2582,"mtime":1689879155156,"results":"227","hashOfConfig":"126"},{"size":7432,"mtime":1701204533558,"results":"228","hashOfConfig":"126"},{"size":3136,"mtime":1690943262298,"results":"229","hashOfConfig":"126"},{"size":4028,"mtime":1681401076228,"results":"230","hashOfConfig":"126"},{"size":3131,"mtime":1709764624545,"results":"231","hashOfConfig":"126"},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1sxjcdw",{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","suppressedMessages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244"},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","suppressedMessages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257"},{"filePath":"258","messages":"259","suppressedMessages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261"},{"filePath":"262","messages":"263","suppressedMessages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265"},"1nkqtvw",{"filePath":"266","messages":"267","suppressedMessages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","suppressedMessages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","suppressedMessages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275"},{"filePath":"276","messages":"277","suppressedMessages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","suppressedMessages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282"},{"filePath":"283","messages":"284","suppressedMessages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1j8b5v1",{"filePath":"286","messages":"287","suppressedMessages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","suppressedMessages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","suppressedMessages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","suppressedMessages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","suppressedMessages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","suppressedMessages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304"},{"filePath":"305","messages":"306","suppressedMessages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308"},{"filePath":"309","messages":"310","suppressedMessages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","suppressedMessages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","suppressedMessages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"318","messages":"319","suppressedMessages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321"},{"filePath":"322","messages":"323","suppressedMessages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325"},{"filePath":"326","messages":"327","suppressedMessages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329"},{"filePath":"330","messages":"331","suppressedMessages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333"},{"filePath":"334","messages":"335","suppressedMessages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337"},{"filePath":"338","messages":"339","suppressedMessages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341"},{"filePath":"342","messages":"343","suppressedMessages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345"},{"filePath":"346","messages":"347","suppressedMessages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349"},{"filePath":"350","messages":"351","suppressedMessages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353"},{"filePath":"354","messages":"355","suppressedMessages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357"},{"filePath":"358","messages":"359","suppressedMessages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361"},{"filePath":"362","messages":"363","suppressedMessages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365"},{"filePath":"366","messages":"367","suppressedMessages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369"},{"filePath":"370","messages":"371","suppressedMessages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373"},{"filePath":"374","messages":"375","suppressedMessages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377"},{"filePath":"378","messages":"379","suppressedMessages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381"},{"filePath":"382","messages":"383","suppressedMessages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385"},{"filePath":"386","messages":"387","suppressedMessages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389"},{"filePath":"390","messages":"391","suppressedMessages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393"},{"filePath":"394","messages":"395","suppressedMessages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397"},{"filePath":"398","messages":"399","suppressedMessages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401"},{"filePath":"402","messages":"403","suppressedMessages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405"},{"filePath":"406","messages":"407","suppressedMessages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409"},{"filePath":"410","messages":"411","suppressedMessages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413"},{"filePath":"414","messages":"415","suppressedMessages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417"},{"filePath":"418","messages":"419","suppressedMessages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421"},{"filePath":"422","messages":"423","suppressedMessages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425"},{"filePath":"426","messages":"427","suppressedMessages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429"},{"filePath":"430","messages":"431","suppressedMessages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433"},{"filePath":"434","messages":"435","suppressedMessages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437"},{"filePath":"438","messages":"439","suppressedMessages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441"},{"filePath":"442","messages":"443","suppressedMessages":"444","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445"},{"filePath":"446","messages":"447","suppressedMessages":"448","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449"},{"filePath":"450","messages":"451","suppressedMessages":"452","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"453","messages":"454","suppressedMessages":"455","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"456","messages":"457","suppressedMessages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"459","messages":"460","suppressedMessages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"462","messages":"463","suppressedMessages":"464","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"465","messages":"466","suppressedMessages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"468","messages":"469","suppressedMessages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471"},{"filePath":"472","messages":"473","suppressedMessages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"475","messages":"476","suppressedMessages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"478"},{"filePath":"479","messages":"480","suppressedMessages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482"},{"filePath":"483","messages":"484","suppressedMessages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486"},{"filePath":"487","messages":"488","suppressedMessages":"489","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"490"},{"filePath":"491","messages":"492","suppressedMessages":"493","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494"},{"filePath":"495","messages":"496","suppressedMessages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498"},{"filePath":"499","messages":"500","suppressedMessages":"501","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"502"},{"filePath":"503","messages":"504","suppressedMessages":"505","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506"},{"filePath":"507","messages":"508","suppressedMessages":"509","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"510"},{"filePath":"511","messages":"512","suppressedMessages":"513","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"514"},{"filePath":"515","messages":"516","suppressedMessages":"517","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"518","messages":"519","suppressedMessages":"520","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"521"},{"filePath":"522","messages":"523","suppressedMessages":"524","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"525"},{"filePath":"526","messages":"527","suppressedMessages":"528","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"529"},{"filePath":"530","messages":"531","suppressedMessages":"532","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"533"},{"filePath":"534","messages":"535","suppressedMessages":"536","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"537","messages":"538","suppressedMessages":"539","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"540"},{"filePath":"541","messages":"542","suppressedMessages":"543","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"544","messages":"545","suppressedMessages":"546","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"547"},{"filePath":"548","messages":"549","suppressedMessages":"550","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"551","messages":"552","suppressedMessages":"553","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"554","messages":"555","suppressedMessages":"556","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"557","messages":"558","suppressedMessages":"559","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"560","messages":"561","suppressedMessages":"562","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"563","messages":"564","suppressedMessages":"565","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"566","messages":"567","suppressedMessages":"568","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"569","messages":"570","suppressedMessages":"571","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"572","messages":"573","suppressedMessages":"574","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"575","messages":"576","suppressedMessages":"577","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"578","messages":"579","suppressedMessages":"580","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"581","messages":"582","suppressedMessages":"583","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"584","messages":"585","suppressedMessages":"586","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"587","messages":"588","suppressedMessages":"589","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"590","messages":"591","suppressedMessages":"592","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"593","messages":"594","suppressedMessages":"595","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"596","messages":"597","suppressedMessages":"598","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"599","messages":"600","suppressedMessages":"601","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"602","messages":"603","suppressedMessages":"604","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"605","messages":"606","suppressedMessages":"607","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"608","messages":"609","suppressedMessages":"610","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"611","messages":"612","suppressedMessages":"613","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"614","messages":"615","suppressedMessages":"616","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"617","messages":"618","suppressedMessages":"619","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"620"},{"filePath":"621","messages":"622","suppressedMessages":"623","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"624"},{"filePath":"625","messages":"626","suppressedMessages":"627","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"628","messages":"629","suppressedMessages":"630","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"631","messages":"632","suppressedMessages":"633","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"634"},"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/src/abi.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/src/accounts.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/src/eth.exports.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/src/index.ts",["635"],[],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * This is the main (or 'umbrella') class of the web3.js library.\n *\n * ```ts\n * import Web3 from 'web3';\n *\n * > Web3.utils\n * > Web3.version\n * > Web3.givenProvider\n * > Web3.providers\n * > Web3.modules\n * ```\n *\n * # Web3.modules\n *\n * ```ts\n * Web3.modules\n * ```\n *\n * Will return an object with the classes of all major sub modules, to be able to instantiate them manually.\n *\n * #### Returns\n *\n *  `Object` A list of module constructors:\n *\n *\n *  + `Eth` - `Constructor`: The Eth module for interacting with the Ethereum network\n *\n *\n *  + `Net` - `Constructor`: The Net module for interacting with network properties.\n *\n *\n *  + `Personal` - `constructor`: The Personal module for interacting with the Ethereum accounts (web3.eth.personal).\n *\n * #### Example\n *\n * ```ts\n * Web3.modules\n * > {\n *   \tEth: Eth(provider),\n *   \tNet: Net(provider),\n *   \tPersonal: Personal(provider),\n *   }\n * ```\n *\n * See details: {@link Web3.modules}\n *\n * # Web3 Instance\n *\n * The Web3 class is an umbrella package to house all Ethereum related modules.\n *\n * ```ts\n * import Web3 from 'web3';\n *\n * // \"Web3.givenProvider\" will be set if in an Ethereum supported browser.\n * const web3 = new Web3(Web3.givenProvider || 'ws://some.local-or-remote.node:8546');\n *\n * > web3.eth\n * > web3.utils\n * > web3.version\n * ```\n *\n * ### version\n *\n * Contains the current package version of the web3.js library.\n *\n * #### Returns\n * //todo enable when functionality added\n * // @see Web3.version\n *\n * ### utils\n *\n * Static accessible property of the Web3 class and property of the instance as well.\n *\n * ```ts\n * Web3.utils\n * web3.utils\n * ```\n *\n * Utility functions are also exposed on the `Web3` class object diretly.\n *\n * //todo enable when implemented\n * //See details: {@link Web3.utils}\n *\n * ### setProvider\n *\n * ```ts\n * web3.setProvider(myProvider)\n * web3.eth.setProvider(myProvider)\n * ...\n * ```\n *\n * Will change the provider for its module.\n *\n * **_NOTE:_** When called on the umbrella package web3 it will also set the provider for all sub modules web3.eth  etc.\n *\n * #### Parameters\n *  `Object`  - `myProvider`: a valid provider.\n *\n * #### Returns\n * `Boolean`\n *\n * See details: {@link Web3.setProvider}\n *\n * #### Example: Local Geth Node\n * ```ts\n * import Web3 from \"web3\";\n * let web3: Web3 = new Web3('http://localhost:8545');\n * // or\n * let web3: Web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n *\n * // change provider\n * web3.setProvider('ws://localhost:8546');\n * // or\n * web3.setProvider(new Web3.providers.WebsocketProvider('ws://localhost:8546'));\n *\n * //todo add IPC provider\n * ```\n *\n * #### Example: Remote Geth Node\n *\n * ```ts\n * // Using a remote node provider, like Alchemy (https://www.alchemyapi.io/supernode), is simple.\n * import Web3 from \"web3\";\n * let web3: Web3 = new Web3(\"https://eth-mainnet.alchemyapi.io/v2/your-api-key\");\n * ```\n *\n * ### providers\n *\n * ```ts\n * web3.providers\n * web3.eth.providers\n * ```\n * Contains the current available providers.\n *\n * #### Returns\n *  `Object` with the following providers:\n *\n *\n *  + `Object` - `HttpProvider`: HTTP provider, does not support subscriptions.\n *\n *\n *  + `Object` - `WebSocketProvider`: The WebSocket provider is the standard for usage in legacy browsers.\n *\n *\n *  + `Object` - `IpcProvider`: The IPC provider is used in node.js dapps when running a local node. Gives the most secure connection.\n *\n *\n * #### Example\n * ```ts\n * import { Web3 } from 'web3';\n * // use the given Provider or instantiate a new websocket provider\n * let web3 = new Web3(Web3.givenProvider || 'ws://remotenode.com:8546');\n * // or\n * let web3 = new Web3(Web3.givenProvider || new Web3.providers.WebsocketProvider('ws://remotenode.com:8546'));\n *\n * // Using the IPC provider in node.js\n * import { Web3 } from 'web3';\n * import { IpcProvider } from 'web3-providers-ipc';\n * var web3 = new Web3(new IpcProvider('/Users/myuser/Library/Ethereum/geth.ipc')); // mac os path\n * // on windows the path is: \"\\\\\\\\.\\\\pipe\\\\geth.ipc\"\n * // on linux the path is: \"/users/myuser/.ethereum/geth.ipc\"\n * ```\n * #### Configuration\n *\n * ```ts\n *\n * //===\n * //Http\n * //===\n *\n * import Web3HttpProvider, { HttpProviderOptions } from \"web3-providers-http\";\n *\n * let options: HttpProviderOptions = {\n * \tproviderOptions: {\n * \t\tkeepalive: true,\n * \t\tcredentials: \"omit\",\n * \t\theaders: {\n * \t\t\t\"Access-Control-Allow-Origin\": \"*\",\n * \t\t},\n * \t},\n * };\n *\n *\n * var provider = new Web3HttpProvider(\"http://localhost:8545\", options);\n * web3.setProvider(provider);\n *\n * //===\n * //WebSockets\n * //===\n * import Web3WsProvider, {\n * \tClientOptions,\n * \tClientRequestArgs,\n * \tReconnectOptions,\n * } from \"web3-providers-ws\";\n *\n *\n * let clientOptions: ClientOptions = {\n * \t// Useful for credentialed urls, e.g: ws://username:password@localhost:8546\n * \theaders: {\n * \t\tauthorization: \"Basic username:password\",\n * \t},\n * \tmaxPayload: 100000000,\n * };\n *\n * // Enable auto reconnection\n * let reconnectOptions: ReconnectOptions = {\n * \tautoReconnect: true,\n * \tdelay: 5000, // ms\n * \tmaxAttempts: 5,\n * };\n *\n * //clientOptions and reconnectOptions are optional\n * //clientOptions: ClientOptions | ClientRequestArgs\n * let ws = new Web3WsProvider(\n * \"ws://localhost:8546\",\n * clientOptions,\n * reconnectOptions\n * );\n * web3.setProvider(ws);\n *\n * ```\n * More information for the Http and Websocket provider modules can be found here:\n *\n *\n * - {@link HttpProvider}\n *\n *\n * - {@link WebSocketProvider}\n *\n * See details: {@link Web3.providers}\n *\n *\n * ### givenProvider\n *\n * ```ts\n * web3.givenProvider\n * web3.eth.givenProvider\n * ...\n * ```\n * When using web3.js in an Ethereum compatible browser, it will set with the current native provider by that browser.\n * Will return the given provider by the (browser) environment, otherwise `undefined`.\n *\n * #### Returns\n * `Object` -  The given provider set or `undefined`.\n *\n * See details: {@link Web3.givenProvider}\n *\n * ### currentProvider\n *\n * ```ts\n * web3.currentProvider\n * web3.eth.currentProvider\n * ...\n * ```\n * Will return the current provider, otherwise `undefined`.\n *\n * #### Returns\n * `Object`: The current provider, otherwise `undefined`.\n *\n * See details: {@link Web3.currentProvider}\n *\n * ### BatchRequest\n *\n * ```ts\n * new web3.BatchRequest()\n * new web3.BatchRequest()\n * ...\n * ```\n * Class to create and execute batch requests.\n *\n *  #### Parameters\n *  none\n *\n * #### Returns\n * `Object`: With the following methods:\n *\n * + `add(request)`: To add a request object to the batch call.\n *\n * + `execute()` : To execute the batch request.\n *\n * #### Example\n * ```ts\n * let request1: JsonRpcOptionalRequest = {\n * \tid: 10,\n * \tmethod: 'eth_getBalance',\n * \tparams: [\"0xdc6bad79dab7ea733098f66f6c6f9dd008da3258\", 'latest'],\n * };\n * let request2: JsonRpcOptionalRequest = {\n * \tid: 11,\n * \tmethod: 'eth_getBalance',\n * \tparams: [\"0x962f9a9c2a6c092474d24def35eccb3d9363265e\", 'latest'],\n * };\n *\n * const batch = new web3.BatchRequest();\n *\n *  batch.add(request1);\n *  batch.add(request2);\n * // add returns a deferred promise which can be used to run specific code after completion of each respective request.\n * //const request2Promise = batch.add(request2);\n *\n * const response = await batch.execute();\n * ```\n * See details: {@link Web3.BatchRequest}\n */\n/**\n * This comment _supports3_ [Markdown](https://marked.js.org/)\n */\n\nimport Web3 from './web3.js';\n\nexport * from './types.js';\nexport default Web3;\n\n/**\n * Named exports for all objects which are the default-exported-object in their packages\n */\nexport { Web3 };\nexport { Web3Context, Web3PluginBase, Web3EthPluginBase, Web3PromiEvent } from 'web3-core';\nexport { Web3Eth } from 'web3-eth';\nexport { Contract, ContractDeploySend, ContractMethodSend } from 'web3-eth-contract';\nexport { Iban } from 'web3-eth-iban';\nexport { Personal } from 'web3-eth-personal';\nexport { Net } from 'web3-net';\nexport { HttpProvider } from 'web3-providers-http';\nexport { WebSocketProvider } from 'web3-providers-ws';\nexport { Web3Validator } from 'web3-validator';\n\n/**\n * Export all packages grouped by name spaces\n */\nexport * as core from 'web3-core';\nexport * as errors from 'web3-errors';\nexport * as eth from './eth.exports.js';\nexport * as net from 'web3-net';\nexport * as providers from './providers.exports.js';\nexport * as rpcMethods from 'web3-rpc-methods';\nexport * as types from 'web3-types';\nexport * as utils from 'web3-utils';\nexport * as validator from 'web3-validator';\n\n/**\n * Export all types from `web3-types` without a namespace (in addition to being available at `types` namespace).\n * To enable the user to write: `function something(): Web3Api` without the need for `types.Web3Api`.\n * And the same for `web3-errors`. Because this package contains error classes and constants.\n */\nexport * from 'web3-errors';\nexport * from 'web3-types';\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/src/providers.exports.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/src/types.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/src/version.ts",[],["636"],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/src/web3.ts",["637"],["638","639"],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n// eslint-disable-next-line max-classes-per-file\nimport {\n\tWeb3Context,\n\tWeb3ContextInitOptions,\n\tWeb3ContextObject,\n\tWeb3SubscriptionConstructor,\n\tisSupportedProvider,\n} from 'web3-core';\nimport { Web3Eth, RegisteredSubscription, registeredSubscriptions } from 'web3-eth';\nimport Contract from 'web3-eth-contract';\nimport { ENS, registryAddresses } from 'web3-eth-ens';\nimport { Iban } from 'web3-eth-iban';\nimport { Personal } from 'web3-eth-personal';\nimport { Net } from 'web3-net';\nimport * as utils from 'web3-utils';\nimport { isNullish, isDataFormat, isContractInitOptions } from 'web3-utils';\nimport {\n\tAddress,\n\tContractAbi,\n\tContractInitOptions,\n\tEthExecutionAPI,\n\tSupportedProviders,\n\tDataFormat,\n} from 'web3-types';\nimport { InvalidMethodParamsError } from 'web3-errors';\nimport abi from './abi.js';\nimport { initAccountsForContext } from './accounts.js';\nimport { Web3EthInterface } from './types.js';\nimport { Web3PkgInfo } from './version.js';\nimport { onNewProviderDiscovered, requestEIP6963Providers } from './web3_eip6963.js';\n\nexport class Web3<\n\tCustomRegisteredSubscription extends {\n\t\t[key: string]: Web3SubscriptionConstructor<EthExecutionAPI>;\n\t} = RegisteredSubscription,\n> extends Web3Context<EthExecutionAPI, CustomRegisteredSubscription & RegisteredSubscription> {\n\tpublic static version = Web3PkgInfo.version;\n\tpublic static utils = utils;\n\tpublic static requestEIP6963Providers = requestEIP6963Providers;\n\tpublic static onNewProviderDiscovered = onNewProviderDiscovered;\n\tpublic static modules = {\n\t\tWeb3Eth,\n\t\tIban,\n\t\tNet,\n\t\tENS,\n\t\tPersonal,\n\t};\n\n\tpublic utils: typeof utils;\n\n\tpublic eth: Web3EthInterface;\n\n\tpublic constructor(\n\t\tproviderOrContext?:\n\t\t\t| string\n\t\t\t| SupportedProviders<EthExecutionAPI>\n\t\t\t| Web3ContextInitOptions<EthExecutionAPI, CustomRegisteredSubscription>,\n\t) {\n\t\tif (\n\t\t\tisNullish(providerOrContext) ||\n\t\t\t(typeof providerOrContext === 'string' && providerOrContext.trim() === '') ||\n\t\t\t(typeof providerOrContext !== 'string' &&\n\t\t\t\t!isSupportedProvider(providerOrContext as SupportedProviders<EthExecutionAPI>) &&\n\t\t\t\t!(providerOrContext as Web3ContextInitOptions).provider)\n\t\t) {\n\t\t\tconsole.warn(\n\t\t\t\t'NOTE: web3.js is running without provider. You need to pass a provider in order to interact with the network!',\n\t\t\t);\n\t\t}\n\n\t\tlet contextInitOptions: Web3ContextInitOptions<EthExecutionAPI> = {};\n\t\tif (\n\t\t\ttypeof providerOrContext === 'string' ||\n\t\t\tisSupportedProvider(providerOrContext as SupportedProviders)\n\t\t) {\n\t\t\tcontextInitOptions.provider = providerOrContext as\n\t\t\t\t| undefined\n\t\t\t\t| string\n\t\t\t\t| SupportedProviders;\n\t\t} else if (providerOrContext) {\n\t\t\tcontextInitOptions = providerOrContext as Web3ContextInitOptions;\n\t\t} else {\n\t\t\tcontextInitOptions = {};\n\t\t}\n\n\t\tcontextInitOptions.registeredSubscriptions = {\n\t\t\t// all the Eth standard subscriptions\n\t\t\t...registeredSubscriptions,\n\t\t\t// overridden and combined with any custom subscriptions\n\t\t\t...(contextInitOptions.registeredSubscriptions ?? {}),\n\t\t} as CustomRegisteredSubscription;\n\n\t\tsuper(contextInitOptions);\n\t\tconst accounts = initAccountsForContext(this);\n\n\t\t// Init protected properties\n\t\tthis._wallet = accounts.wallet;\n\t\tthis._accountProvider = accounts;\n\n\t\tthis.utils = utils;\n\n\t\t// Have to use local alias to initiate contract context\n\t\t// eslint-disable-next-line @typescript-eslint/no-this-alias\n\t\tconst self = this;\n\n\t\tclass ContractBuilder<Abi extends ContractAbi> extends Contract<Abi> {\n\t\t\tpublic constructor(jsonInterface: Abi);\n\t\t\tpublic constructor(\n\t\t\t\tjsonInterface: Abi,\n\t\t\t\taddressOrOptionsOrContext?: Address | ContractInitOptions | Web3Context,\n\t\t\t);\n\t\t\tpublic constructor(\n\t\t\t\tjsonInterface: Abi,\n\t\t\t\taddressOrOptionsOrContext?: Address | ContractInitOptions | Web3Context,\n\t\t\t\toptionsOrContextOrReturnFormat?: ContractInitOptions | Web3Context | DataFormat,\n\t\t\t);\n\t\t\tpublic constructor(\n\t\t\t\tjsonInterface: Abi,\n\t\t\t\taddressOrOptionsOrContext?: Address | ContractInitOptions,\n\t\t\t\toptionsOrContextOrReturnFormat?: ContractInitOptions,\n\t\t\t\tcontextOrReturnFormat?: Web3Context | DataFormat,\n\t\t\t);\n\t\t\tpublic constructor(\n\t\t\t\tjsonInterface: Abi,\n\t\t\t\taddressOrOptionsOrContext?: Address | ContractInitOptions,\n\t\t\t\toptionsOrContextOrReturnFormat?: ContractInitOptions,\n\t\t\t\tcontextOrReturnFormat?: Web3Context | DataFormat,\n\t\t\t);\n\t\t\tpublic constructor(\n\t\t\t\tjsonInterface: Abi,\n\t\t\t\taddressOrOptionsOrContext?: Address | ContractInitOptions,\n\t\t\t\toptionsOrContextOrReturnFormat?: ContractInitOptions,\n\t\t\t\tcontextOrReturnFormat?: Web3Context | DataFormat,\n\t\t\t\treturnFormat?: DataFormat,\n\t\t\t) {\n\t\t\t\tif (\n\t\t\t\t\tisContractInitOptions(addressOrOptionsOrContext) &&\n\t\t\t\t\tisContractInitOptions(optionsOrContextOrReturnFormat)\n\t\t\t\t) {\n\t\t\t\t\tthrow new InvalidMethodParamsError(\n\t\t\t\t\t\t'Should not provide options at both 2nd and 3rd parameters',\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tlet address: string | undefined;\n\t\t\t\tlet options: object = {};\n\t\t\t\tlet context: Web3ContextObject;\n\t\t\t\tlet dataFormat: DataFormat | undefined;\n\n\t\t\t\t// add validation so its not a breaking change\n\t\t\t\tif (\n\t\t\t\t\t!isNullish(addressOrOptionsOrContext) &&\n\t\t\t\t\ttypeof addressOrOptionsOrContext !== 'object' &&\n\t\t\t\t\ttypeof addressOrOptionsOrContext !== 'string'\n\t\t\t\t) {\n\t\t\t\t\tthrow new InvalidMethodParamsError();\n\t\t\t\t}\n\n\t\t\t\tif (typeof addressOrOptionsOrContext === 'string') {\n\t\t\t\t\taddress = addressOrOptionsOrContext;\n\t\t\t\t}\n\t\t\t\tif (isContractInitOptions(addressOrOptionsOrContext)) {\n\t\t\t\t\toptions = addressOrOptionsOrContext as object;\n\t\t\t\t} else if (isContractInitOptions(optionsOrContextOrReturnFormat)) {\n\t\t\t\t\toptions = optionsOrContextOrReturnFormat as object;\n\t\t\t\t} else {\n\t\t\t\t\toptions = {};\n\t\t\t\t}\n\n\t\t\t\tif (addressOrOptionsOrContext instanceof Web3Context) {\n\t\t\t\t\tcontext = addressOrOptionsOrContext;\n\t\t\t\t} else if (optionsOrContextOrReturnFormat instanceof Web3Context) {\n\t\t\t\t\tcontext = optionsOrContextOrReturnFormat;\n\t\t\t\t} else if (contextOrReturnFormat instanceof Web3Context) {\n\t\t\t\t\tcontext = contextOrReturnFormat;\n\t\t\t\t} else {\n\t\t\t\t\tcontext = self.getContextObject() as Web3ContextObject;\n\t\t\t\t}\n\n\t\t\t\tif (returnFormat) {\n\t\t\t\t\tdataFormat = returnFormat;\n\t\t\t\t} else if (isDataFormat(optionsOrContextOrReturnFormat)) {\n\t\t\t\t\tdataFormat = optionsOrContextOrReturnFormat as DataFormat;\n\t\t\t\t} else if (isDataFormat(contextOrReturnFormat)) {\n\t\t\t\t\tdataFormat = contextOrReturnFormat;\n\t\t\t\t}\n\n\t\t\t\tsuper(jsonInterface, address, options, context, dataFormat);\n\t\t\t\tsuper.subscribeToContextEvents(self);\n\t\t\t}\n\t\t}\n\n\t\tconst eth = self.use(Web3Eth);\n\n\t\t// Eth Module\n\t\tthis.eth = Object.assign(eth, {\n\t\t\t// ENS module\n\t\t\tens: self.use(ENS, registryAddresses.main), // registry address defaults to main network\n\n\t\t\t// Iban helpers\n\t\t\tIban,\n\n\t\t\tnet: self.use(Net),\n\t\t\tpersonal: self.use(Personal),\n\n\t\t\t// Contract helper and module\n\t\t\tContract: ContractBuilder,\n\n\t\t\t// ABI Helpers\n\t\t\tabi,\n\n\t\t\t// Accounts helper\n\t\t\taccounts,\n\t\t});\n\t}\n}\nexport default Web3;\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/src/web3_eip6963.ts",["640","641"],[],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Web3APISpec, EIP1193Provider } from \"web3-types\";\n\n\nexport enum Eip6963EventName {\n  eip6963announceProvider = 'eip6963:announceProvider',\n  eip6963requestProvider = 'eip6963:requestProvider',\n};\n\nexport interface EIP6963ProviderInfo {\n  uuid: string;\n  name: string;\n  icon: string;\n  rdns: string;\n}\n\nexport interface EIP6963ProviderDetail<API = Web3APISpec> {\n  info: EIP6963ProviderInfo;\n  provider: EIP1193Provider<API>;\n}\n\nexport interface EIP6963AnnounceProviderEvent<API = Web3APISpec> extends CustomEvent {\n  type: Eip6963EventName.eip6963announceProvider;\n  detail: EIP6963ProviderDetail<API>;\n}\n\nexport interface EIP6963RequestProviderEvent extends Event {\n  type: Eip6963EventName.eip6963requestProvider;\n}\n\nexport const eip6963ProvidersMap: Map<string, EIP6963ProviderDetail> = new Map();\n\nexport const web3ProvidersMapUpdated = \"web3:providersMapUpdated\";\nexport interface EIP6963ProvidersMapUpdateEvent extends CustomEvent {\n  type: string;\n  detail: Map<string, EIP6963ProviderDetail>;\n}\n\nexport const requestEIP6963Providers = async () => \n   new Promise((resolve, reject) => {\n    if (typeof window === 'undefined') {\n      reject(new Error(\"window object not available, EIP-6963 is intended to be used within a browser\"));\n    }\n\n  window.addEventListener(\n    Eip6963EventName.eip6963announceProvider as any,\n    (event: EIP6963AnnounceProviderEvent) => {\n\n      eip6963ProvidersMap.set(\n        event.detail.info.uuid,\n        event.detail);\n\n      const newEvent: EIP6963ProvidersMapUpdateEvent = new CustomEvent(\n        web3ProvidersMapUpdated,\n        { detail: eip6963ProvidersMap }\n        );\n\n      window.dispatchEvent(newEvent);\n      resolve(eip6963ProvidersMap);\n\n    }\n  );\n\n  window.dispatchEvent(new Event(Eip6963EventName.eip6963requestProvider));\n\n  });\n\n\nexport const onNewProviderDiscovered = (callback: (providerEvent: EIP6963AnnounceProviderEvent) => void) => {\n  if (typeof window === 'undefined') {\n    throw new Error(\"window object not available, EIP-6963 is intended to be used within a browser\");\n  }\n  window.addEventListener(web3ProvidersMapUpdated as any, callback );\n}\n\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/benchmark/abi.ts",["642","643"],[],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { decodeParameters, encodeParameters } from 'web3-eth-abi';\n\nexport const abiDecode = async () => {\n\treturn decodeParameters(\n\t\t['uint256', 'string'],\n\t\t'0x000000000000000000000000000000000000000000000000000000008bd02b7b0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000748656c6c6f212500000000000000000000000000000000000000000000000000',\n\t);\n};\nexport const abiEncode = async () => {\n\treturn encodeParameters(['uint256', 'string'], ['2345675643', 'Hello!%']);\n};\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/benchmark/benchmark.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/benchmark/helpers.ts",[],["644"],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/benchmark/processingContract.ts",["645","646","647"],[],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiFunctionFragment, ContractOptions } from 'web3-types';\n// eslint-disable-next-line\nimport { getSendTxParams, getEthTxCallParams } from 'web3-eth-contract';\nimport { BasicAbi, BasicBytecode } from '../shared_fixtures/build/Basic';\nimport accounts from '../shared_fixtures/accounts.json';\n\nconst abiConstructor = BasicAbi.find(j => j.type === 'constructor') as AbiFunctionFragment;\nconst abiSendMethod = BasicAbi.find(\n\tj => j.type === 'function' && j.name === 'firesMultiValueEvent',\n) as AbiFunctionFragment;\nconst abiCallMethod = BasicAbi.find(\n\tj => j.type === 'function' && j.name === 'getBoolValue',\n) as AbiFunctionFragment;\n\nexport const processingContractDeploy = async () => {\n\treturn getSendTxParams({\n\t\tabi: abiConstructor,\n\t\tparams: [1123, 'asdasd'],\n\t\toptions: { dataInputFill: 'data', data: BasicBytecode },\n\t\tcontractOptions: { from: accounts[0].address } as ContractOptions,\n\t});\n};\n\nexport const processingContractMethodSend = async () => {\n\treturn getSendTxParams({\n\t\tabi: abiSendMethod,\n\t\tparams: ['asdasd', 1123, true],\n\t\toptions: { dataInputFill: 'data', to: accounts[1].address },\n\t\tcontractOptions: { from: accounts[0].address } as ContractOptions,\n\t});\n};\n\nexport const processingContractMethodCall = async () => {\n\treturn getEthTxCallParams({\n\t\tabi: abiCallMethod,\n\t\tparams: [],\n\t\toptions: { dataInputFill: 'data', to: accounts[1].address },\n\t\tcontractOptions: { from: accounts[0].address } as ContractOptions,\n\t});\n};\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/benchmark/processingTx.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/benchmark/wallet.ts",["648","649"],[],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { Wallet, create, Web3Account, recover } from 'web3-eth-accounts';\nimport { Web3AccountProvider } from 'web3-types';\nimport { context } from './helpers';\n\nconst wallet = new Wallet(context.accountProvider as Web3AccountProvider<any>);\nconst acc = create();\nwallet.add(acc);\n\nexport const sign = async () => {\n\treturn (wallet.get(acc.address) as Web3Account).sign('Some data');\n};\n\nconst signedData = {\n\tmessage: 'Some data',\n\tmessageHash: '0x1da44b586eb0729ff70a73c326926f6ed5a25f5b056e7f47fbc6e58d86871655',\n\tv: '0x1c',\n\tr: '0x297a764ab50bf53381d19ce1dc2b7dd4c456c91e38722ebced5b9f5bb54648f3',\n\ts: '0x41f216d7482608ca295651a7fa4f66a5ee5336d06a9d5b344f8a9160e1e9c2aa',\n\tsignature:\n\t\t'0x297a764ab50bf53381d19ce1dc2b7dd4c456c91e38722ebced5b9f5bb54648f341f216d7482608ca295651a7fa4f66a5ee5336d06a9d5b344f8a9160e1e9c2aa1c',\n};\n\nexport const verify = async () => {\n\treturn recover(signedData.message, signedData.v, signedData.r, signedData.s);\n};\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/cjs_black_box/test/batchRequest.test.ts",[],["650","651","652","653","654","655","656","657"],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/cjs_black_box/test/web3-eth/getBlock.test.ts",[],["658","659","660","661","662","663"],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/cjs_black_box/test/web3-eth/getTransaction.test.ts",[],["664","665","666","667","668","669"],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/cjs_black_box/test/web3-eth-accounts/create.test.ts",[],["670"],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/cjs_black_box/test/web3-eth-accounts/hashMessage.test.ts",[],["671","672","673","674","675"],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/cjs_black_box/test/web3-eth-contract/erc20.test.ts",[],["676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698","699","700"],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/e2e_utils.ts",["701"],["702","703","704","705","706"],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * @NOTE This Util method is kept separate from shared system_test_utils.ts file because\n * of it's import of .secrets.json. For this method to exist in shared system_test_utils.ts\n * file, the import path would be ../.secrets.json which doesn't resolve when the file is\n * copied over to each package's test directory. Because web3 package is the only package\n * running these E2E tests that use Sepolia and Mainnet, this util exists here for now.\n */\n\nimport { getSystemTestBackend, BACKEND } from '../shared_fixtures/system_tests_utils';\n// eslint-disable-next-line import/no-relative-packages\nimport secrets from '../../../../.secrets.json';\n\nexport const getSystemE2ETestProvider = (): string => {\n\tif (process.env.WEB3_SYSTEM_TEST_MODE === 'http') {\n\t\treturn getSystemTestBackend() === BACKEND.SEPOLIA\n\t\t\t? process.env.INFURA_SEPOLIA_HTTP ?? secrets.SEPOLIA.HTTP\n\t\t\t: process.env.INFURA_MAINNET_HTTP ?? secrets.MAINNET.HTTP;\n\t}\n\treturn getSystemTestBackend() === BACKEND.SEPOLIA\n\t\t? process.env.INFURA_SEPOLIA_WS ?? secrets.SEPOLIA.WS\n\t\t: process.env.INFURA_MAINNET_WS ?? secrets.MAINNET.WS;\n};\n\nexport const getE2ETestAccountAddress = (): string => {\n\tif (process.env.TEST_ACCOUNT_ADDRESS !== undefined) {\n\t\treturn process.env.TEST_ACCOUNT_ADDRESS;\n\t\t// eslint-disable-next-line no-else-return\n\t} else if (getSystemTestBackend() === BACKEND.SEPOLIA || getSystemTestBackend() === BACKEND.MAINNET) {\n\t\treturn secrets[getSystemTestBackend().toUpperCase() as 'SEPOLIA' | 'MAINNET'].ACCOUNT\n\t\t\t.address;\n\t}\n\n\tthrow new Error('Unable to get test account address');\n};\n\nexport const getE2ETestContractAddress = () =>\n\t// eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n\tsecrets[getSystemTestBackend().toUpperCase() as 'SEPOLIA' | 'MAINNET']\n\t\t.DEPLOYED_TEST_CONTRACT_ADDRESS as string;\n\nexport const getAllowedSendTransaction = (): boolean => {\n\tif (process.env.ALLOWED_SEND_TRANSACTION !== undefined) {\n\t\t// https://github.com/actions/runner/issues/1483\n\t\tif (process.env.ALLOWED_SEND_TRANSACTION === 'false') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn Boolean(process.env.ALLOWED_SEND_TRANSACTION);\n\t\t// eslint-disable-next-line no-else-return\n\t} else if (getSystemTestBackend() === BACKEND.SEPOLIA || getSystemTestBackend() === BACKEND.MAINNET) {\n\t\treturn secrets[getSystemTestBackend().toUpperCase() as 'SEPOLIA' | 'MAINNET']\n\t\t\t.ALLOWED_SEND_TRANSACTION;\n\t}\n\n\treturn false;\n};\n\nexport const getE2ETestAccountPrivateKey = (): string => {\n\tif (process.env.TEST_ACCOUNT_PRIVATE_KEY !== undefined) {\n\t\treturn process.env.TEST_ACCOUNT_PRIVATE_KEY;\n\t\t// eslint-disable-next-line no-else-return\n\t} else if (getSystemTestBackend() === BACKEND.SEPOLIA || getSystemTestBackend() === BACKEND.MAINNET) {\n\t\treturn secrets[getSystemTestBackend().toUpperCase() as 'SEPOLIA' | 'MAINNET'].ACCOUNT\n\t\t\t.privateKey;\n\t}\n\n\tthrow new Error('Unable to get test account private key');\n};\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/estimate_gas.test.ts",["707","708"],["709","710","711","712"],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { toHex } from 'web3-utils';\n\nimport Web3, { FMT_BYTES, FMT_NUMBER, Transaction } from '../../src';\nimport { getSystemE2ETestProvider } from './e2e_utils';\nimport { closeOpenConnection, getSystemTestBackend, BACKEND } from '../shared_fixtures/system_tests_utils';\nimport { toAllVariants } from '../shared_fixtures/utils';\nimport { mainnetBlockData } from './fixtures/mainnet';\nimport { sepoliaBlockData } from './fixtures/sepolia';\n\ndescribe(`${getSystemTestBackend()} tests - estimateGas`, () => {\n\tconst provider = getSystemE2ETestProvider();\n\tconst blockData = getSystemTestBackend() === BACKEND.SEPOLIA ? sepoliaBlockData : mainnetBlockData;\n\tconst simpleEthTransaction: Transaction = {\n\t\tfrom: '0x0000000000000000000000000000000000000000',\n\t\tto: '0x0000000000000000000000000000000000000000',\n\t\tvalue: '0x1',\n\t};\n\tconst expectedSimpleEthTransactionGas = 21000;\n\tconst contractDeploymentTransaction: Transaction = {\n\t\tfrom: '0x0000000000000000000000000000000000000000',\n\t\tdata: '0x60806040523480156200001157600080fd5b5060405162000a6a38038062000a6a8339818101604052810190620000379190620002a4565b80600090805190602001906200004f92919062000057565b505062000359565b828054620000659062000324565b90600052602060002090601f016020900481019282620000895760008555620000d5565b82601f10620000a457805160ff1916838001178555620000d5565b82800160010185558215620000d5579182015b82811115620000d4578251825591602001919060010190620000b7565b5b509050620000e49190620000e8565b5090565b5b8082111562000103576000816000905550600101620000e9565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001708262000125565b810181811067ffffffffffffffff8211171562000192576200019162000136565b5b80604052505050565b6000620001a762000107565b9050620001b5828262000165565b919050565b600067ffffffffffffffff821115620001d857620001d762000136565b5b620001e38262000125565b9050602081019050919050565b60005b8381101562000210578082015181840152602081019050620001f3565b8381111562000220576000848401525b50505050565b60006200023d6200023784620001ba565b6200019b565b9050828152602081018484840111156200025c576200025b62000120565b5b62000269848285620001f0565b509392505050565b600082601f8301126200028957620002886200011b565b5b81516200029b84826020860162000226565b91505092915050565b600060208284031215620002bd57620002bc62000111565b5b600082015167ffffffffffffffff811115620002de57620002dd62000116565b5b620002ec8482850162000271565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200033d57607f821691505b602082108103620003535762000352620002f5565b5b50919050565b61070180620003696000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063a41368621461003b578063cfae32171461006c575b600080fd5b6100556004803603810190610050919061043f565b61008a565b60405161006392919061052b565b60405180910390f35b6100746101b0565b604051610081919061055b565b60405180910390f35b600060607f0d363f2fba46ab11b6db8da0125b0d5484787c44e265b48810735998bab12b756000846040516100c0929190610672565b60405180910390a182600090805190602001906100de929190610242565b507f7d7846723bda52976e0286c6efffee937ee9f76817a867ec70531ad29fb1fc0e600060405161010f91906106a9565b60405180910390a160016000808054610127906105ac565b80601f0160208091040260200160405190810160405280929190818152602001828054610153906105ac565b80156101a05780601f10610175576101008083540402835291602001916101a0565b820191906000526020600020905b81548152906001019060200180831161018357829003601f168201915b5050505050905091509150915091565b6060600080546101bf906105ac565b80601f01602080910402602001604051908101604052809291908181526020018280546101eb906105ac565b80156102385780601f1061020d57610100808354040283529160200191610238565b820191906000526020600020905b81548152906001019060200180831161021b57829003601f168201915b5050505050905090565b82805461024e906105ac565b90600052602060002090601f01602090048101928261027057600085556102b7565b82601f1061028957805160ff19168380011785556102b7565b828001600101855582156102b7579182015b828111156102b657825182559160200191906001019061029b565b5b5090506102c491906102c8565b5090565b5b808211156102e15760008160009055506001016102c9565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61034c82610303565b810181811067ffffffffffffffff8211171561036b5761036a610314565b5b80604052505050565b600061037e6102e5565b905061038a8282610343565b919050565b600067ffffffffffffffff8211156103aa576103a9610314565b5b6103b382610303565b9050602081019050919050565b82818337600083830152505050565b60006103e26103dd8461038f565b610374565b9050828152602081018484840111156103fe576103fd6102fe565b5b6104098482856103c0565b509392505050565b600082601f830112610426576104256102f9565b5b81356104368482602086016103cf565b91505092915050565b600060208284031215610455576104546102ef565b5b600082013567ffffffffffffffff811115610473576104726102f4565b5b61047f84828501610411565b91505092915050565b60008115159050919050565b61049d81610488565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156104dd5780820151818401526020810190506104c2565b838111156104ec576000848401525b50505050565b60006104fd826104a3565b61050781856104ae565b93506105178185602086016104bf565b61052081610303565b840191505092915050565b60006040820190506105406000830185610494565b818103602083015261055281846104f2565b90509392505050565b6000602082019050818103600083015261057581846104f2565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806105c457607f821691505b6020821081036105d7576105d661057d565b5b50919050565b60008190508160005260206000209050919050565b600081546105ff816105ac565b61060981866104ae565b94506001821660008114610624576001811461063657610669565b60ff1983168652602086019350610669565b61063f856105dd565b60005b8381101561066157815481890152600182019150602081019050610642565b808801955050505b50505092915050565b6000604082019050818103600083015261068c81856105f2565b905081810360208301526106a081846104f2565b90509392505050565b600060208201905081810360008301526106c381846105f2565b90509291505056fea2646970667358221220fe0f28c9f8ef0a13a95934b974e7bc2ca6762b40a5b93ccd6ca2038f454bf52764736f6c634300080e003300000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000017736f6c79656e7420677265656e2069732070656f706c65000000000000000000',\n\t};\n\tconst expectedContractDeploymentTransactionGas =\n\t\tgetSystemTestBackend() === BACKEND.SEPOLIA ? 475494 : 475494;\n\n\tlet web3: Web3;\n\n\tbeforeAll(() => {\n\t\tweb3 = new Web3(provider);\n\t});\n\n\tafterAll(async () => {\n\t\tawait closeOpenConnection(web3);\n\t});\n\n\tit.each(\n\t\ttoAllVariants<{\n\t\t\ttransaction: Transaction;\n\t\t\tblock: 'latest' | 'pending' | 'finalized' | 'safe' | 'blockHash' | 'blockNumber';\n\t\t\tformat: string;\n\t\t}>({\n\t\t\ttransaction: [simpleEthTransaction, contractDeploymentTransaction],\n\t\t\tblock: ['latest', 'pending', 'safe', 'finalized', 'blockHash', 'blockNumber'],\n\t\t\tformat: Object.values(FMT_NUMBER),\n\t\t}),\n\t)('estimateGas', async ({ transaction, block, format }) => {\n\t\tlet _blockData = blockData[block];\n\t\tif (\n\t\t\tgetSystemTestBackend() === BACKEND.MAINNET &&\n\t\t\t(block === 'blockHash' || block === 'blockNumber')\n\t\t) {\n\t\t\t/**\n\t\t\t * @NOTE Getting a block too far back in history\n\t\t\t * results in a missing trie node error, so\n\t\t\t * we get latest block for this test\n\t\t\t */\n\t\t\tconst latestBlock = await web3.eth.getBlock('finalized');\n\t\t\t_blockData =\n\t\t\t\tblock === 'blockHash' ? (latestBlock.hash as string) : toHex(latestBlock.number);\n\t\t}\n\n\t\tconst expectedGasEstimate =\n\t\t\ttransaction.data !== undefined\n\t\t\t\t? expectedContractDeploymentTransactionGas\n\t\t\t\t: expectedSimpleEthTransactionGas;\n\t\tconst result = await web3.eth.estimateGas(transaction, _blockData, {\n\t\t\tnumber: format as FMT_NUMBER,\n\t\t\tbytes: FMT_BYTES.HEX,\n\t\t});\n\n\t\tswitch (format) {\n\t\t\tcase 'NUMBER_NUMBER':\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(result).toBe(expectedGasEstimate);\n\t\t\t\tbreak;\n\t\t\tcase 'NUMBER_HEX':\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(result).toBe(toHex(expectedGasEstimate));\n\t\t\t\tbreak;\n\t\t\tcase 'NUMBER_STR':\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(result).toBe(`${expectedGasEstimate}`);\n\t\t\t\tbreak;\n\t\t\tcase 'NUMBER_BIGINT':\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(result).toBe(BigInt(expectedGasEstimate));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Unhandled format');\n\t\t}\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/fixtures/mainnet.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/fixtures/mainnet_block_hydrated.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/fixtures/sepolia.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/get_accounts.test.ts",["713"],[],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport Web3 from '../../src';\nimport { getSystemE2ETestProvider } from './e2e_utils';\nimport { closeOpenConnection, getSystemTestBackend } from '../shared_fixtures/system_tests_utils';\n\ndescribe(`${getSystemTestBackend()} tests - getAccounts`, () => {\n\tconst provider = getSystemE2ETestProvider();\n\n\tlet web3: Web3;\n\n\tbeforeAll(() => {\n\t\tweb3 = new Web3(provider);\n\t});\n\n\tafterAll(async () => {\n\t\tawait closeOpenConnection(web3);\n\t});\n\n\tit('should get the accounts for the connected node', async () => {\n\t\tconst result = await web3.eth.getAccounts();\n\t\texpect(result).toBeInstanceOf(Array<string>);\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/get_balance.test.ts",["714","715"],["716","717","718","719","720","721"],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { isBigInt, isHexStrict, isString } from 'web3-validator';\nimport { toHex } from 'web3-utils';\n\nimport Web3, { FMT_BYTES, FMT_NUMBER } from '../../src';\nimport { getSystemE2ETestProvider, getE2ETestAccountAddress } from './e2e_utils';\nimport { closeOpenConnection, getSystemTestBackend, BACKEND } from '../shared_fixtures/system_tests_utils';\nimport { toAllVariants } from '../shared_fixtures/utils';\nimport { sepoliaBlockData } from './fixtures/sepolia';\nimport { mainnetBlockData } from './fixtures/mainnet';\n\ndescribe(`${getSystemTestBackend()} tests - getBalance`, () => {\n\tconst provider = getSystemE2ETestProvider();\n\tconst blockData = getSystemTestBackend() === BACKEND.SEPOLIA ? sepoliaBlockData : mainnetBlockData;\n\tconst expectedBalance =\n\t\tgetSystemTestBackend() === BACKEND.SEPOLIA ? '172530374997217200' : '2099795781954790368';\n\n\tlet web3: Web3;\n\n\tbeforeAll(() => {\n\t\tweb3 = new Web3(provider);\n\t});\n\n\tafterAll(async () => {\n\t\tawait closeOpenConnection(web3);\n\t});\n\n\tit.each(\n\t\ttoAllVariants<{\n\t\t\tblock:\n\t\t\t\t| 'earliest'\n\t\t\t\t| 'latest'\n\t\t\t\t| 'pending'\n\t\t\t\t| 'finalized'\n\t\t\t\t| 'safe'\n\t\t\t\t| 'blockHash'\n\t\t\t\t| 'blockNumber';\n\t\t\tformat: string;\n\t\t}>({\n\t\t\tblock: [\n\t\t\t\t'earliest',\n\t\t\t\t'latest',\n\t\t\t\t'pending',\n\t\t\t\t'safe',\n\t\t\t\t'finalized',\n\t\t\t\t'blockHash',\n\t\t\t\t'blockNumber',\n\t\t\t],\n\t\t\tformat: [FMT_NUMBER.BIGINT, FMT_NUMBER.HEX, FMT_NUMBER.STR],\n\t\t}),\n\t)('getBalance', async ({ block, format }) => {\n\t\tconst result = await web3.eth.getBalance(getE2ETestAccountAddress(), blockData[block], {\n\t\t\tnumber: format as FMT_NUMBER,\n\t\t\tbytes: FMT_BYTES.HEX,\n\t\t});\n\n\t\tif (block === 'blockHash' || block === 'blockNumber') {\n\t\t\tswitch (format) {\n\t\t\t\tcase 'NUMBER_HEX':\n\t\t\t\t\t/**\n\t\t\t\t\t * @NOTE toHex assumes if a string is passed it's a hexadecimal\n\t\t\t\t\t * which is why the number string, expectedBalance, is being\n\t\t\t\t\t * converted to a BigInt\n\t\t\t\t\t */\n\t\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\t\texpect(result).toBe(toHex(BigInt(expectedBalance)));\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'NUMBER_STR':\n\t\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\t\texpect(result).toBe(expectedBalance);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'NUMBER_BIGINT':\n\t\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\t\texpect(result).toBe(BigInt(expectedBalance));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Unhandled format');\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (format) {\n\t\t\t\tcase 'NUMBER_HEX':\n\t\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\t\texpect(isHexStrict(result)).toBeTruthy();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'NUMBER_STR':\n\t\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\t\texpect(isString(result)).toBeTruthy();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'NUMBER_BIGINT':\n\t\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\t\texpect(isBigInt(result)).toBeTruthy();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Unhandled format');\n\t\t\t}\n\t\t}\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/get_block.test.ts",["722"],["723","724","725"],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { validator } from 'web3-validator';\nimport { blockSchema } from 'web3-eth';\nimport { Block, Transaction } from 'web3-types';\nimport { format as formatter } from 'web3-utils';\n\nimport Web3, { FMT_BYTES, FMT_NUMBER } from '../../src';\nimport { getSystemE2ETestProvider } from './e2e_utils';\nimport { closeOpenConnection, getSystemTestBackend, BACKEND } from '../shared_fixtures/system_tests_utils';\nimport { toAllVariants } from '../shared_fixtures/utils';\nimport { sepoliaBlock, sepoliaBlockData, sepoliaBlockHydrated } from './fixtures/sepolia';\nimport { mainnetBlockHydrated } from './fixtures/mainnet_block_hydrated';\nimport { mainnetBlock, mainnetBlockData } from './fixtures/mainnet';\n\ndescribe(`${getSystemTestBackend()} tests - getBlock`, () => {\n\tconst provider = getSystemE2ETestProvider();\n\tconst blockData = getSystemTestBackend() === BACKEND.SEPOLIA ? sepoliaBlockData : mainnetBlockData;\n\n\tlet web3: Web3;\n\n\tbeforeAll(() => {\n\t\tweb3 = new Web3(provider);\n\t});\n\n\tafterAll(async () => {\n\t\tawait closeOpenConnection(web3);\n\t});\n\n\tit.each(\n\t\ttoAllVariants<{\n\t\t\tblock:\n\t\t\t\t| 'earliest'\n\t\t\t\t| 'latest'\n\t\t\t\t| 'pending'\n\t\t\t\t| 'finalized'\n\t\t\t\t| 'safe'\n\t\t\t\t| 'blockHash'\n\t\t\t\t| 'blockNumber';\n\t\t\thydrated: boolean;\n\t\t\tformat: string;\n\t\t}>({\n\t\t\tblock: ['earliest', 'latest', 'safe', 'finalized', 'blockHash', 'blockNumber'],\n\t\t\thydrated: [true, false],\n\t\t\tformat: Object.values(FMT_NUMBER),\n\t\t}),\n\t)('getBlock', async ({ hydrated, block, format }) => {\n\t\tconst result = {\n\t\t\t...(await web3.eth.getBlock(blockData[block], hydrated, {\n\t\t\t\tnumber: format as FMT_NUMBER,\n\t\t\t\tbytes: FMT_BYTES.HEX,\n\t\t\t})),\n\t\t};\n\t\tlet expectedBlock: Block = ((): Block => {\n\t\t\tif (getSystemTestBackend() === BACKEND.SEPOLIA) {\n\t\t\t\treturn hydrated ? sepoliaBlockHydrated : sepoliaBlock;\n\t\t\t}\n\n\t\t\treturn hydrated ? mainnetBlockHydrated : mainnetBlock;\n\t\t})();\n\t\tif (format !== FMT_NUMBER.HEX)\n\t\t\texpectedBlock = formatter(blockSchema, result as unknown as Block, {\n\t\t\t\tnumber: format as FMT_NUMBER,\n\t\t\t\tbytes: FMT_BYTES.HEX,\n\t\t\t});\n\n\t\tif (blockData[block] === 'pending') {\n\t\t\tresult.nonce = '0x0';\n\t\t\tresult.miner = '0x0000000000000000000000000000000000000000';\n\t\t\tresult.totalDifficulty = '0x0';\n\t\t}\n\n\t\tif (block === 'blockHash' || block === 'blockNumber') {\n\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\texpect(result).toEqual(expectedBlock);\n\t\t} else {\n\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\texpect(validator.validateJSONSchema(blockSchema, result)).toBeUndefined();\n\n\t\t\tif (hydrated && result.transactions?.length > 0) {\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(result.transactions).toBeInstanceOf(Array<Transaction>);\n\t\t\t}\n\t\t}\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/get_block_number.test.ts",["726"],["727","728","729","730"],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { isBigInt, isHexStrict, isNumber, isString } from 'web3-validator';\n\nimport Web3, { FMT_BYTES, FMT_NUMBER } from '../../src';\nimport { getSystemE2ETestProvider } from './e2e_utils';\nimport { closeOpenConnection, getSystemTestBackend } from '../shared_fixtures/system_tests_utils';\nimport { toAllVariants } from '../shared_fixtures/utils';\n\ndescribe(`${getSystemTestBackend()} tests - getBlockNumber`, () => {\n\tconst provider = getSystemE2ETestProvider();\n\n\tlet web3: Web3;\n\n\tbeforeAll(() => {\n\t\tweb3 = new Web3(provider);\n\t});\n\n\tafterAll(async () => {\n\t\tawait closeOpenConnection(web3);\n\t});\n\n\tit.each(\n\t\ttoAllVariants<{\n\t\t\tformat: string;\n\t\t}>({\n\t\t\tformat: Object.values(FMT_NUMBER),\n\t\t}),\n\t)('getBlockNumber', async ({ format }) => {\n\t\tconst result = await web3.eth.getBlockNumber({\n\t\t\tnumber: format as FMT_NUMBER,\n\t\t\tbytes: FMT_BYTES.HEX,\n\t\t});\n\n\t\tswitch (format) {\n\t\t\tcase 'NUMBER_NUMBER':\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(isNumber(result)).toBeTruthy();\n\t\t\t\tbreak;\n\t\t\tcase 'NUMBER_HEX':\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(isHexStrict(result)).toBeTruthy();\n\t\t\t\tbreak;\n\t\t\tcase 'NUMBER_STR':\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(isString(result)).toBeTruthy();\n\t\t\t\tbreak;\n\t\t\tcase 'NUMBER_BIGINT':\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(isBigInt(result)).toBeTruthy();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Unhandled format');\n\t\t}\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/get_block_transaction_count.test.ts",["731"],["732","733","734","735","736","737","738","739"],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { isBigInt, isHexStrict, isNumber, isString } from 'web3-validator';\nimport { toHex } from 'web3-utils';\n\nimport Web3, { FMT_BYTES, FMT_NUMBER } from '../../src';\nimport { getSystemE2ETestProvider } from './e2e_utils';\nimport { closeOpenConnection, getSystemTestBackend, BACKEND } from '../shared_fixtures/system_tests_utils';\nimport { toAllVariants } from '../shared_fixtures/utils';\nimport { sepoliaBlockData } from './fixtures/sepolia';\nimport { mainnetBlockData } from './fixtures/mainnet';\n\ndescribe(`${getSystemTestBackend()} tests - getBlockTransactionCount`, () => {\n\tconst provider = getSystemE2ETestProvider();\n\tconst blockData = getSystemTestBackend() === BACKEND.SEPOLIA ? sepoliaBlockData : mainnetBlockData;\n\tconst expectedTransactionCount = getSystemTestBackend() === BACKEND.SEPOLIA ? 30 : 196;\n\n\tlet web3: Web3;\n\n\tbeforeAll(() => {\n\t\tweb3 = new Web3(provider);\n\t});\n\n\tafterAll(async () => {\n\t\tawait closeOpenConnection(web3);\n\t});\n\n\tit.each(\n\t\ttoAllVariants<{\n\t\t\tblock:\n\t\t\t\t| 'earliest'\n\t\t\t\t| 'latest'\n\t\t\t\t| 'pending'\n\t\t\t\t| 'finalized'\n\t\t\t\t| 'safe'\n\t\t\t\t| 'blockHash'\n\t\t\t\t| 'blockNumber';\n\t\t\tformat: string;\n\t\t}>({\n\t\t\tblock: [\n\t\t\t\t'earliest',\n\t\t\t\t'latest',\n\t\t\t\t'pending',\n\t\t\t\t'safe',\n\t\t\t\t'finalized',\n\t\t\t\t'blockHash',\n\t\t\t\t'blockNumber',\n\t\t\t],\n\t\t\tformat: Object.values(FMT_NUMBER),\n\t\t}),\n\t)('getBlockTransactionCount', async ({ block, format }) => {\n\t\tconst result = await web3.eth.getBlockTransactionCount(blockData[block], {\n\t\t\tnumber: format as FMT_NUMBER,\n\t\t\tbytes: FMT_BYTES.HEX,\n\t\t});\n\n\t\tif (block === 'blockHash' || block === 'blockNumber') {\n\t\t\tswitch (format) {\n\t\t\t\tcase 'NUMBER_NUMBER':\n\t\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\t\texpect(result).toBe(expectedTransactionCount);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'NUMBER_HEX':\n\t\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\t\texpect(result).toBe(toHex(expectedTransactionCount));\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'NUMBER_STR':\n\t\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\t\texpect(result).toBe(`${expectedTransactionCount}`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'NUMBER_BIGINT':\n\t\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\t\texpect(result).toBe(BigInt(expectedTransactionCount));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Unhandled format');\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (format) {\n\t\t\t\tcase 'NUMBER_NUMBER':\n\t\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\t\texpect(isNumber(result)).toBeTruthy();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'NUMBER_HEX':\n\t\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\t\texpect(isHexStrict(result)).toBeTruthy();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'NUMBER_STR':\n\t\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\t\texpect(isString(result)).toBeTruthy();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'NUMBER_BIGINT':\n\t\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\t\texpect(isBigInt(result)).toBeTruthy();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Unhandled format');\n\t\t\t}\n\t\t}\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/get_block_uncle_count.test.ts",["740"],["741"],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport Web3 from '../../src';\nimport { getSystemE2ETestProvider } from './e2e_utils';\nimport { closeOpenConnection, getSystemTestBackend, describeIf, BACKEND} from '../shared_fixtures/system_tests_utils';\nimport { toAllVariants } from '../shared_fixtures/utils';\nimport { sepoliaBlockData } from './fixtures/sepolia';\nimport { mainnetBlockData } from './fixtures/mainnet';\n\ndescribeIf(getSystemTestBackend() !== 'hardhat')(`${getSystemTestBackend()} tests - getBlockUncleCount`, () => {\n\tconst provider = getSystemE2ETestProvider();\n\tconst blockData = getSystemTestBackend() === BACKEND.SEPOLIA ? sepoliaBlockData : mainnetBlockData;\n\n\tlet web3: Web3;\n\n\tbeforeAll(() => {\n\t\tweb3 = new Web3(provider);\n\t});\n\n\tafterAll(async () => {\n\t\tawait closeOpenConnection(web3);\n\t});\n\t// eslint-disable-next-line jest/consistent-test-it\n\tit.each(\n\t\ttoAllVariants<{\n\t\t\tblock:\n\t\t\t\t| 'earliest'\n\t\t\t\t| 'latest'\n\t\t\t\t| 'pending'\n\t\t\t\t| 'finalized'\n\t\t\t\t| 'safe'\n\t\t\t\t| 'blockHash'\n\t\t\t\t| 'blockNumber';\n\t\t}>({\n\t\t\tblock: [\n\t\t\t\t'earliest',\n\t\t\t\t'latest',\n\t\t\t\t'pending',\n\t\t\t\t'safe',\n\t\t\t\t'finalized',\n\t\t\t\t'blockHash',\n\t\t\t\t'blockNumber',\n\t\t\t],\n\t\t}),\n\t)('getBlockUncleCount', async ({ block }) => {\n\t\tconst result = await web3.eth.getBlockUncleCount(blockData[block]);\n\n\t\texpect(result).toBe(BigInt(0));\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/get_chain_id.test.ts",["742"],["743","744","745","746"],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { toHex } from 'web3-utils';\n\nimport Web3, { FMT_BYTES, FMT_NUMBER } from '../../src';\nimport { getSystemE2ETestProvider } from './e2e_utils';\nimport { closeOpenConnection, getSystemTestBackend, BACKEND } from '../shared_fixtures/system_tests_utils';\nimport { toAllVariants } from '../shared_fixtures/utils';\n\ndescribe(`${getSystemTestBackend()} tests - getChainId`, () => {\n\tconst provider = getSystemE2ETestProvider();\n\tconst expectedChainId = getSystemTestBackend() === BACKEND.SEPOLIA ? 11155111 : 1;\n\n\tlet web3: Web3;\n\n\tbeforeAll(() => {\n\t\tweb3 = new Web3(provider);\n\t});\n\n\tafterAll(async () => {\n\t\tawait closeOpenConnection(web3);\n\t});\n\n\tit.each(\n\t\ttoAllVariants<{\n\t\t\tformat: string;\n\t\t}>({\n\t\t\tformat: Object.values(FMT_NUMBER),\n\t\t}),\n\t)('getChainId', async ({ format }) => {\n\t\tconst result = await web3.eth.getChainId({\n\t\t\tnumber: format as FMT_NUMBER,\n\t\t\tbytes: FMT_BYTES.HEX,\n\t\t});\n\n\t\tswitch (format) {\n\t\t\tcase 'NUMBER_NUMBER':\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(result).toBe(expectedChainId);\n\t\t\t\tbreak;\n\t\t\tcase 'NUMBER_HEX':\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(result).toBe(toHex(expectedChainId));\n\t\t\t\tbreak;\n\t\t\tcase 'NUMBER_STR':\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(result).toBe(`${expectedChainId}`);\n\t\t\t\tbreak;\n\t\t\tcase 'NUMBER_BIGINT':\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(result).toBe(BigInt(expectedChainId));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Unhandled format');\n\t\t}\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/get_fee_history.test.ts",["747"],[],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { feeHistorySchema } from 'web3-eth';\n\nimport Web3, { FMT_BYTES, FMT_NUMBER, Numbers } from '../../src';\nimport { getSystemE2ETestProvider } from './e2e_utils';\nimport { closeOpenConnection, getSystemTestBackend } from '../shared_fixtures/system_tests_utils';\nimport { toAllVariants } from '../shared_fixtures/utils';\n\ndescribe(`${getSystemTestBackend()} tests - estimateGas`, () => {\n\tconst provider = getSystemE2ETestProvider();\n\tconst blockData: {\n\t\tearliest: 'earliest';\n\t\tlatest: 'latest';\n\t\tpending: 'pending';\n\t\tfinalized: 'finalized';\n\t\tsafe: 'safe';\n\t\tblockNumber: number;\n\t\tblockHash: string;\n\t} = {\n\t\tearliest: 'earliest',\n\t\tlatest: 'latest',\n\t\tpending: 'pending',\n\t\tfinalized: 'finalized',\n\t\tsafe: 'safe',\n\t\tblockNumber: getSystemTestBackend() === 'sepolia' ? 3240768 : 17029884,\n\t\tblockHash:\n\t\t\tgetSystemTestBackend() === 'sepolia'\n\t\t\t\t? '0xe5e66eab79bf9236eface52c33ecdbad381069e533dc70e3f54e2f7727b5f6ca'\n\t\t\t\t: '0x2850e4a813762b2de589fa5268eacb92572defaf9520608deb129699e504cab2',\n\t};\n\n\tlet web3: Web3;\n\n\tbeforeAll(() => {\n\t\tweb3 = new Web3(provider);\n\t});\n\n\tafterAll(async () => {\n\t\tawait closeOpenConnection(web3);\n\t});\n\n\tit.each(\n\t\ttoAllVariants<{\n\t\t\tblockCount: Numbers;\n\t\t\tnewestBlock: 'earliest' | 'latest' | 'pending' | 'finalized' | 'safe' | 'blockNumber';\n\t\t\trewardPercentiles: Numbers[];\n\t\t\tformat: string;\n\t\t}>({\n\t\t\tblockCount: [1, '2', 3, BigInt(4)],\n\t\t\tnewestBlock: ['earliest', 'latest', 'pending', 'safe', 'finalized', 'blockNumber'],\n\t\t\trewardPercentiles: [['0xa', '20', 30, BigInt(40)]],\n\t\t\tformat: Object.values(FMT_NUMBER),\n\t\t}),\n\t)('getFeeHistory', async ({ blockCount, newestBlock, rewardPercentiles, format }) => {\n\t\tconst result = await web3.eth.getFeeHistory(\n\t\t\tblockCount,\n\t\t\tblockData[newestBlock],\n\t\t\trewardPercentiles,\n\t\t\t{\n\t\t\t\tnumber: format as FMT_NUMBER,\n\t\t\t\tbytes: FMT_BYTES.HEX,\n\t\t\t},\n\t\t);\n\n\t\tconst resultKeys = Object.keys(result);\n\t\tconst schemaProperties = Object.keys(feeHistorySchema.properties);\n\t\tresultKeys.forEach(prop => expect(schemaProperties).toContain(prop));\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/get_gas_price.test.ts",["748"],["749","750","751","752"],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { isBigInt, isHexStrict, isNumber, isString } from 'web3-validator';\n\nimport Web3, { FMT_BYTES, FMT_NUMBER } from '../../src';\nimport { getSystemE2ETestProvider } from './e2e_utils';\nimport { closeOpenConnection, getSystemTestBackend } from '../shared_fixtures/system_tests_utils';\nimport { toAllVariants } from '../shared_fixtures/utils';\n\ndescribe(`${getSystemTestBackend()} tests - getGasPrice`, () => {\n\tconst provider = getSystemE2ETestProvider();\n\n\tlet web3: Web3;\n\n\tbeforeAll(() => {\n\t\tweb3 = new Web3(provider);\n\t});\n\n\tafterAll(async () => {\n\t\tawait closeOpenConnection(web3);\n\t});\n\n\tit.each(\n\t\ttoAllVariants<{\n\t\t\tformat: string;\n\t\t}>({\n\t\t\tformat: Object.values(FMT_NUMBER),\n\t\t}),\n\t)('getGasPrice', async ({ format }) => {\n\t\tconst result = await web3.eth.getGasPrice({\n\t\t\tnumber: format as FMT_NUMBER,\n\t\t\tbytes: FMT_BYTES.HEX,\n\t\t});\n\n\t\tswitch (format) {\n\t\t\tcase 'NUMBER_NUMBER':\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(isNumber(result)).toBeTruthy();\n\t\t\t\tbreak;\n\t\t\tcase 'NUMBER_HEX':\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(isHexStrict(result)).toBeTruthy();\n\t\t\t\tbreak;\n\t\t\tcase 'NUMBER_STR':\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(isString(result)).toBeTruthy();\n\t\t\t\tbreak;\n\t\t\tcase 'NUMBER_BIGINT':\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(isBigInt(result)).toBeTruthy();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Unhandled format');\n\t\t}\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/get_id.test.ts",["753"],[],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport Web3 from '../../src';\nimport { getSystemE2ETestProvider } from './e2e_utils';\nimport { closeOpenConnection, getSystemTestBackend, BACKEND } from '../shared_fixtures/system_tests_utils';\n\ndescribe(`${getSystemTestBackend()} tests - getId`, () => {\n\tconst provider = getSystemE2ETestProvider();\n\tconst expectedChainId = getSystemTestBackend() === BACKEND.SEPOLIA ? BigInt(11155111) : BigInt(1);\n\n\tlet web3: Web3;\n\n\tbeforeAll(() => {\n\t\tweb3 = new Web3(provider);\n\t});\n\n\tafterAll(async () => {\n\t\tawait closeOpenConnection(web3);\n\t});\n\n\tit('should get the network id for the connected node', async () => {\n\t\tconst result = await web3.eth.net.getId();\n\t\texpect(result).toBe(expectedChainId);\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/get_peer_count.test.ts",["754"],[],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport Web3 from '../../src';\nimport { getSystemE2ETestProvider } from './e2e_utils';\nimport { closeOpenConnection, getSystemTestBackend } from '../shared_fixtures/system_tests_utils';\n\ndescribe(`${getSystemTestBackend()} tests - getPeerCount`, () => {\n\tconst provider = getSystemE2ETestProvider();\n\n\tlet web3: Web3;\n\n\tbeforeAll(() => {\n\t\tweb3 = new Web3(provider);\n\t});\n\n\tafterAll(async () => {\n\t\tawait closeOpenConnection(web3);\n\t});\n\n\tit('should get the peer count for the connected node', async () => {\n\t\tconst result = await web3.eth.net.getPeerCount();\n\t\texpect(typeof result).toBe('bigint');\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/get_proof.test.ts",["755"],["756","757","758","759","760","761","762","763","764","765","766","767","768","769"],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/* eslint-disable jest/no-conditional-expect */\n\nimport Web3, { AccountObject } from '../../src';\nimport { getSystemE2ETestProvider } from './e2e_utils';\nimport { closeOpenConnection, getSystemTestBackend, BACKEND } from '../shared_fixtures/system_tests_utils';\nimport { toAllVariants } from '../shared_fixtures/utils';\nimport { mainnetBlockData, mainnetProof } from './fixtures/mainnet';\nimport { sepoliaBlockData, sepoliaProof } from './fixtures/sepolia';\n\ndescribe(`${getSystemTestBackend()} tests - getProof`, () => {\n\tconst provider = getSystemE2ETestProvider();\n\tconst blockData = getSystemTestBackend() === BACKEND.SEPOLIA ? sepoliaBlockData : mainnetBlockData;\n\tconst expectedProof = getSystemTestBackend() === BACKEND.SEPOLIA ? sepoliaProof : mainnetProof;\n\n\tlet web3: Web3;\n\n\tbeforeAll(() => {\n\t\tweb3 = new Web3(provider);\n\t});\n\n\tafterAll(async () => {\n\t\tawait closeOpenConnection(web3);\n\t});\n\n\tit.each(\n\t\ttoAllVariants<{\n\t\t\tblock:\n\t\t\t\t| 'earliest'\n\t\t\t\t| 'latest'\n\t\t\t\t| 'pending'\n\t\t\t\t| 'finalized'\n\t\t\t\t| 'safe'\n\t\t\t\t| 'blockHash'\n\t\t\t\t| 'blockNumber';\n\t\t}>({\n\t\t\tblock: [\n\t\t\t\t'earliest',\n\t\t\t\t'latest',\n\t\t\t\t'pending',\n\t\t\t\t'safe',\n\t\t\t\t'finalized',\n\t\t\t\t'blockHash',\n\t\t\t\t'blockNumber',\n\t\t\t],\n\t\t}),\n\t)('getProof', async ({ block }) => {\n\t\tconst result = await web3.eth.getProof(\n\t\t\t'0x0000000000000000000000000000000000000000',\n\t\t\t[],\n\t\t\tblockData[block],\n\t\t);\n\n\t\tif (block === 'blockHash' || block === 'blockNumber') {\n\t\t\texpect(result).toEqual(expectedProof);\n\t\t} \n\t\telse if(block === 'pending') {\n\t\t\texpect(result).toMatchObject({\n\t\t\t\tbalance: expect.any(BigInt),\n\t\t\t\tcodeHash: expect.any(String),\n\t\t\t\tnonce: expect.any(BigInt),\n\t\t\t\tstorageHash: expect.any(String),\n\t\t\t\tstorageProof: expect.any(Array<string>),\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\texpect(result).toMatchObject<AccountObject>({\n\t\t\t\taccountProof: expect.any(Array<string>),\n\t\t\t\tbalance: expect.any(BigInt),\n\t\t\t\tcodeHash: expect.any(String),\n\t\t\t\tnonce: expect.any(BigInt),\n\t\t\t\tstorageHash: expect.any(String),\n\t\t\t\tstorageProof: expect.any(Array<string>),\n\t\t\t});\n\t\t}\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/get_protocol_version.test.ts",["770"],[],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { isHexStrict } from 'web3-validator';\n\nimport Web3 from '../../src';\nimport { getSystemE2ETestProvider } from './e2e_utils';\nimport { closeOpenConnection, getSystemTestBackend } from '../shared_fixtures/system_tests_utils';\n\ndescribe(`${getSystemTestBackend()} tests - getProtocolVersion`, () => {\n\tconst provider = getSystemE2ETestProvider();\n\n\tlet web3: Web3;\n\n\tbeforeAll(() => {\n\t\tweb3 = new Web3(provider);\n\t});\n\n\tafterAll(async () => {\n\t\tawait closeOpenConnection(web3);\n\t});\n\n\tit('should get the protocol version for the connected node', async () => {\n\t\tconst result = await web3.eth.getProtocolVersion();\n\t\texpect(isHexStrict(result)).toBeTruthy();\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/get_transaction_count.test.ts",["771"],["772","773"],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport Web3 from '../../src';\nimport { getSystemE2ETestProvider, getE2ETestAccountAddress } from './e2e_utils';\nimport { closeOpenConnection, getSystemTestBackend, BACKEND } from '../shared_fixtures/system_tests_utils';\nimport { toAllVariants } from '../shared_fixtures/utils';\nimport { sepoliaBlockData } from './fixtures/sepolia';\nimport { mainnetBlockData } from './fixtures/mainnet';\n\ndescribe(`${getSystemTestBackend()} tests - getTransactionCount`, () => {\n\tconst provider = getSystemE2ETestProvider();\n\tconst blockData = getSystemTestBackend() === BACKEND.SEPOLIA ? sepoliaBlockData : mainnetBlockData;\n\n\tlet web3: Web3;\n\n\tbeforeAll(() => {\n\t\tweb3 = new Web3(provider);\n\t});\n\n\tafterAll(async () => {\n\t\tawait closeOpenConnection(web3);\n\t});\n\n\tit.each(\n\t\ttoAllVariants<{\n\t\t\tblock:\n\t\t\t\t| 'earliest'\n\t\t\t\t| 'latest'\n\t\t\t\t| 'pending'\n\t\t\t\t| 'finalized'\n\t\t\t\t| 'safe'\n\t\t\t\t| 'blockHash'\n\t\t\t\t| 'blockNumber';\n\t\t}>({\n\t\t\tblock: [\n\t\t\t\t'earliest',\n\t\t\t\t'latest',\n\t\t\t\t'pending',\n\t\t\t\t'safe',\n\t\t\t\t'finalized',\n\t\t\t\t'blockHash',\n\t\t\t\t'blockNumber',\n\t\t\t],\n\t\t}),\n\t)('getTransactionCount', async ({ block }) => {\n\t\tconst result = await web3.eth.getTransactionCount(\n\t\t\tgetE2ETestAccountAddress(),\n\t\t\tblockData[block],\n\t\t);\n\n\t\tif (block === 'blockHash' || block === 'blockNumber') {\n\t\t\tconst expectedTxCount = getSystemTestBackend() === BACKEND.SEPOLIA ? BigInt(1) : BigInt(11);\n\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\texpect(result).toBe(expectedTxCount);\n\t\t} else {\n\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\texpect(typeof result).toBe('bigint');\n\t\t}\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/get_transaction_from_block.test.ts",["774"],["775","776","777","778","779","780","781","782","783","784","785","786","787","788","789","790"],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/* eslint-disable jest/no-conditional-expect */\n\nimport { Numbers, TransactionInfo } from 'web3-types';\n\nimport Web3 from '../../src';\nimport { getSystemE2ETestProvider } from './e2e_utils';\nimport { closeOpenConnection, getSystemTestBackend, BACKEND } from '../shared_fixtures/system_tests_utils';\nimport { toAllVariants } from '../shared_fixtures/utils';\nimport { sepoliaBlockData, sepoliaTransactionFromBlock } from './fixtures/sepolia';\nimport { mainnetBlockData, mainnetTransactionFromBlock } from './fixtures/mainnet';\n\ndescribe(`${getSystemTestBackend()} tests - getTransactionFromBlock`, () => {\n\tconst provider = getSystemE2ETestProvider();\n\tconst blockData = getSystemTestBackend() === BACKEND.SEPOLIA ? sepoliaBlockData : mainnetBlockData;\n\n\tlet web3: Web3;\n\n\tbeforeAll(() => {\n\t\tweb3 = new Web3(provider);\n\t});\n\n\tafterAll(async () => {\n\t\tawait closeOpenConnection(web3);\n\t});\n\n\tit.each(\n\t\ttoAllVariants<{\n\t\t\tblock:\n\t\t\t\t| 'earliest'\n\t\t\t\t| 'latest'\n\t\t\t\t| 'pending'\n\t\t\t\t| 'finalized'\n\t\t\t\t| 'safe'\n\t\t\t\t| 'blockHash'\n\t\t\t\t| 'blockNumber';\n\t\t\ttransactionIndex: Numbers;\n\t\t\tformat: string;\n\t\t}>({\n\t\t\tblock: [\n\t\t\t\t'earliest',\n\t\t\t\t'latest',\n\t\t\t\t'pending',\n\t\t\t\t'safe',\n\t\t\t\t'finalized',\n\t\t\t\t'blockHash',\n\t\t\t\t'blockNumber',\n\t\t\t],\n\t\t\ttransactionIndex: ['0x1', '1', 1, BigInt(1)],\n\t\t}),\n\t)('getTransactionFromBlock', async ({ block, transactionIndex }) => {\n\t\tconst result = await web3.eth.getTransactionFromBlock(blockData[block], transactionIndex);\n\n\t\tif (blockData[block] === 'earliest') {\n\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\texpect(result).toBeNull();\n\t\t} else if (block === 'blockHash' || block === 'blockNumber') {\n\t\t\tconst expectedTransaction =\n\t\t\t\tgetSystemTestBackend() === BACKEND.SEPOLIA\n\t\t\t\t\t? sepoliaTransactionFromBlock\n\t\t\t\t\t: mainnetTransactionFromBlock;\n\t\t\texpect(result).toStrictEqual(expectedTransaction);\n\t\t} else {\n\t\t\texpect(result).toMatchObject<TransactionInfo>({\n\t\t\t\thash: expect.any(String),\n\t\t\t\tnonce: expect.any(BigInt),\n\t\t\t\tblockHash: expect.any(String),\n\t\t\t\tblockNumber: expect.any(BigInt),\n\t\t\t\ttransactionIndex: expect.any(BigInt),\n\t\t\t\tfrom: expect.any(String),\n\t\t\t\tgasPrice: expect.any(BigInt),\n\t\t\t\tgas: expect.any(BigInt),\n\t\t\t\tinput: expect.any(String),\n\t\t\t\ttype: expect.any(BigInt),\n\t\t\t\tv: expect.any(BigInt),\n\t\t\t\ts: expect.any(String),\n\t\t\t\tr: expect.any(String),\n\t\t\t\t// TODO These values are included when fetching the transaction from\n\t\t\t\t// Nethermind, but not Infura\n\t\t\t\t// https://github.com/web3/web3.js/issues/5997\n\t\t\t\t// data: '0x608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a73560405160405180910390a36104dc806100de6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632e64cec1146100515780636057361d1461006f578063893d20e81461008b578063a6f9dae1146100a9575b600080fd5b6100596100c5565b60405161006691906102fb565b60405180910390f35b61008960048036038101906100849190610347565b6100ce565b005b610093610168565b6040516100a091906103b5565b60405180910390f35b6100c360048036038101906100be91906103fc565b610192565b005b60008054905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461015e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015590610486565b60405180910390fd5b8060008190555050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610222576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021990610486565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a73560405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000819050919050565b6102f5816102e2565b82525050565b600060208201905061031060008301846102ec565b92915050565b600080fd5b610324816102e2565b811461032f57600080fd5b50565b6000813590506103418161031b565b92915050565b60006020828403121561035d5761035c610316565b5b600061036b84828501610332565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061039f82610374565b9050919050565b6103af81610394565b82525050565b60006020820190506103ca60008301846103a6565b92915050565b6103d981610394565b81146103e457600080fd5b50565b6000813590506103f6816103d0565b92915050565b60006020828403121561041257610411610316565b5b6000610420848285016103e7565b91505092915050565b600082825260208201905092915050565b7f43616c6c6572206973206e6f74206f776e657200000000000000000000000000600082015250565b6000610470601383610429565b915061047b8261043a565b602082019050919050565b6000602082019050818103600083015261049f81610463565b905091905056fea26469706673582212201fcfa803d5c15c78e1e356cc1946c1bf14f9809acd349df1fd41362fa1a9e4d564736f6c63430008120033',\n\t\t\t\t// to: null,\n\t\t\t\t// value: '0x0',\n\t\t\t\t// yParity: '0x0'\n\t\t\t});\n\t\t}\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/get_uncle.test.ts",["791"],[],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { Numbers } from 'web3-types';\n\nimport Web3 from '../../src';\nimport { getSystemE2ETestProvider } from './e2e_utils';\nimport { closeOpenConnection, getSystemTestBackend, BACKEND } from '../shared_fixtures/system_tests_utils';\nimport { toAllVariants } from '../shared_fixtures/utils';\nimport { mainnetBlockData } from './fixtures/mainnet';\nimport { sepoliaBlockData } from './fixtures/sepolia';\n\ndescribe(`${getSystemTestBackend()} tests - getUncle`, () => {\n\tconst provider = getSystemE2ETestProvider();\n\tconst blockData = getSystemTestBackend() === BACKEND.SEPOLIA ? sepoliaBlockData : mainnetBlockData;\n\n\tlet web3: Web3;\n\n\tbeforeAll(() => {\n\t\tweb3 = new Web3(provider);\n\t});\n\n\tafterAll(async () => {\n\t\tawait closeOpenConnection(web3);\n\t});\n\n\tit.each(\n\t\ttoAllVariants<{\n\t\t\tblock:\n\t\t\t\t| 'earliest'\n\t\t\t\t| 'latest'\n\t\t\t\t| 'pending'\n\t\t\t\t| 'finalized'\n\t\t\t\t| 'safe'\n\t\t\t\t| 'blockHash'\n\t\t\t\t| 'blockNumber';\n\t\t\tuncleIndex: Numbers;\n\t\t}>({\n\t\t\tblock: [\n\t\t\t\t'earliest',\n\t\t\t\t'latest',\n\t\t\t\t'pending',\n\t\t\t\t'safe',\n\t\t\t\t'finalized',\n\t\t\t\t'blockHash',\n\t\t\t\t'blockNumber',\n\t\t\t],\n\t\t\tuncleIndex: ['0x1', '1', 1, BigInt(1)],\n\t\t}),\n\t)('getUncle', async ({ block, uncleIndex }) => {\n\t\t// TODO Returns Position Index is incorrect RPC error\n\t\t// when the client is Nethermind, but not Geth\n\t\tconst result = await web3.eth.getUncle(blockData[block], uncleIndex);\n\n\t\t// eslint-disable-next-line no-null/no-null\n\t\texpect(result).toBeNull();\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/is_listening.test.ts",["792"],[],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport Web3 from '../../src';\nimport { getSystemE2ETestProvider } from './e2e_utils';\nimport { closeOpenConnection, getSystemTestBackend } from '../shared_fixtures/system_tests_utils';\n\ndescribe(`${getSystemTestBackend()} tests - isListening`, () => {\n\tconst provider = getSystemE2ETestProvider();\n\n\tlet web3: Web3;\n\n\tbeforeAll(() => {\n\t\tweb3 = new Web3(provider);\n\t});\n\n\tafterAll(async () => {\n\t\tawait closeOpenConnection(web3);\n\t});\n\n\tit('should get the listening status for the connected node', async () => {\n\t\tconst result = await web3.eth.net.isListening();\n\t\texpect(typeof result).toBe('boolean');\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/is_syncing.test.ts",["793"],[],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport Web3 from '../../src';\nimport { getSystemE2ETestProvider } from './e2e_utils';\nimport { closeOpenConnection, getSystemTestBackend } from '../shared_fixtures/system_tests_utils';\n\ndescribe(`${getSystemTestBackend()} tests - isSyncing`, () => {\n\tconst provider = getSystemE2ETestProvider();\n\n\tlet web3: Web3;\n\n\tbeforeAll(() => {\n\t\tweb3 = new Web3(provider);\n\t});\n\n\tafterAll(async () => {\n\t\tawait closeOpenConnection(web3);\n\t});\n\n\tit('should get the syncing status for the connected node', async () => {\n\t\tconst result = await web3.eth.isSyncing();\n\t\texpect(typeof result).toBe('boolean');\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/mainnet/call.test.ts",["794"],["795","796"],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { bytesToHex } from 'web3-utils';\nimport Web3, { FMT_BYTES, FMT_NUMBER } from '../../../src';\nimport {\n\tcloseOpenConnection,\n\tgetSystemTestBackend,\n} from '../../shared_fixtures/system_tests_utils';\nimport { toAllVariants } from '../../shared_fixtures/utils';\nimport { getSystemE2ETestProvider, getE2ETestContractAddress } from '../e2e_utils';\n\ndescribe(`${getSystemTestBackend()} tests - call`, () => {\n\tconst provider = getSystemE2ETestProvider();\n\n\tlet web3: Web3;\n\n\tbeforeAll(() => {\n\t\tweb3 = new Web3(provider);\n\t});\n\n\tafterAll(async () => {\n\t\tawait closeOpenConnection(web3);\n\t});\n\n\tit.each(\n\t\ttoAllVariants<{\n\t\t\tformat: string;\n\t\t}>({\n\t\t\tformat: Object.values(FMT_BYTES),\n\t\t}),\n\t)('should call retrieve method from deployed contract', async ({ format }) => {\n\t\tconst result = await web3.eth.call(\n\t\t\t{\n\t\t\t\tto: getE2ETestContractAddress(),\n\t\t\t\tinput: '0x18160ddd',\n\t\t\t},\n\t\t\tundefined,\n\t\t\t{\n\t\t\t\tnumber: FMT_NUMBER.HEX,\n\t\t\t\tbytes: format as FMT_BYTES,\n\t\t\t},\n\t\t);\n\n\t\tswitch (format) {\n\t\t\tcase 'BYTES_HEX':\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(result).toMatch(/0[xX][0-9a-fA-F]{64}/i);\n\t\t\t\tbreak;\n\t\t\tcase 'BYTES_UINT8ARRAY':\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(bytesToHex(result)).toMatch(/0[xX][0-9a-fA-F]{64}/i);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Unhandled format');\n\t\t}\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/mainnet/get_code.test.ts",["797"],["798","799"],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { hexToBytes } from 'web3-utils';\n\nimport Web3, { FMT_BYTES, FMT_NUMBER } from '../../../src';\nimport {\n\tcloseOpenConnection,\n\tgetSystemTestBackend,\n} from '../../shared_fixtures/system_tests_utils';\nimport { toAllVariants } from '../../shared_fixtures/utils';\nimport { getSystemE2ETestProvider, getE2ETestContractAddress } from '../e2e_utils';\nimport { mainnetCode } from '../fixtures/mainnet';\n\ndescribe(`${getSystemTestBackend()} tests - getCode`, () => {\n\tconst provider = getSystemE2ETestProvider();\n\tconst blockData: {\n\t\tlatest: 'latest';\n\t\tpending: 'pending';\n\t\tfinalized: 'finalized';\n\t\tsafe: 'safe';\n\t\tblockNumber: number;\n\t\tblockHash: string;\n\t} = {\n\t\tlatest: 'latest',\n\t\tpending: 'pending',\n\t\tfinalized: 'finalized',\n\t\tsafe: 'safe',\n\t\tblockNumber: 17029884,\n\t\tblockHash: '0x2850e4a813762b2de589fa5268eacb92572defaf9520608deb129699e504cab2',\n\t};\n\n\tlet web3: Web3;\n\n\tbeforeAll(() => {\n\t\tweb3 = new Web3(provider);\n\t});\n\n\tafterAll(async () => {\n\t\tawait closeOpenConnection(web3);\n\t});\n\n\tit.each(\n\t\ttoAllVariants<{\n\t\t\tblock: 'latest' | 'pending' | 'finalized' | 'safe' | 'blockHash' | 'blockNumber';\n\t\t\tformat: string;\n\t\t}>({\n\t\t\tblock: ['latest', 'pending', 'safe', 'finalized', 'blockHash', 'blockNumber'],\n\t\t\tformat: Object.values(FMT_BYTES),\n\t\t}),\n\t)('should getCode for deployed contract', async ({ block, format }) => {\n\t\tconst result = await web3.eth.getCode(getE2ETestContractAddress(), blockData[block], {\n\t\t\tnumber: FMT_NUMBER.HEX,\n\t\t\tbytes: format as FMT_BYTES,\n\t\t});\n\n\t\tswitch (format) {\n\t\t\tcase 'BYTES_HEX':\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(result).toBe(mainnetCode);\n\t\t\t\tbreak;\n\t\t\tcase 'BYTES_UINT8ARRAY':\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(result).toStrictEqual(new Uint8Array(hexToBytes(mainnetCode)));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Unhandled format');\n\t\t}\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/mainnet/get_past_logs.test.ts",["800"],["801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820"],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/* eslint-disable @typescript-eslint/no-unsafe-call */\nimport { hexToBytes, numberToHex, hexToNumber } from 'web3-utils';\nimport { Log } from 'web3-types';\nimport Web3, { FMT_BYTES, FMT_NUMBER, LogAPI } from '../../../src';\nimport {\n\tcloseOpenConnection,\n\tgetSystemTestBackend,\n} from '../../shared_fixtures/system_tests_utils';\nimport { toAllVariants } from '../../shared_fixtures/utils';\nimport { getSystemE2ETestProvider, getE2ETestContractAddress } from '../e2e_utils';\n\ndescribe(`${getSystemTestBackend()} tests - getPastLogs`, () => {\n\tconst provider = getSystemE2ETestProvider();\n\tconst expectedLog: LogAPI = {\n\t\taddress: getE2ETestContractAddress(),\n\t\tblockHash: '0x89515ecc5eda6f038ce612fd7a285dc81ad0fc3cec1a1c2d2166565ac99d48db',\n\t\tblockNumber: '0x103dc29',\n\t\tdata: '0x0000000000000000000000000000000000000000000000000000000146ee7540',\n\t\tlogIndex: '0x63',\n\t\tremoved: false,\n\t\ttopics: [\n\t\t\t'0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef',\n\t\t\t'0x000000000000000000000000b840fe2b3fd8f75275240c671d6ec659e4c9a500',\n\t\t\t'0x000000000000000000000000780a2d8ed56eede2f9d9b4dfd6fd3101ac20cab8',\n\t\t],\n\t\ttransactionHash: '0x4284538004b3a8478835861d4354a33dba37a6daedcb692523478e5f9e7d8520',\n\t\ttransactionIndex: '0xc',\n\t};\n\n\tlet web3: Web3;\n\n\tbeforeAll(() => {\n\t\tweb3 = new Web3(provider);\n\t});\n\n\tafterAll(async () => {\n\t\tawait closeOpenConnection(web3);\n\t});\n\n\tit.each(\n\t\ttoAllVariants<{\n\t\t\tbyteFormat: string;\n\t\t\tnumberFormat: string;\n\t\t}>({\n\t\t\tbyteFormat: Object.values(FMT_BYTES),\n\t\t\tnumberFormat: Object.values(FMT_NUMBER),\n\t\t}),\n\t)('should getPastLogs for deployed contract', async ({ byteFormat, numberFormat }) => {\n\t\tconst result = (\n\t\t\tawait web3.eth.getPastLogs(\n\t\t\t\t{\n\t\t\t\t\tfromBlock: '0x103dc29',\n\t\t\t\t\ttoBlock: '0x103dc30',\n\t\t\t\t\taddress: getE2ETestContractAddress(),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tnumber: numberFormat as FMT_NUMBER,\n\t\t\t\t\tbytes: byteFormat as FMT_BYTES,\n\t\t\t\t},\n\t\t\t)\n\t\t)[0] as unknown as Log;\n\n\t\tswitch (numberFormat) {\n\t\t\tcase 'NUMBER_STR':\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(result.blockNumber).toBe(\n\t\t\t\t\thexToNumber(expectedLog.blockNumber as string).toString(),\n\t\t\t\t);\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(result.logIndex).toBe(\n\t\t\t\t\thexToNumber(expectedLog.logIndex as string).toString(),\n\t\t\t\t);\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(result.transactionIndex).toBe(\n\t\t\t\t\thexToNumber(expectedLog.transactionIndex as string).toString(),\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'NUMBER_BIGINT':\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(result?.blockNumber).toBe(BigInt(expectedLog.blockNumber as string));\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(result?.logIndex).toBe(BigInt(expectedLog.logIndex as string));\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(result?.transactionIndex).toBe(\n\t\t\t\t\tBigInt(expectedLog.transactionIndex as string),\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'NUMBER_NUMBER':\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(result?.blockNumber).toBe(hexToNumber(expectedLog.blockNumber as string));\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(result?.logIndex).toBe(hexToNumber(expectedLog.logIndex as string));\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(result?.transactionIndex).toBe(\n\t\t\t\t\thexToNumber(expectedLog.transactionIndex as string),\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'NUMBER_HEX':\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(result?.blockNumber).toBe(numberToHex(expectedLog.blockNumber as string));\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(result?.logIndex).toBe(numberToHex(expectedLog.logIndex as string));\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(result?.transactionIndex).toBe(\n\t\t\t\t\tnumberToHex(expectedLog.transactionIndex as string),\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Unhandled format');\n\t\t}\n\t\tswitch (byteFormat) {\n\t\t\tcase 'BYTES_HEX':\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(result.blockHash).toBe(expectedLog.blockHash as string);\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(result.data).toBe(expectedLog.data as string);\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(result.transactionHash).toBe(expectedLog.transactionHash as string);\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(result.topics).toStrictEqual(expectedLog.topics);\n\t\t\t\tbreak;\n\t\t\tcase 'BYTES_UINT8ARRAY':\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(result.blockHash).toStrictEqual(\n\t\t\t\t\tnew Uint8Array(hexToBytes(expectedLog.blockHash as string)),\n\t\t\t\t);\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(result.data).toStrictEqual(\n\t\t\t\t\tnew Uint8Array(hexToBytes(expectedLog.data as string)),\n\t\t\t\t);\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(result.transactionHash).toStrictEqual(\n\t\t\t\t\tnew Uint8Array(hexToBytes(expectedLog.transactionHash as string)),\n\t\t\t\t);\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(result.topics).toStrictEqual(\n\t\t\t\t\texpectedLog.topics?.map((topic: string) => new Uint8Array(hexToBytes(topic))),\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Unhandled format');\n\t\t}\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/mainnet/get_storage_at.test.ts",["821"],["822","823","824"],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport Web3, { Numbers } from '../../../src';\nimport { getSystemE2ETestProvider, getE2ETestContractAddress } from '../e2e_utils';\nimport {\n\tcloseOpenConnection,\n\tgetSystemTestBackend,\n} from '../../shared_fixtures/system_tests_utils';\nimport { toAllVariants } from '../../shared_fixtures/utils';\nimport { mainnetBlockData } from '../fixtures/mainnet';\n\ndescribe(`${getSystemTestBackend()} tests - getStorageAt`, () => {\n\tconst provider = getSystemE2ETestProvider();\n\n\tlet web3: Web3;\n\n\tbeforeAll(() => {\n\t\tweb3 = new Web3(provider);\n\t});\n\n\tafterAll(async () => {\n\t\tawait closeOpenConnection(web3);\n\t});\n\n\tit.each(\n\t\ttoAllVariants<{\n\t\t\tstorageSlot: Numbers;\n\t\t\tblock:\n\t\t\t\t| 'earliest'\n\t\t\t\t| 'latest'\n\t\t\t\t| 'pending'\n\t\t\t\t| 'finalized'\n\t\t\t\t| 'safe'\n\t\t\t\t| 'blockHash'\n\t\t\t\t| 'blockNumber';\n\t\t}>({\n\t\t\tstorageSlot: ['0x1', '1', 1, BigInt(1)],\n\t\t\tblock: [\n\t\t\t\t'earliest',\n\t\t\t\t'latest',\n\t\t\t\t'pending',\n\t\t\t\t'safe',\n\t\t\t\t'finalized',\n\t\t\t\t'blockHash',\n\t\t\t\t'blockNumber',\n\t\t\t],\n\t\t}),\n\t)('getStorageAt', async ({ storageSlot, block }) => {\n\t\tconst result = await web3.eth.getStorageAt(\n\t\t\tgetE2ETestContractAddress(),\n\t\t\tstorageSlot,\n\t\t\tmainnetBlockData[block],\n\t\t);\n\n\t\tif (mainnetBlockData[block] === 'earliest') {\n\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\texpect(result).toMatch(/0[xX][0-9a-fA-F]{64}/i);\n\t\t} else if (block === 'blockHash' || block === 'blockNumber') {\n\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\texpect(result).toBe(\n\t\t\t\t'0x000000000000000000000000000000000000000000000000007d5a864f06b2d5',\n\t\t\t);\n\t\t} else {\n\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\texpect(result).toMatch(/0[xX][0-9a-fA-F]{64}/i);\n\t\t}\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/mainnet/get_transaction.test.ts",["825"],[],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { Bytes, TransactionInfo } from 'web3-types';\nimport { bytesToUint8Array, hexToBytes } from 'web3-utils';\n\nimport Web3 from '../../../src';\nimport { getSystemE2ETestProvider } from '../e2e_utils';\nimport {\n\tcloseOpenConnection,\n\tgetSystemTestBackend,\n} from '../../shared_fixtures/system_tests_utils';\nimport { toAllVariants } from '../../shared_fixtures/utils';\n\ndescribe(`${getSystemTestBackend()} tests - getTransaction`, () => {\n\tconst provider = getSystemE2ETestProvider();\n\n\tlet web3: Web3;\n\n\tbeforeAll(() => {\n\t\tweb3 = new Web3(provider);\n\t});\n\n\tafterAll(async () => {\n\t\tawait closeOpenConnection(web3);\n\t});\n\n\tit.each(\n\t\ttoAllVariants<{\n\t\t\ttransactionHash: Bytes;\n\t\t}>({\n\t\t\ttransactionHash: [\n\t\t\t\t'0x9a968248400868beb931ed96ee37517275794ff44e8d968c29f0f3430a504594',\n\t\t\t\tbytesToUint8Array(\n\t\t\t\t\thexToBytes(\n\t\t\t\t\t\t'0x9a968248400868beb931ed96ee37517275794ff44e8d968c29f0f3430a504594',\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t\tnew Uint8Array(\n\t\t\t\t\thexToBytes(\n\t\t\t\t\t\t'0x9a968248400868beb931ed96ee37517275794ff44e8d968c29f0f3430a504594',\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t],\n\t\t}),\n\t)('getTransaction', async ({ transactionHash }) => {\n\t\tconst result = await web3.eth.getTransaction(transactionHash);\n\n\t\texpect(result).toMatchObject<TransactionInfo>({\n\t\t\thash: '0x9a968248400868beb931ed96ee37517275794ff44e8d968c29f0f3430a504594',\n\t\t\tnonce: BigInt(2264),\n\t\t\tblockHash: '0xabc81c29235c7962f5a0420644761627bdc064a560c7d1842cdf9517f7d7984e',\n\t\t\tblockNumber: BigInt(17030310),\n\t\t\ttransactionIndex: BigInt(91),\n\t\t\tfrom: '0xd67da12dc33d9730d9341bbfa4f0b67d0688b28b',\n\t\t\tgasPrice: BigInt(19330338402),\n\t\t\tmaxPriorityFeePerGas: BigInt(100000000),\n\t\t\tmaxFeePerGas: BigInt(26848942133),\n\t\t\tgas: BigInt(300858),\n\t\t\tinput: '0x6d78f47a000000000000000000000000a6e265667e1e18c28f2b5dc529f775c5f0d56d4a000000000000000000000000000000000000000000000001a055690d9db80000000000000000000000000000d67da12dc33d9730d9341bbfa4f0b67d0688b28b',\n\t\t\tchainId: BigInt(1),\n\t\t\ttype: BigInt('0x2'),\n\t\t\tv: BigInt('0x0'),\n\t\t\ts: '0x72ca073bc16b35b3191b35fd8fb0eebdd536675ecb8459b110fcad2890a98ec9',\n\t\t\tr: '0x45496fc11c7bf9972cb732bdc579f5d9d01e4df276dd49626e75fc3b5f8b6ec4',\n\t\t\t// TODO These values are included when fetching the transaction from\n\t\t\t// Nethermind, but not Infura\n\t\t\t// https://github.com/web3/web3.js/issues/5997\n\t\t\t// data: '0x608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a73560405160405180910390a36104dc806100de6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632e64cec1146100515780636057361d1461006f578063893d20e81461008b578063a6f9dae1146100a9575b600080fd5b6100596100c5565b60405161006691906102fb565b60405180910390f35b61008960048036038101906100849190610347565b6100ce565b005b610093610168565b6040516100a091906103b5565b60405180910390f35b6100c360048036038101906100be91906103fc565b610192565b005b60008054905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461015e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015590610486565b60405180910390fd5b8060008190555050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610222576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021990610486565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a73560405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000819050919050565b6102f5816102e2565b82525050565b600060208201905061031060008301846102ec565b92915050565b600080fd5b610324816102e2565b811461032f57600080fd5b50565b6000813590506103418161031b565b92915050565b60006020828403121561035d5761035c610316565b5b600061036b84828501610332565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061039f82610374565b9050919050565b6103af81610394565b82525050565b60006020820190506103ca60008301846103a6565b92915050565b6103d981610394565b81146103e457600080fd5b50565b6000813590506103f6816103d0565b92915050565b60006020828403121561041257610411610316565b5b6000610420848285016103e7565b91505092915050565b600082825260208201905092915050565b7f43616c6c6572206973206e6f74206f776e657200000000000000000000000000600082015250565b6000610470601383610429565b915061047b8261043a565b602082019050919050565b6000602082019050818103600083015261049f81610463565b905091905056fea26469706673582212201fcfa803d5c15c78e1e356cc1946c1bf14f9809acd349df1fd41362fa1a9e4d564736f6c63430008120033',\n\t\t\t// to: null,\n\t\t\t// value: '0x0',\n\t\t\t// yParity: '0x0'\n\t\t});\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/mainnet/get_transaction_receipt.test.ts",["826"],[],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { Bytes } from 'web3-types';\nimport { bytesToUint8Array, hexToBytes } from 'web3-utils';\n\nimport Web3 from '../../../src';\nimport { getSystemE2ETestProvider, getE2ETestContractAddress } from '../e2e_utils';\nimport {\n\tcloseOpenConnection,\n\tgetSystemTestBackend,\n} from '../../shared_fixtures/system_tests_utils';\nimport { toAllVariants } from '../../shared_fixtures/utils';\n\ndescribe(`${getSystemTestBackend()} tests - getTransactionReceipt`, () => {\n\tconst provider = getSystemE2ETestProvider();\n\n\tlet web3: Web3;\n\n\tbeforeAll(() => {\n\t\tweb3 = new Web3(provider);\n\t});\n\n\tafterAll(async () => {\n\t\tawait closeOpenConnection(web3);\n\t});\n\n\tit.each(\n\t\ttoAllVariants<{\n\t\t\ttransactionHash: Bytes;\n\t\t}>({\n\t\t\ttransactionHash: [\n\t\t\t\t'0x9a968248400868beb931ed96ee37517275794ff44e8d968c29f0f3430a504594',\n\t\t\t\tbytesToUint8Array(\n\t\t\t\t\thexToBytes(\n\t\t\t\t\t\t'0x9a968248400868beb931ed96ee37517275794ff44e8d968c29f0f3430a504594',\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t\tnew Uint8Array(\n\t\t\t\t\thexToBytes(\n\t\t\t\t\t\t'0x9a968248400868beb931ed96ee37517275794ff44e8d968c29f0f3430a504594',\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t],\n\t\t}),\n\t)('getTransactionReceipt', async ({ transactionHash }) => {\n\t\tconst result = await web3.eth.getTransactionReceipt(transactionHash);\n\n\t\texpect(result).toMatchObject({\n\t\t\tblockHash: '0xabc81c29235c7962f5a0420644761627bdc064a560c7d1842cdf9517f7d7984e',\n\t\t\tblockNumber: BigInt(17030310),\n\t\t\t// contractAddress: '0xedfd52255571b4a9a9d4445989e39f5c14ff0447',\n\t\t\tcumulativeGasUsed: BigInt(9010200),\n\t\t\teffectiveGasPrice: BigInt(19330338402),\n\t\t\tfrom: '0xd67da12dc33d9730d9341bbfa4f0b67d0688b28b',\n\t\t\tgasUsed: BigInt(245737),\n\t\t\tlogs: [\n\t\t\t\t{\n\t\t\t\t\taddress: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n\t\t\t\t\tblockHash: '0xabc81c29235c7962f5a0420644761627bdc064a560c7d1842cdf9517f7d7984e',\n\t\t\t\t\tblockNumber: BigInt(17030310),\n\t\t\t\t\tdata: '0x0000000000000000000000000000000000000000000000000000000000668442',\n\t\t\t\t\tlogIndex: BigInt(200),\n\t\t\t\t\tremoved: false,\n\t\t\t\t\ttopics: [\n\t\t\t\t\t\t'0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef',\n\t\t\t\t\t\t'0x000000000000000000000000d67da12dc33d9730d9341bbfa4f0b67d0688b28b',\n\t\t\t\t\t\t'0x000000000000000000000000a6e265667e1e18c28f2b5dc529f775c5f0d56d4a',\n\t\t\t\t\t],\n\t\t\t\t\ttransactionHash:\n\t\t\t\t\t\t'0x9a968248400868beb931ed96ee37517275794ff44e8d968c29f0f3430a504594',\n\t\t\t\t\ttransactionIndex: BigInt(91),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\taddress: getE2ETestContractAddress(),\n\t\t\t\t\tblockHash: '0xabc81c29235c7962f5a0420644761627bdc064a560c7d1842cdf9517f7d7984e',\n\t\t\t\t\tblockNumber: BigInt(17030310),\n\t\t\t\t\tdata: '0x0000000000000000000000000000000000000000000000000000000000015bb2',\n\t\t\t\t\tlogIndex: BigInt(201),\n\t\t\t\t\tremoved: false,\n\t\t\t\t\ttopics: [\n\t\t\t\t\t\t'0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef',\n\t\t\t\t\t\t'0x000000000000000000000000d67da12dc33d9730d9341bbfa4f0b67d0688b28b',\n\t\t\t\t\t\t'0x000000000000000000000000a6e265667e1e18c28f2b5dc529f775c5f0d56d4a',\n\t\t\t\t\t],\n\t\t\t\t\ttransactionHash:\n\t\t\t\t\t\t'0x9a968248400868beb931ed96ee37517275794ff44e8d968c29f0f3430a504594',\n\t\t\t\t\ttransactionIndex: BigInt(91),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\taddress: '0x5de8ab7e27f6e7a1fff3e5b337584aa43961beef',\n\t\t\t\t\tblockHash: '0xabc81c29235c7962f5a0420644761627bdc064a560c7d1842cdf9517f7d7984e',\n\t\t\t\t\tblockNumber: BigInt(17030310),\n\t\t\t\t\tdata: '0x00000000000000000000000000000000000000003fff92b9d57d1d7fca09d7dc',\n\t\t\t\t\tlogIndex: BigInt(202),\n\t\t\t\t\tremoved: false,\n\t\t\t\t\ttopics: [\n\t\t\t\t\t\t'0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925',\n\t\t\t\t\t\t'0x000000000000000000000000d67da12dc33d9730d9341bbfa4f0b67d0688b28b',\n\t\t\t\t\t\t'0x00000000000000000000000069a592d2129415a4a1d1b1e309c17051b7f28d57',\n\t\t\t\t\t],\n\t\t\t\t\ttransactionHash:\n\t\t\t\t\t\t'0x9a968248400868beb931ed96ee37517275794ff44e8d968c29f0f3430a504594',\n\t\t\t\t\ttransactionIndex: BigInt(91),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\taddress: '0x5de8ab7e27f6e7a1fff3e5b337584aa43961beef',\n\t\t\t\t\tblockHash: '0xabc81c29235c7962f5a0420644761627bdc064a560c7d1842cdf9517f7d7984e',\n\t\t\t\t\tblockNumber: BigInt(17030310),\n\t\t\t\t\tdata: '0x000000000000000000000000000000000000000000006d462a82e28035f62824',\n\t\t\t\t\tlogIndex: BigInt(203),\n\t\t\t\t\tremoved: false,\n\t\t\t\t\ttopics: [\n\t\t\t\t\t\t'0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef',\n\t\t\t\t\t\t'0x000000000000000000000000d67da12dc33d9730d9341bbfa4f0b67d0688b28b',\n\t\t\t\t\t\t'0x000000000000000000000000a6e265667e1e18c28f2b5dc529f775c5f0d56d4a',\n\t\t\t\t\t],\n\t\t\t\t\ttransactionHash:\n\t\t\t\t\t\t'0x9a968248400868beb931ed96ee37517275794ff44e8d968c29f0f3430a504594',\n\t\t\t\t\ttransactionIndex: BigInt(91),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\taddress: '0xa6e265667e1e18c28f2b5dc529f775c5f0d56d4a',\n\t\t\t\t\tblockHash: '0xabc81c29235c7962f5a0420644761627bdc064a560c7d1842cdf9517f7d7984e',\n\t\t\t\t\tblockNumber: BigInt(17030310),\n\t\t\t\t\tdata: '0x000000000000000000000000000000000000000000000001a055690d9db80000',\n\t\t\t\t\tlogIndex: BigInt(204),\n\t\t\t\t\tremoved: false,\n\t\t\t\t\ttopics: [\n\t\t\t\t\t\t'0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef',\n\t\t\t\t\t\t'0x0000000000000000000000000000000000000000000000000000000000000000',\n\t\t\t\t\t\t'0x000000000000000000000000d67da12dc33d9730d9341bbfa4f0b67d0688b28b',\n\t\t\t\t\t],\n\t\t\t\t\ttransactionHash:\n\t\t\t\t\t\t'0x9a968248400868beb931ed96ee37517275794ff44e8d968c29f0f3430a504594',\n\t\t\t\t\ttransactionIndex: BigInt(91),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\taddress: '0x69a592d2129415a4a1d1b1e309c17051b7f28d57',\n\t\t\t\t\tblockHash: '0xabc81c29235c7962f5a0420644761627bdc064a560c7d1842cdf9517f7d7984e',\n\t\t\t\t\tblockNumber: BigInt(17030310),\n\t\t\t\t\tdata: '0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001a055690d9db8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n\t\t\t\t\tlogIndex: BigInt(205),\n\t\t\t\t\tremoved: false,\n\t\t\t\t\ttopics: [\n\t\t\t\t\t\t'0x1abc43bc3dd8b6c8bb9bcf1a14a84f83981bf5335700ef07758efefcb03a8c75',\n\t\t\t\t\t\t'0x000000000000000000000000a6e265667e1e18c28f2b5dc529f775c5f0d56d4a',\n\t\t\t\t\t\t'0x000000000000000000000000d67da12dc33d9730d9341bbfa4f0b67d0688b28b',\n\t\t\t\t\t\t'0x000000000000000000000000d67da12dc33d9730d9341bbfa4f0b67d0688b28b',\n\t\t\t\t\t],\n\t\t\t\t\ttransactionHash:\n\t\t\t\t\t\t'0x9a968248400868beb931ed96ee37517275794ff44e8d968c29f0f3430a504594',\n\t\t\t\t\ttransactionIndex: BigInt(91),\n\t\t\t\t},\n\t\t\t],\n\t\t\tstatus: BigInt(1),\n\t\t\ttransactionHash: '0x9a968248400868beb931ed96ee37517275794ff44e8d968c29f0f3430a504594',\n\t\t\ttransactionIndex: BigInt(91),\n\t\t\ttype: BigInt(2),\n\t\t});\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/sepolia/call.test.ts",["827"],["828","829","830","831"],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { hexToBytes } from 'web3-utils';\n\nimport Web3, { FMT_BYTES, FMT_NUMBER } from '../../../src';\nimport {\n\tcloseOpenConnection,\n\tgetSystemTestBackend,\n} from '../../shared_fixtures/system_tests_utils';\nimport { toAllVariants } from '../../shared_fixtures/utils';\nimport {\n\tgetSystemE2ETestProvider,\n\tgetE2ETestAccountAddress,\n\tgetE2ETestContractAddress,\n} from '../e2e_utils';\n\ndescribe(`${getSystemTestBackend()} tests - call`, () => {\n\tconst provider = getSystemE2ETestProvider();\n\n\tlet web3: Web3;\n\n\tbeforeAll(() => {\n\t\tweb3 = new Web3(provider);\n\t});\n\n\tafterAll(async () => {\n\t\tawait closeOpenConnection(web3);\n\t});\n\n\tit.each(\n\t\ttoAllVariants<{\n\t\t\tformat: string;\n\t\t}>({\n\t\t\tformat: Object.values(FMT_BYTES),\n\t\t}),\n\t)('should call retrieve method from deployed contract', async ({ format }) => {\n\t\tconst result = await web3.eth.call(\n\t\t\t{\n\t\t\t\tto: getE2ETestContractAddress(),\n\t\t\t\tinput: '0x2e64cec1',\n\t\t\t},\n\t\t\tundefined,\n\t\t\t{\n\t\t\t\tnumber: FMT_NUMBER.HEX,\n\t\t\t\tbytes: format as FMT_BYTES,\n\t\t\t},\n\t\t);\n\n\t\tswitch (format) {\n\t\t\tcase 'BYTES_HEX':\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(result).toBe(\n\t\t\t\t\t'0x0000000000000000000000000000000000000000000000000000000000000000',\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'BYTES_UINT8ARRAY':\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(result).toStrictEqual(\n\t\t\t\t\tnew Uint8Array(\n\t\t\t\t\t\thexToBytes(\n\t\t\t\t\t\t\t'0x0000000000000000000000000000000000000000000000000000000000000000',\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Unhandled format');\n\t\t}\n\t});\n\n\tit.each(\n\t\ttoAllVariants<{\n\t\t\tformat: string;\n\t\t}>({\n\t\t\tformat: Object.values(FMT_BYTES),\n\t\t}),\n\t)('should call getOwner method from deployed contract', async ({ format }) => {\n\t\tconst expectedResult = `0x000000000000000000000000${getE2ETestAccountAddress()\n\t\t\t.substring(2)\n\t\t\t.toLowerCase()}`;\n\t\tconst result = await web3.eth.call(\n\t\t\t{\n\t\t\t\tto: getE2ETestContractAddress(),\n\t\t\t\tinput: '0x893d20e8',\n\t\t\t},\n\t\t\tundefined,\n\t\t\t{\n\t\t\t\tnumber: FMT_NUMBER.HEX,\n\t\t\t\tbytes: format as FMT_BYTES,\n\t\t\t},\n\t\t);\n\n\t\tswitch (format) {\n\t\t\tcase 'BYTES_HEX':\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(result).toBe(expectedResult);\n\t\t\t\tbreak;\n\t\t\tcase 'BYTES_UINT8ARRAY':\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(result).toStrictEqual(new Uint8Array(hexToBytes(expectedResult)));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Unhandled format');\n\t\t}\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/sepolia/contract.test.ts",["832"],["833","834","835","836"],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport Web3 from '../../../src';\nimport {\n\tcloseOpenConnection,\n\tgetSystemTestBackend,\n\titIf,\n} from '../../shared_fixtures/system_tests_utils';\nimport { GreeterAbi, GreeterBytecode } from '../../shared_fixtures/build/Greeter';\nimport {\n\tgetAllowedSendTransaction,\n\tgetE2ETestAccountAddress,\n\tgetE2ETestAccountPrivateKey,\n\tgetSystemE2ETestProvider,\n} from '../e2e_utils';\n\ndescribe(`${getSystemTestBackend()} tests - contract`, () => {\n\tconst provider = getSystemE2ETestProvider();\n\tconst initialGreet = 'Soylent green is people';\n\n\tlet web3: Web3;\n\tlet deployedContractAddress: string;\n\n\tbeforeAll(() => {\n\t\tif (getAllowedSendTransaction()) {\n\t\t\tweb3 = new Web3(provider);\n\t\t\tweb3.eth.accounts.wallet.add(getE2ETestAccountPrivateKey());\n\t\t}\n\t});\n\n\tafterAll(async () => {\n\t\tawait closeOpenConnection(web3);\n\t});\n\n\titIf(getAllowedSendTransaction())('should deploy a contract', async () => {\n\t\tconst contract = new web3.eth.Contract(GreeterAbi, undefined, {\n\t\t\tprovider: getSystemE2ETestProvider(),\n\t\t}).deploy({\n\t\t\tdata: GreeterBytecode,\n\t\t\targuments: [initialGreet],\n\t\t});\n\t\tconst signedTransaction = await web3.eth.accounts.signTransaction(\n\t\t\t{\n\t\t\t\tfrom: getE2ETestAccountAddress(),\n\t\t\t\tinput: contract.encodeABI(),\n\t\t\t\tgas: await contract.estimateGas(),\n\t\t\t},\n\t\t\tgetE2ETestAccountPrivateKey(),\n\t\t);\n\t\tconst result = await web3.eth.sendSignedTransaction(signedTransaction.rawTransaction);\n\t\tdeployedContractAddress = result.contractAddress as string;\n\n\t\t// TODO This should work, but throws a type error\n\t\t// for root not being included in expected object.\n\t\t// However, root is not apart of result object.\n\t\t// expect(result).toMatchObject<TransactionReceipt>({\n\t\t// eslint-disable-next-line jest/no-standalone-expect\n\t\texpect(result).toMatchObject({\n\t\t\t// root: expect.any(String),\n\t\t\tblockHash: expect.any(String),\n\t\t\tblockNumber: expect.any(BigInt),\n\t\t\tcumulativeGasUsed: expect.any(BigInt),\n\t\t\teffectiveGasPrice: expect.any(BigInt),\n\t\t\tfrom: getE2ETestAccountAddress().toLowerCase(),\n\t\t\tcontractAddress: expect.any(String),\n\t\t\tgasUsed: expect.any(BigInt),\n\t\t\tlogs: [],\n\t\t\tlogsBloom:\n\t\t\t\t'0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n\t\t\tstatus: BigInt(1),\n\t\t\ttransactionHash: expect.any(String),\n\t\t\ttransactionIndex: expect.any(BigInt),\n\t\t\ttype: BigInt(2),\n\t\t});\n\t});\n\n\titIf(getAllowedSendTransaction())('should call setGreeting on deployed contract', async () => {\n\t\tconst expectedGreet = 'Where we’re going, we don’t need roads';\n\t\tconst contract = new web3.eth.Contract(GreeterAbi, deployedContractAddress, {\n\t\t\tprovider: getSystemE2ETestProvider(),\n\t\t});\n\n\t\tlet greeting = await contract.methods.greet().call();\n\t\t// eslint-disable-next-line jest/no-standalone-expect\n\t\texpect(greeting).toBe(initialGreet);\n\n\t\tconst signedTransaction = await web3.eth.accounts.signTransaction(\n\t\t\t{\n\t\t\t\tfrom: getE2ETestAccountAddress(),\n\t\t\t\tto: deployedContractAddress,\n\t\t\t\tinput: contract.methods.setGreeting(expectedGreet).encodeABI(),\n\t\t\t\tgas: await contract.methods.setGreeting(expectedGreet).estimateGas(),\n\t\t\t},\n\t\t\tgetE2ETestAccountPrivateKey(),\n\t\t);\n\n\t\tconst result = await web3.eth.sendSignedTransaction(signedTransaction.rawTransaction);\n\n\t\tgreeting = await contract.methods.greet().call();\n\t\t// eslint-disable-next-line jest/no-standalone-expect\n\t\texpect(greeting).toBe(expectedGreet);\n\n\t\t// TODO This should work, but throws a type error\n\t\t// for root not being included in expected object.\n\t\t// However, root is not apart of result object.\n\t\t// expect(result).toMatchObject<TransactionReceipt>({\n\t\t// eslint-disable-next-line jest/no-standalone-expect\n\t\texpect(result).toMatchObject({\n\t\t\t// root: expect.any(String),\n\t\t\tblockHash: expect.any(String),\n\t\t\tblockNumber: expect.any(BigInt),\n\t\t\tcumulativeGasUsed: expect.any(BigInt),\n\t\t\teffectiveGasPrice: expect.any(BigInt),\n\t\t\tfrom: getE2ETestAccountAddress().toLowerCase(),\n\t\t\tgasUsed: expect.any(BigInt),\n\t\t\tlogs: [\n\t\t\t\t{\n\t\t\t\t\taddress: deployedContractAddress,\n\t\t\t\t\tblockHash: expect.any(String),\n\t\t\t\t\tblockNumber: expect.any(BigInt),\n\t\t\t\t\tdata: '0x000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000017536f796c656e7420677265656e2069732070656f706c65000000000000000000000000000000000000000000000000000000000000000000000000000000002a5768657265207765e28099726520676f696e672c20776520646f6ee2809974206e65656420726f61647300000000000000000000000000000000000000000000',\n\t\t\t\t\tlogIndex: expect.any(BigInt),\n\t\t\t\t\tremoved: false,\n\t\t\t\t\ttopics: ['0x0d363f2fba46ab11b6db8da0125b0d5484787c44e265b48810735998bab12b75'],\n\t\t\t\t\ttransactionHash: expect.any(String),\n\t\t\t\t\ttransactionIndex: expect.any(BigInt),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\taddress: deployedContractAddress,\n\t\t\t\t\tblockHash: expect.any(String),\n\t\t\t\t\tblockNumber: expect.any(BigInt),\n\t\t\t\t\tdata: '0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002a5768657265207765e28099726520676f696e672c20776520646f6ee2809974206e65656420726f61647300000000000000000000000000000000000000000000',\n\t\t\t\t\tlogIndex: expect.any(BigInt),\n\t\t\t\t\tremoved: false,\n\t\t\t\t\ttopics: ['0x7d7846723bda52976e0286c6efffee937ee9f76817a867ec70531ad29fb1fc0e'],\n\t\t\t\t\ttransactionHash: expect.any(String),\n\t\t\t\t\ttransactionIndex: expect.any(BigInt),\n\t\t\t\t},\n\t\t\t],\n\t\t\tlogsBloom: expect.any(String),\n\t\t\tstatus: BigInt(1),\n\t\t\ttransactionHash: expect.any(String),\n\t\t\ttransactionIndex: expect.any(BigInt),\n\t\t\ttype: BigInt(2),\n\t\t});\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/sepolia/get_code.test.ts",["837"],["838","839"],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { hexToBytes } from 'web3-utils';\n\nimport Web3, { FMT_BYTES, FMT_NUMBER } from '../../../src';\nimport {\n\tcloseOpenConnection,\n\tgetSystemTestBackend,\n} from '../../shared_fixtures/system_tests_utils';\nimport { toAllVariants } from '../../shared_fixtures/utils';\nimport { getSystemE2ETestProvider, getE2ETestContractAddress } from '../e2e_utils';\nimport { sepoliaBlockData } from '../fixtures/sepolia';\n\ndescribe(`${getSystemTestBackend()} tests - getCode`, () => {\n\tconst provider = getSystemE2ETestProvider();\n\tconst expectedCode =\n\t\t'0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80632e64cec1146100515780636057361d1461006f578063893d20e81461008b578063a6f9dae1146100a9575b600080fd5b6100596100c5565b60405161006691906102fb565b60405180910390f35b61008960048036038101906100849190610347565b6100ce565b005b610093610168565b6040516100a091906103b5565b60405180910390f35b6100c360048036038101906100be91906103fc565b610192565b005b60008054905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461015e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015590610486565b60405180910390fd5b8060008190555050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610222576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021990610486565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a73560405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000819050919050565b6102f5816102e2565b82525050565b600060208201905061031060008301846102ec565b92915050565b600080fd5b610324816102e2565b811461032f57600080fd5b50565b6000813590506103418161031b565b92915050565b60006020828403121561035d5761035c610316565b5b600061036b84828501610332565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061039f82610374565b9050919050565b6103af81610394565b82525050565b60006020820190506103ca60008301846103a6565b92915050565b6103d981610394565b81146103e457600080fd5b50565b6000813590506103f6816103d0565b92915050565b60006020828403121561041257610411610316565b5b6000610420848285016103e7565b91505092915050565b600082825260208201905092915050565b7f43616c6c6572206973206e6f74206f776e657200000000000000000000000000600082015250565b6000610470601383610429565b915061047b8261043a565b602082019050919050565b6000602082019050818103600083015261049f81610463565b905091905056fea26469706673582212201fcfa803d5c15c78e1e356cc1946c1bf14f9809acd349df1fd41362fa1a9e4d564736f6c63430008120033';\n\n\tlet web3: Web3;\n\n\tbeforeAll(() => {\n\t\tweb3 = new Web3(provider);\n\t});\n\n\tafterAll(async () => {\n\t\tawait closeOpenConnection(web3);\n\t});\n\n\tit.each(\n\t\ttoAllVariants<{\n\t\t\tblock: 'latest' | 'pending' | 'finalized' | 'safe' | 'blockHash' | 'blockNumber';\n\t\t\tformat: string;\n\t\t}>({\n\t\t\tblock: ['latest', 'pending', 'safe', 'finalized', 'blockHash', 'blockNumber'],\n\t\t\tformat: Object.values(FMT_BYTES),\n\t\t}),\n\t)('should getCode for deployed contract', async ({ block, format }) => {\n\t\tconst result = await web3.eth.getCode(\n\t\t\tgetE2ETestContractAddress(),\n\t\t\tsepoliaBlockData[block],\n\t\t\t{\n\t\t\t\tnumber: FMT_NUMBER.HEX,\n\t\t\t\tbytes: format as FMT_BYTES,\n\t\t\t},\n\t\t);\n\n\t\tswitch (format) {\n\t\t\tcase 'BYTES_HEX':\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(result).toBe(expectedCode);\n\t\t\t\tbreak;\n\t\t\tcase 'BYTES_UINT8ARRAY':\n\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\texpect(result).toStrictEqual(new Uint8Array(hexToBytes(expectedCode)));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Unhandled format');\n\t\t}\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/sepolia/get_past_logs.test.ts",["840"],["841","842","843","844","845","846","847","848","849","850","851","852","853","854","855","856","857","858","859","860"],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/* eslint-disable @typescript-eslint/no-unsafe-call */\nimport { hexToBytes, numberToHex, hexToNumber } from 'web3-utils';\nimport { Log } from 'web3-types';\nimport Web3, { FMT_BYTES, FMT_NUMBER, LogAPI } from '../../../src';\nimport {\n\tcloseOpenConnection,\n\tgetSystemTestBackend,\n} from '../../shared_fixtures/system_tests_utils';\nimport { toAllVariants } from '../../shared_fixtures/utils';\nimport { getSystemE2ETestProvider, getE2ETestContractAddress } from '../e2e_utils';\n\ndescribe(`${getSystemTestBackend()} tests - getPastLogs`, () => {\n\tconst provider = getSystemE2ETestProvider();\n\tconst expectedLogs: LogAPI[] = [\n\t\t{\n\t\t\taddress: getE2ETestContractAddress(),\n\t\t\tblockHash: '0xdb1cb1fc3867fa28e4ba2297fbb1e65b81a3212beb1b73cbcbfe40c4192ee948',\n\t\t\tblockNumber: '0x314675',\n\t\t\tdata: '0x',\n\t\t\tlogIndex: '0x4',\n\t\t\tremoved: false,\n\t\t\ttopics: [\n\t\t\t\t'0x342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a735',\n\t\t\t\t'0x0000000000000000000000000000000000000000000000000000000000000000',\n\t\t\t\t'0x000000000000000000000000a127c5e6a7e3600ac34a9a9928e52521677e7211',\n\t\t\t],\n\t\t\ttransactionHash: '0xe3d28c23ffcd8b94b8f2fd802b4c8dd17a5f19992660acd082ac229ab410b959',\n\t\t\ttransactionIndex: '0x8',\n\t\t},\n\t];\n\n\tlet web3: Web3;\n\n\tbeforeAll(() => {\n\t\tweb3 = new Web3(provider);\n\t});\n\n\tafterAll(async () => {\n\t\tawait closeOpenConnection(web3);\n\t});\n\n\tit.each(\n\t\ttoAllVariants<{\n\t\t\tbyteFormat: string;\n\t\t\tnumberFormat: string;\n\t\t}>({\n\t\t\tbyteFormat: Object.values(FMT_BYTES),\n\t\t\tnumberFormat: Object.values(FMT_NUMBER),\n\t\t}),\n\t)('should getPastLogs for deployed contract', async ({ byteFormat, numberFormat }) => {\n\t\tconst result = (\n\t\t\tawait web3.eth.getPastLogs(\n\t\t\t\t{\n\t\t\t\t\tfromBlock: 'earliest',\n\t\t\t\t\ttoBlock: 'latest',\n\t\t\t\t\taddress: getE2ETestContractAddress(),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tnumber: numberFormat as FMT_NUMBER,\n\t\t\t\t\tbytes: byteFormat as FMT_BYTES,\n\t\t\t\t},\n\t\t\t)\n\t\t)[0] as unknown as Log;\n\t\tif (typeof result !== 'string') {\n\t\t\tswitch (numberFormat) {\n\t\t\t\tcase 'NUMBER_STR':\n\t\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\t\texpect(result?.blockNumber).toBe(\n\t\t\t\t\t\thexToNumber(numberToHex(expectedLogs[0].blockNumber as string)).toString(),\n\t\t\t\t\t);\n\t\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\t\texpect(result?.logIndex).toStrictEqual(\n\t\t\t\t\t\thexToNumber(numberToHex(expectedLogs[0].logIndex as string)).toString(),\n\t\t\t\t\t);\n\t\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\t\texpect(result?.transactionIndex).toStrictEqual(\n\t\t\t\t\t\thexToNumber(\n\t\t\t\t\t\t\tnumberToHex(expectedLogs[0].transactionIndex as string),\n\t\t\t\t\t\t).toString(),\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'NUMBER_BIGINT':\n\t\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\t\texpect(result.blockNumber).toBe(BigInt(expectedLogs[0].blockNumber as string));\n\t\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\t\texpect(result?.logIndex).toStrictEqual(\n\t\t\t\t\t\tBigInt(expectedLogs[0].logIndex as string),\n\t\t\t\t\t);\n\t\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\t\texpect(result?.transactionIndex).toStrictEqual(\n\t\t\t\t\t\tBigInt(expectedLogs[0].transactionIndex as string),\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'NUMBER_NUMBER':\n\t\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\t\texpect(result?.blockNumber).toStrictEqual(\n\t\t\t\t\t\thexToNumber(numberToHex(expectedLogs[0].blockNumber as string)),\n\t\t\t\t\t);\n\t\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\t\texpect(result?.logIndex).toStrictEqual(\n\t\t\t\t\t\thexToNumber(numberToHex(expectedLogs[0].logIndex as string)),\n\t\t\t\t\t);\n\t\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\t\texpect(result?.transactionIndex).toStrictEqual(\n\t\t\t\t\t\thexToNumber(numberToHex(expectedLogs[0].transactionIndex as string)),\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'NUMBER_HEX':\n\t\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\t\texpect(result?.blockNumber).toStrictEqual(\n\t\t\t\t\t\tnumberToHex(expectedLogs[0].blockNumber as string),\n\t\t\t\t\t);\n\t\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\t\texpect(result?.logIndex).toStrictEqual(\n\t\t\t\t\t\tnumberToHex(expectedLogs[0].logIndex as string),\n\t\t\t\t\t);\n\t\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\t\texpect(result?.transactionIndex).toStrictEqual(\n\t\t\t\t\t\tnumberToHex(expectedLogs[0].transactionIndex as string),\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Unhandled format');\n\t\t\t}\n\n\t\t\tswitch (byteFormat) {\n\t\t\t\tcase 'BYTES_HEX':\n\t\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\t\texpect(result.blockHash).toBe(expectedLogs[0].blockHash as string);\n\t\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\t\texpect(result.data).toBe(expectedLogs[0].data as string);\n\t\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\t\texpect(result.transactionHash).toBe(expectedLogs[0].transactionHash as string);\n\t\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\t\texpect(result.topics).toStrictEqual(expectedLogs[0].topics);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'BYTES_UINT8ARRAY':\n\t\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\t\texpect(result.blockHash).toStrictEqual(\n\t\t\t\t\t\tnew Uint8Array(hexToBytes(expectedLogs[0].blockHash as string)),\n\t\t\t\t\t);\n\t\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\t\texpect(result.data).toStrictEqual(\n\t\t\t\t\t\tnew Uint8Array(hexToBytes(expectedLogs[0].data as string)),\n\t\t\t\t\t);\n\t\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\t\texpect(result.transactionHash).toStrictEqual(\n\t\t\t\t\t\tnew Uint8Array(hexToBytes(expectedLogs[0].transactionHash as string)),\n\t\t\t\t\t);\n\t\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\t\texpect(result.topics).toStrictEqual(\n\t\t\t\t\t\texpectedLogs[0].topics?.map(\n\t\t\t\t\t\t\t(topic: string) => new Uint8Array(hexToBytes(topic)),\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Unhandled format');\n\t\t\t}\n\t\t}\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/sepolia/get_storage_at.test.ts",["861"],["862","863"],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport Web3, { Numbers } from '../../../src';\nimport {\n\tgetSystemE2ETestProvider,\n\tgetE2ETestAccountAddress,\n\tgetE2ETestContractAddress,\n} from '../e2e_utils';\nimport {\n\tcloseOpenConnection,\n\tgetSystemTestBackend,\n} from '../../shared_fixtures/system_tests_utils';\nimport { toAllVariants } from '../../shared_fixtures/utils';\nimport { sepoliaBlockData } from '../fixtures/sepolia';\n\ndescribe(`${getSystemTestBackend()} tests - getStorageAt`, () => {\n\tconst provider = getSystemE2ETestProvider();\n\n\tlet web3: Web3;\n\n\tbeforeAll(() => {\n\t\tweb3 = new Web3(provider);\n\t});\n\n\tafterAll(async () => {\n\t\tawait closeOpenConnection(web3);\n\t});\n\n\tit.each(\n\t\ttoAllVariants<{\n\t\t\tstorageSlot: Numbers;\n\t\t\tblock:\n\t\t\t\t| 'earliest'\n\t\t\t\t| 'latest'\n\t\t\t\t| 'pending'\n\t\t\t\t| 'finalized'\n\t\t\t\t| 'safe'\n\t\t\t\t| 'blockHash'\n\t\t\t\t| 'blockNumber';\n\t\t}>({\n\t\t\tstorageSlot: ['0x1', '1', 1, BigInt(1)],\n\t\t\tblock: [\n\t\t\t\t'earliest',\n\t\t\t\t'latest',\n\t\t\t\t'pending',\n\t\t\t\t'safe',\n\t\t\t\t'finalized',\n\t\t\t\t'blockHash',\n\t\t\t\t'blockNumber',\n\t\t\t],\n\t\t}),\n\t)('getStorageAt', async ({ storageSlot, block }) => {\n\t\tconst result = await web3.eth.getStorageAt(\n\t\t\tgetE2ETestContractAddress(),\n\t\t\tstorageSlot,\n\t\t\tsepoliaBlockData[block],\n\t\t);\n\n\t\tif (sepoliaBlockData[block] === 'earliest') {\n\t\t\t// Nethermind returns 0x while Geth returns 0x0000000000000000000000000000000000000000000000000000000000000000\n\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\texpect(\n\t\t\t\tresult === '0x' ||\n\t\t\t\t\tresult === '0x0000000000000000000000000000000000000000000000000000000000000000',\n\t\t\t).toBeTruthy();\n\t\t} else {\n\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\texpect(result).toBe(\n\t\t\t\t`0x000000000000000000000000${getE2ETestAccountAddress()\n\t\t\t\t\t.substring(2)\n\t\t\t\t\t.toLowerCase()}`,\n\t\t\t);\n\t\t}\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/sepolia/get_transaction.test.ts",["864"],[],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { Bytes, TransactionInfo } from 'web3-types';\nimport { bytesToUint8Array, hexToBytes } from 'web3-utils';\n\nimport Web3 from '../../../src';\nimport { getSystemE2ETestProvider } from '../e2e_utils';\nimport {\n\tcloseOpenConnection,\n\tgetSystemTestBackend,\n} from '../../shared_fixtures/system_tests_utils';\nimport { toAllVariants } from '../../shared_fixtures/utils';\n\ndescribe(`${getSystemTestBackend()} tests - getTransaction`, () => {\n\tconst provider = getSystemE2ETestProvider();\n\n\tlet web3: Web3;\n\n\tbeforeAll(() => {\n\t\tweb3 = new Web3(provider);\n\t});\n\n\tafterAll(async () => {\n\t\tawait closeOpenConnection(web3);\n\t});\n\n\tit.each(\n\t\ttoAllVariants<{\n\t\t\ttransactionHash: Bytes;\n\t\t}>({\n\t\t\ttransactionHash: [\n\t\t\t\t'0xe3d28c23ffcd8b94b8f2fd802b4c8dd17a5f19992660acd082ac229ab410b959',\n\t\t\t\tbytesToUint8Array(\n\t\t\t\t\thexToBytes(\n\t\t\t\t\t\t'0xe3d28c23ffcd8b94b8f2fd802b4c8dd17a5f19992660acd082ac229ab410b959',\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t\tnew Uint8Array(\n\t\t\t\t\thexToBytes(\n\t\t\t\t\t\t'0xe3d28c23ffcd8b94b8f2fd802b4c8dd17a5f19992660acd082ac229ab410b959',\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t],\n\t\t}),\n\t)('getTransaction', async ({ transactionHash }) => {\n\t\tconst result = await web3.eth.getTransaction(transactionHash);\n\n\t\texpect(result).toMatchObject<TransactionInfo>({\n\t\t\thash: '0xe3d28c23ffcd8b94b8f2fd802b4c8dd17a5f19992660acd082ac229ab410b959',\n\t\t\tnonce: BigInt('0x0'),\n\t\t\tblockHash: '0xdb1cb1fc3867fa28e4ba2297fbb1e65b81a3212beb1b73cbcbfe40c4192ee948',\n\t\t\tblockNumber: BigInt('0x314675'),\n\t\t\ttransactionIndex: BigInt('0x8'),\n\t\t\tfrom: '0xa127c5e6a7e3600ac34a9a9928e52521677e7211',\n\t\t\tgasPrice: BigInt('0x9502f908'),\n\t\t\tmaxPriorityFeePerGas: BigInt('0x9502f900'),\n\t\t\tmaxFeePerGas: BigInt('0x9502f910'),\n\t\t\tgas: BigInt('0x54eca'),\n\t\t\tinput: '0x608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a73560405160405180910390a36104dc806100de6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632e64cec1146100515780636057361d1461006f578063893d20e81461008b578063a6f9dae1146100a9575b600080fd5b6100596100c5565b60405161006691906102fb565b60405180910390f35b61008960048036038101906100849190610347565b6100ce565b005b610093610168565b6040516100a091906103b5565b60405180910390f35b6100c360048036038101906100be91906103fc565b610192565b005b60008054905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461015e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015590610486565b60405180910390fd5b8060008190555050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610222576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021990610486565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a73560405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000819050919050565b6102f5816102e2565b82525050565b600060208201905061031060008301846102ec565b92915050565b600080fd5b610324816102e2565b811461032f57600080fd5b50565b6000813590506103418161031b565b92915050565b60006020828403121561035d5761035c610316565b5b600061036b84828501610332565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061039f82610374565b9050919050565b6103af81610394565b82525050565b60006020820190506103ca60008301846103a6565b92915050565b6103d981610394565b81146103e457600080fd5b50565b6000813590506103f6816103d0565b92915050565b60006020828403121561041257610411610316565b5b6000610420848285016103e7565b91505092915050565b600082825260208201905092915050565b7f43616c6c6572206973206e6f74206f776e657200000000000000000000000000600082015250565b6000610470601383610429565b915061047b8261043a565b602082019050919050565b6000602082019050818103600083015261049f81610463565b905091905056fea26469706673582212201fcfa803d5c15c78e1e356cc1946c1bf14f9809acd349df1fd41362fa1a9e4d564736f6c63430008120033',\n\t\t\tchainId: BigInt('0xaa36a7'),\n\t\t\ttype: BigInt('0x2'),\n\t\t\tv: BigInt('0x0'),\n\t\t\ts: '0x58f3924a7c468ab3df1a46ecef93910b4c05a13c3c3a9f4bf87b11f912b2748a',\n\t\t\tr: '0x7fcc0285117b5613d0766b0bcd6cab69538bc0991b2bc4ddebbcc3cb5b4d8fb0',\n\t\t\t// TODO These values are included when fetching the transaction from\n\t\t\t// Nethermind, but not Infura\n\t\t\t// to: null,\n\t\t\t// value: '0x0',\n\t\t\t// yParity: '0x0'\n\t\t});\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/sepolia/get_transaction_receipt.test.ts",["865"],[],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { Bytes } from 'web3-types';\nimport { bytesToUint8Array, hexToBytes } from 'web3-utils';\n\nimport Web3 from '../../../src';\nimport { getSystemE2ETestProvider, getE2ETestContractAddress } from '../e2e_utils';\nimport {\n\tcloseOpenConnection,\n\tgetSystemTestBackend,\n} from '../../shared_fixtures/system_tests_utils';\nimport { toAllVariants } from '../../shared_fixtures/utils';\n\ndescribe(`${getSystemTestBackend()} tests - getTransactionReceipt`, () => {\n\tconst provider = getSystemE2ETestProvider();\n\n\tlet web3: Web3;\n\n\tbeforeAll(() => {\n\t\tweb3 = new Web3(provider);\n\t});\n\n\tafterAll(async () => {\n\t\tawait closeOpenConnection(web3);\n\t});\n\n\tit.each(\n\t\ttoAllVariants<{\n\t\t\ttransactionHash: Bytes;\n\t\t}>({\n\t\t\ttransactionHash: [\n\t\t\t\t'0xe3d28c23ffcd8b94b8f2fd802b4c8dd17a5f19992660acd082ac229ab410b959',\n\t\t\t\tbytesToUint8Array(\n\t\t\t\t\thexToBytes(\n\t\t\t\t\t\t'0xe3d28c23ffcd8b94b8f2fd802b4c8dd17a5f19992660acd082ac229ab410b959',\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t\tnew Uint8Array(\n\t\t\t\t\thexToBytes(\n\t\t\t\t\t\t'0xe3d28c23ffcd8b94b8f2fd802b4c8dd17a5f19992660acd082ac229ab410b959',\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t],\n\t\t}),\n\t)('getTransactionReceipt', async ({ transactionHash }) => {\n\t\tconst result = await web3.eth.getTransactionReceipt(transactionHash);\n\n\t\texpect(result).toMatchObject({\n\t\t\tblockHash: '0xdb1cb1fc3867fa28e4ba2297fbb1e65b81a3212beb1b73cbcbfe40c4192ee948',\n\t\t\tblockNumber: BigInt(3229301),\n\t\t\tcontractAddress: getE2ETestContractAddress(),\n\t\t\tcumulativeGasUsed: BigInt(579732),\n\t\t\teffectiveGasPrice: BigInt(2500000008),\n\t\t\tfrom: '0xa127c5e6a7e3600ac34a9a9928e52521677e7211',\n\t\t\tgasUsed: BigInt(347850),\n\t\t\tlogs: [\n\t\t\t\t{\n\t\t\t\t\taddress: getE2ETestContractAddress(),\n\t\t\t\t\tblockHash: '0xdb1cb1fc3867fa28e4ba2297fbb1e65b81a3212beb1b73cbcbfe40c4192ee948',\n\t\t\t\t\tblockNumber: BigInt(3229301),\n\t\t\t\t\tdata: '0x',\n\t\t\t\t\tlogIndex: BigInt(4),\n\t\t\t\t\tremoved: false,\n\t\t\t\t\ttopics: [\n\t\t\t\t\t\t'0x342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a735',\n\t\t\t\t\t\t'0x0000000000000000000000000000000000000000000000000000000000000000',\n\t\t\t\t\t\t'0x000000000000000000000000a127c5e6a7e3600ac34a9a9928e52521677e7211',\n\t\t\t\t\t],\n\t\t\t\t\ttransactionHash:\n\t\t\t\t\t\t'0xe3d28c23ffcd8b94b8f2fd802b4c8dd17a5f19992660acd082ac229ab410b959',\n\t\t\t\t\ttransactionIndex: BigInt(8),\n\t\t\t\t},\n\t\t\t],\n\t\t\tlogsBloom:\n\t\t\t\t'0x00000000000000000000000000000000000000000400000001000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000060000000000040010000800000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000010000000000000000000000000000000',\n\t\t\tstatus: BigInt(1),\n\t\t\ttransactionHash: '0xe3d28c23ffcd8b94b8f2fd802b4c8dd17a5f19992660acd082ac229ab410b959',\n\t\t\ttransactionIndex: BigInt(8),\n\t\t\ttype: BigInt(2),\n\t\t});\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/sepolia/send_signed_transaction.test.ts",["866"],["867","868","869"],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport Web3, { Transaction } from '../../../src';\nimport {\n\tcloseOpenConnection,\n\tgetSystemTestBackend,\n\titIf,\n} from '../../shared_fixtures/system_tests_utils';\nimport {\n\tgetAllowedSendTransaction,\n\tgetE2ETestAccountAddress,\n\tgetE2ETestAccountPrivateKey,\n\tgetSystemE2ETestProvider,\n} from '../e2e_utils';\n\ndescribe(`${getSystemTestBackend()} tests - sendSignedTransaction`, () => {\n\tconst provider = getSystemE2ETestProvider();\n\n\tlet web3: Web3;\n\n\tbeforeAll(() => {\n\t\tweb3 = new Web3(provider);\n\t});\n\n\tafterAll(async () => {\n\t\tawait closeOpenConnection(web3);\n\t});\n\n\titIf(getAllowedSendTransaction())(\n\t\t'should send a simple value transfer - type 0x0',\n\t\tasync () => {\n\t\t\tconst transaction: Transaction = {\n\t\t\t\tfrom: getE2ETestAccountAddress(),\n\t\t\t\tto: getE2ETestAccountAddress(),\n\t\t\t\tvalue: 1,\n\t\t\t\tgas: 21000,\n\t\t\t\ttype: 0,\n\t\t\t};\n\t\t\tconst signedTransaction = await web3.eth.accounts.signTransaction(\n\t\t\t\ttransaction,\n\t\t\t\tgetE2ETestAccountPrivateKey(),\n\t\t\t);\n\t\t\tconst result = await web3.eth.sendSignedTransaction(signedTransaction.rawTransaction);\n\n\t\t\t// TODO This should work, but throws a type error\n\t\t\t// for root not being included in expected object.\n\t\t\t// However, root is not apart of result object.\n\t\t\t// expect(result).toMatchObject<TransactionReceipt>({\n\t\t\t// eslint-disable-next-line jest/no-standalone-expect\n\t\t\texpect(result).toMatchObject({\n\t\t\t\t// root: expect.any(String),\n\t\t\t\tblockHash: expect.any(String),\n\t\t\t\tblockNumber: expect.any(BigInt),\n\t\t\t\tcumulativeGasUsed: expect.any(BigInt),\n\t\t\t\teffectiveGasPrice: expect.any(BigInt),\n\t\t\t\tfrom: getE2ETestAccountAddress().toLowerCase(),\n\t\t\t\tgasUsed: BigInt(21000),\n\t\t\t\tlogs: [],\n\t\t\t\tlogsBloom:\n\t\t\t\t\t'0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n\t\t\t\tstatus: BigInt(1),\n\t\t\t\tto: getE2ETestAccountAddress().toLowerCase(),\n\t\t\t\ttransactionHash: expect.any(String),\n\t\t\t\ttransactionIndex: expect.any(BigInt),\n\t\t\t\ttype: BigInt(0),\n\t\t\t});\n\t\t},\n\t);\n\n\titIf(getAllowedSendTransaction())(\n\t\t'should send a simple value transfer - type 0x1',\n\t\tasync () => {\n\t\t\tconst transaction: Transaction = {\n\t\t\t\tfrom: getE2ETestAccountAddress(),\n\t\t\t\tto: getE2ETestAccountAddress(),\n\t\t\t\tvalue: 1,\n\t\t\t\tgas: 21000,\n\t\t\t\ttype: 1,\n\t\t\t};\n\t\t\tconst signedTransaction = await web3.eth.accounts.signTransaction(\n\t\t\t\ttransaction,\n\t\t\t\tgetE2ETestAccountPrivateKey(),\n\t\t\t);\n\t\t\tconst result = await web3.eth.sendSignedTransaction(signedTransaction.rawTransaction);\n\n\t\t\t// TODO This should work, but throws a type error\n\t\t\t// for root not being included in expected object.\n\t\t\t// However, root is not apart of result object.\n\t\t\t// expect(result).toMatchObject<TransactionReceipt>({\n\t\t\t// eslint-disable-next-line jest/no-standalone-expect\n\t\t\texpect(result).toMatchObject({\n\t\t\t\t// root: expect.any(String),\n\t\t\t\tblockHash: expect.any(String),\n\t\t\t\tblockNumber: expect.any(BigInt),\n\t\t\t\tcumulativeGasUsed: expect.any(BigInt),\n\t\t\t\teffectiveGasPrice: expect.any(BigInt),\n\t\t\t\tfrom: getE2ETestAccountAddress().toLowerCase(),\n\t\t\t\tgasUsed: BigInt(21000),\n\t\t\t\tlogs: [],\n\t\t\t\tlogsBloom:\n\t\t\t\t\t'0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n\t\t\t\tstatus: BigInt(1),\n\t\t\t\tto: getE2ETestAccountAddress().toLowerCase(),\n\t\t\t\ttransactionHash: expect.any(String),\n\t\t\t\ttransactionIndex: expect.any(BigInt),\n\t\t\t\ttype: BigInt(1),\n\t\t\t});\n\t\t},\n\t);\n\n\titIf(getAllowedSendTransaction())(\n\t\t'should send a simple value transfer - type 0x2',\n\t\tasync () => {\n\t\t\tconst transaction: Transaction = {\n\t\t\t\tfrom: getE2ETestAccountAddress(),\n\t\t\t\tto: getE2ETestAccountAddress(),\n\t\t\t\tvalue: 1,\n\t\t\t\tgas: 21000,\n\t\t\t};\n\t\t\tconst signedTransaction = await web3.eth.accounts.signTransaction(\n\t\t\t\ttransaction,\n\t\t\t\tgetE2ETestAccountPrivateKey(),\n\t\t\t);\n\t\t\tconst result = await web3.eth.sendSignedTransaction(signedTransaction.rawTransaction);\n\n\t\t\t// TODO This should work, but throws a type error\n\t\t\t// for root not being included in expected object.\n\t\t\t// However, root is not apart of result object.\n\t\t\t// expect(result).toMatchObject<TransactionReceipt>({\n\t\t\t// eslint-disable-next-line jest/no-standalone-expect\n\t\t\texpect(result).toMatchObject({\n\t\t\t\t// root: expect.any(String),\n\t\t\t\tblockHash: expect.any(String),\n\t\t\t\tblockNumber: expect.any(BigInt),\n\t\t\t\tcumulativeGasUsed: expect.any(BigInt),\n\t\t\t\teffectiveGasPrice: expect.any(BigInt),\n\t\t\t\tfrom: getE2ETestAccountAddress().toLowerCase(),\n\t\t\t\tgasUsed: BigInt(21000),\n\t\t\t\tlogs: [],\n\t\t\t\tlogsBloom:\n\t\t\t\t\t'0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n\t\t\t\tstatus: BigInt(1),\n\t\t\t\tto: getE2ETestAccountAddress().toLowerCase(),\n\t\t\t\ttransactionHash: expect.any(String),\n\t\t\t\ttransactionIndex: expect.any(BigInt),\n\t\t\t\ttype: BigInt(2),\n\t\t\t});\n\t\t},\n\t);\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/e2e/web3_extend.test.ts",["870"],[],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { isNumber } from 'web3-validator';\n\nimport Web3 from '../../src';\nimport { getSystemE2ETestProvider } from './e2e_utils';\nimport { closeOpenConnection, getSystemTestBackend } from '../shared_fixtures/system_tests_utils';\n\ndeclare module 'web3' {\n\tinterface Web3Context {\n\t\tL2Module: {\n\t\t\tgetL2BlockInfo(): Promise<bigint>;\n\t\t};\n\t}\n}\n\ndescribe(`${getSystemTestBackend()} tests - Web3 extend`, () => {\n\tit('Web3 extend test - getL2BlockInfo', async () => {\n\t\tconst provider = getSystemE2ETestProvider();\n\t\tconst web3 = new Web3(provider);\n\n\t\tweb3.extend({\n\t\t\tproperty: 'L2Module',\n\t\t\tmethods: [\n\t\t\t\t{\n\t\t\t\t\tname: 'getL2BlockInfo',\n\t\t\t\t\tcall: 'eth_blockNumber',\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\n\t\tconst result = await web3.L2Module.getL2BlockInfo();\n\t\texpect(isNumber(result)).toBeTruthy();\n\n\t\tawait closeOpenConnection(web3);\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/esm_black_box/test/batchRequest.test.ts",[],["871"],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/esm_black_box/test/web3-eth/getBlock.test.ts",[],["872"],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/esm_black_box/test/web3-eth/getTransaction.test.ts",[],["873","874"],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/esm_black_box/test/web3-eth-accounts/create.test.ts",[],["875"],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/esm_black_box/test/web3-eth-accounts/hashMessage.test.ts",[],["876"],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/esm_black_box/test/web3-eth-contract/erc20.test.ts",[],["877","878"],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/fixtures/tx-type-15/index.ts",["879","880","881","882","883","884","885","886","887","888","889","890","891","892","893","894","895"],["896"],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { keccak256 } from 'ethereum-cryptography/keccak';\nimport { validateNoLeadingZeroes } from 'web3-validator';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { RLP } from '@ethereumjs/rlp';\nimport { bytesToHex, hexToBytes, uint8ArrayConcat, uint8ArrayEquals } from 'web3-utils';\nimport {\n\tBaseTransaction,\n\tFeeMarketEIP1559Transaction,\n\ttxUtils,\n\tCommon,\n\tbigIntToHex,\n\ttoUint8Array,\n\tecrecover,\n\tuint8ArrayToBigInt,\n\tbigIntToUnpaddedUint8Array,\n\tAccessList,\n\tAccessListUint8Array,\n\tFeeMarketEIP1559TxData,\n\tFeeMarketEIP1559ValuesArray,\n\tJsonTx,\n\tTxOptions,\n} from 'web3-eth-accounts';\n\nconst { getAccessListData, getAccessListJSON, getDataFeeEIP2930, verifyAccessList } = txUtils;\n\nconst MAX_INTEGER = BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nexport const TRANSACTION_TYPE = 15;\nconst TRANSACTION_TYPE_UINT8ARRAY = hexToBytes(TRANSACTION_TYPE.toString(16).padStart(2, '0'));\n\n/**\n * Typed transaction with a new gas fee market mechanism\n *\n * - TransactionType: 2\n * - EIP: [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559)\n */\n// eslint-disable-next-line no-use-before-define\nexport class SomeNewTxTypeTransaction extends BaseTransaction<FeeMarketEIP1559Transaction> {\n\tpublic readonly chainId: bigint;\n\tpublic readonly accessList: AccessListUint8Array;\n\tpublic readonly AccessListJSON: AccessList;\n\tpublic readonly maxPriorityFeePerGas: bigint;\n\tpublic readonly maxFeePerGas: bigint;\n\n\tpublic readonly common: Common;\n\n\t/**\n\t * The default HF if the tx type is active on that HF\n\t * or the first greater HF where the tx is active.\n\t *\n\t * @hidden\n\t */\n\tprotected DEFAULT_HARDFORK = 'london';\n\n\t/**\n\t * Instantiate a transaction from a data dictionary.\n\t *\n\t * Format: { chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n\t * accessList, v, r, s }\n\t *\n\t * Notes:\n\t * - `chainId` will be set automatically if not provided\n\t * - All parameters are optional and have some basic default values\n\t */\n\tpublic static fromTxData(txData: FeeMarketEIP1559TxData, opts: TxOptions = {}) {\n\t\treturn new SomeNewTxTypeTransaction(txData, opts);\n\t}\n\n\t/**\n\t * Instantiate a transaction from the serialized tx.\n\t *\n\t * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n\t * accessList, signatureYParity, signatureR, signatureS])`\n\t */\n\tpublic static fromSerializedTx(serialized: Uint8Array, opts: TxOptions = {}) {\n\t\tif (!uint8ArrayEquals(serialized.subarray(0, 1), TRANSACTION_TYPE_UINT8ARRAY)) {\n\t\t\tthrow new Error(\n\t\t\t\t`Invalid serialized tx input: not an EIP-1559 transaction (wrong tx type, expected: ${TRANSACTION_TYPE}, received: ${bytesToHex(\n\t\t\t\t\tserialized.subarray(0, 1),\n\t\t\t\t)}`,\n\t\t\t);\n\t\t}\n\t\tconst values = RLP.decode(serialized.subarray(1));\n\n\t\tif (!Array.isArray(values)) {\n\t\t\tthrow new Error('Invalid serialized tx input: must be array');\n\t\t}\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n\t\treturn FeeMarketEIP1559Transaction.fromValuesArray(values as any, opts);\n\t}\n\n\t/**\n\t * Create a transaction from a values array.\n\t *\n\t * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n\t * accessList, signatureYParity, signatureR, signatureS]`\n\t */\n\tpublic static fromValuesArray(values: FeeMarketEIP1559ValuesArray, opts: TxOptions = {}) {\n\t\tif (values.length !== 9 && values.length !== 12) {\n\t\t\tthrow new Error(\n\t\t\t\t'Invalid EIP-1559 transaction. Only expecting 9 values (for unsigned tx) or 12 values (for signed tx).',\n\t\t\t);\n\t\t}\n\n\t\tconst [\n\t\t\tchainId,\n\t\t\tnonce,\n\t\t\tmaxPriorityFeePerGas,\n\t\t\tmaxFeePerGas,\n\t\t\tgasLimit,\n\t\t\tto,\n\t\t\tvalue,\n\t\t\tdata,\n\t\t\taccessList,\n\t\t\tv,\n\t\t\tr,\n\t\t\ts,\n\t\t] = values;\n\n\t\tthis._validateNotArray({ chainId, v });\n\t\tvalidateNoLeadingZeroes({\n\t\t\tnonce,\n\t\t\tmaxPriorityFeePerGas,\n\t\t\tmaxFeePerGas,\n\t\t\tgasLimit,\n\t\t\tvalue,\n\t\t\tv,\n\t\t\tr,\n\t\t\ts,\n\t\t});\n\n\t\treturn new FeeMarketEIP1559Transaction(\n\t\t\t{\n\t\t\t\tchainId: uint8ArrayToBigInt(chainId),\n\t\t\t\tnonce,\n\t\t\t\tmaxPriorityFeePerGas,\n\t\t\t\tmaxFeePerGas,\n\t\t\t\tgasLimit,\n\t\t\t\tto,\n\t\t\t\tvalue,\n\t\t\t\tdata,\n\t\t\t\taccessList: accessList ?? [],\n\t\t\t\tv: v !== undefined ? uint8ArrayToBigInt(v) : undefined, // EIP2930 supports v's with value 0 (empty Uint8Array)\n\t\t\t\tr,\n\t\t\t\ts,\n\t\t\t},\n\t\t\topts,\n\t\t);\n\t}\n\n\t/**\n\t * This constructor takes the values, validates them, assigns them and freezes the object.\n\t *\n\t * It is not recommended to use this constructor directly. Instead use\n\t * the static factory methods to assist in creating a Transaction object from\n\t * varying data types.\n\t */\n\tpublic constructor(txData: FeeMarketEIP1559TxData, opts: TxOptions = {}) {\n\t\tsuper({ ...txData, type: TRANSACTION_TYPE }, opts);\n\t\tconst { chainId, accessList, maxFeePerGas, maxPriorityFeePerGas } = txData;\n\n\t\tthis.common = this._getCommon(opts.common, chainId);\n\t\tthis.chainId = this.common.chainId();\n\n\t\tif (!this.common.isActivatedEIP(1559)) {\n\t\t\tthrow new Error('EIP-1559 not enabled on Common');\n\t\t}\n\t\tthis.activeCapabilities = this.activeCapabilities.concat([1559, 2718, 2930]);\n\n\t\t// Populate the access list fields\n\t\tconst accessListData = getAccessListData(accessList ?? []);\n\t\tthis.accessList = accessListData.accessList;\n\t\tthis.AccessListJSON = accessListData.AccessListJSON;\n\t\t// Verify the access list format.\n\t\tverifyAccessList(this.accessList);\n\n\t\tthis.maxFeePerGas = uint8ArrayToBigInt(\n\t\t\ttoUint8Array(maxFeePerGas === '' ? '0x' : maxFeePerGas),\n\t\t);\n\t\tthis.maxPriorityFeePerGas = uint8ArrayToBigInt(\n\t\t\ttoUint8Array(maxPriorityFeePerGas === '' ? '0x' : maxPriorityFeePerGas),\n\t\t);\n\n\t\tthis._validateCannotExceedMaxInteger({\n\t\t\tmaxFeePerGas: this.maxFeePerGas,\n\t\t\tmaxPriorityFeePerGas: this.maxPriorityFeePerGas,\n\t\t});\n\n\t\tBaseTransaction._validateNotArray(txData);\n\n\t\tif (this.gasLimit * this.maxFeePerGas > MAX_INTEGER) {\n\t\t\tconst msg = this._errorMsg(\n\t\t\t\t'gasLimit * maxFeePerGas cannot exceed MAX_INTEGER (2^256-1)',\n\t\t\t);\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tif (this.maxFeePerGas < this.maxPriorityFeePerGas) {\n\t\t\tconst msg = this._errorMsg(\n\t\t\t\t'maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)',\n\t\t\t);\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tthis._validateYParity();\n\t\tthis._validateHighS();\n\n\t\tconst freeze = opts?.freeze ?? true;\n\t\tif (freeze) {\n\t\t\tObject.freeze(this);\n\t\t}\n\t}\n\n\t/**\n\t * The amount of gas paid for the data in this tx\n\t */\n\tpublic getDataFee(): bigint {\n\t\tif (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n\t\t\treturn this.cache.dataFee.value;\n\t\t}\n\n\t\tlet cost = super.getDataFee();\n\t\tcost += BigInt(getDataFeeEIP2930(this.accessList, this.common));\n\n\t\tif (Object.isFrozen(this)) {\n\t\t\tthis.cache.dataFee = {\n\t\t\t\tvalue: cost,\n\t\t\t\thardfork: this.common.hardfork(),\n\t\t\t};\n\t\t}\n\n\t\treturn cost;\n\t}\n\n\t/**\n\t * The up front amount that an account must have for this transaction to be valid\n\t * @param baseFee The base fee of the block (will be set to 0 if not provided)\n\t */\n\tpublic getUpfrontCost(baseFee = BigInt(0)): bigint {\n\t\tconst prio = this.maxPriorityFeePerGas;\n\t\tconst maxBase = this.maxFeePerGas - baseFee;\n\t\tconst inclusionFeePerGas = prio < maxBase ? prio : maxBase;\n\t\tconst gasPrice = inclusionFeePerGas + baseFee;\n\t\treturn this.gasLimit * gasPrice + this.value;\n\t}\n\n\t/**\n\t * Returns a Uint8Array Array of the raw Uint8Arrays of the EIP-1559 transaction, in order.\n\t *\n\t * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n\t * accessList, signatureYParity, signatureR, signatureS]`\n\t *\n\t * Use {@link FeeMarketEIP1559Transaction.serialize} to add a transaction to a block\n\t * with {@link Block.fromValuesArray}.\n\t *\n\t * For an unsigned tx this method uses the empty Uint8Array values for the\n\t * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n\t * representation for external signing use {@link FeeMarketEIP1559Transaction.getMessageToSign}.\n\t */\n\tpublic raw(): FeeMarketEIP1559ValuesArray {\n\t\treturn [\n\t\t\tbigIntToUnpaddedUint8Array(this.chainId),\n\t\t\tbigIntToUnpaddedUint8Array(this.nonce),\n\t\t\tbigIntToUnpaddedUint8Array(this.maxPriorityFeePerGas),\n\t\t\tbigIntToUnpaddedUint8Array(this.maxFeePerGas),\n\t\t\tbigIntToUnpaddedUint8Array(this.gasLimit),\n\t\t\tthis.to !== undefined ? this.to.buf : Uint8Array.from([]),\n\t\t\tbigIntToUnpaddedUint8Array(this.value),\n\t\t\tthis.data,\n\t\t\tthis.accessList,\n\t\t\tthis.v !== undefined ? bigIntToUnpaddedUint8Array(this.v) : Uint8Array.from([]),\n\t\t\tthis.r !== undefined ? bigIntToUnpaddedUint8Array(this.r) : Uint8Array.from([]),\n\t\t\tthis.s !== undefined ? bigIntToUnpaddedUint8Array(this.s) : Uint8Array.from([]),\n\t\t];\n\t}\n\n\t/**\n\t * Returns the serialized encoding of the EIP-1559 transaction.\n\t *\n\t * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n\t * accessList, signatureYParity, signatureR, signatureS])`\n\t *\n\t * Note that in contrast to the legacy tx serialization format this is not\n\t * valid RLP any more due to the raw tx type preceding and concatenated to\n\t * the RLP encoding of the values.\n\t */\n\tpublic serialize(): Uint8Array {\n\t\tconst base = this.raw();\n\t\treturn uint8ArrayConcat(TRANSACTION_TYPE_UINT8ARRAY, RLP.encode(base));\n\t}\n\n\t/**\n\t * Returns the serialized unsigned tx (hashed or raw), which can be used\n\t * to sign the transaction (e.g. for sending to a hardware wallet).\n\t *\n\t * Note: in contrast to the legacy tx the raw message format is already\n\t * serialized and doesn't need to be RLP encoded any more.\n\t *\n\t * ```javascript\n\t * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n\t * ```\n\t *\n\t * @param hashMessage - Return hashed message if set to true (default: true)\n\t */\n\tpublic getMessageToSign(hashMessage = true): Uint8Array {\n\t\tconst base = this.raw().slice(0, 9);\n\t\tconst message = uint8ArrayConcat(TRANSACTION_TYPE_UINT8ARRAY, RLP.encode(base));\n\t\tif (hashMessage) {\n\t\t\treturn keccak256(message);\n\t\t}\n\t\treturn message;\n\t}\n\n\t/**\n\t * Computes a sha3-256 hash of the serialized tx.\n\t *\n\t * This method can only be used for signed txs (it throws otherwise).\n\t * Use {@link FeeMarketEIP1559Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n\t */\n\tpublic hash(): Uint8Array {\n\t\tif (!this.isSigned()) {\n\t\t\tconst msg = this._errorMsg('Cannot call hash method if transaction is not signed');\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tif (Object.isFrozen(this)) {\n\t\t\tif (!this.cache.hash) {\n\t\t\t\tthis.cache.hash = keccak256(this.serialize());\n\t\t\t}\n\t\t\treturn this.cache.hash;\n\t\t}\n\t\treturn keccak256(this.serialize());\n\t}\n\n\t/**\n\t * Computes a sha3-256 hash which can be used to verify the signature\n\t */\n\tpublic getMessageToVerifySignature(): Uint8Array {\n\t\treturn this.getMessageToSign();\n\t}\n\n\t/**\n\t * Returns the public key of the sender\n\t */\n\tpublic getSenderPublicKey(): Uint8Array {\n\t\tif (!this.isSigned()) {\n\t\t\tconst msg = this._errorMsg('Cannot call this method if transaction is not signed');\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tconst msgHash = this.getMessageToVerifySignature();\n\t\tconst { v, r, s } = this;\n\n\t\tthis._validateHighS();\n\n\t\ttry {\n\t\t\treturn ecrecover(\n\t\t\t\tmsgHash,\n\t\t\t\tv! + BigInt(27), // Recover the 27 which was stripped from ecsign\n\t\t\t\tbigIntToUnpaddedUint8Array(r!),\n\t\t\t\tbigIntToUnpaddedUint8Array(s!),\n\t\t\t);\n\t\t} catch (e: any) {\n\t\t\tconst msg = this._errorMsg('Invalid Signature');\n\t\t\tthrow new Error(msg);\n\t\t}\n\t}\n\n\tpublic _processSignature(v: bigint, r: Uint8Array, s: Uint8Array) {\n\t\tconst opts = { ...this.txOptions, common: this.common };\n\n\t\treturn FeeMarketEIP1559Transaction.fromTxData(\n\t\t\t{\n\t\t\t\tchainId: this.chainId,\n\t\t\t\tnonce: this.nonce,\n\t\t\t\tmaxPriorityFeePerGas: this.maxPriorityFeePerGas,\n\t\t\t\tmaxFeePerGas: this.maxFeePerGas,\n\t\t\t\tgasLimit: this.gasLimit,\n\t\t\t\tto: this.to,\n\t\t\t\tvalue: this.value,\n\t\t\t\tdata: this.data,\n\t\t\t\taccessList: this.accessList,\n\t\t\t\tv: v - BigInt(27), // This looks extremely hacky: /util actually adds 27 to the value, the recovery bit is either 0 or 1.\n\t\t\t\tr: uint8ArrayToBigInt(r),\n\t\t\t\ts: uint8ArrayToBigInt(s),\n\t\t\t},\n\t\t\topts,\n\t\t);\n\t}\n\n\t/**\n\t * Returns an object with the JSON representation of the transaction\n\t */\n\tpublic toJSON(): JsonTx {\n\t\tconst accessListJSON = getAccessListJSON(this.accessList);\n\n\t\treturn {\n\t\t\tchainId: bigIntToHex(this.chainId),\n\t\t\tnonce: bigIntToHex(this.nonce),\n\t\t\tmaxPriorityFeePerGas: bigIntToHex(this.maxPriorityFeePerGas),\n\t\t\tmaxFeePerGas: bigIntToHex(this.maxFeePerGas),\n\t\t\tgasLimit: bigIntToHex(this.gasLimit),\n\t\t\tto: this.to !== undefined ? this.to.toString() : undefined,\n\t\t\tvalue: bigIntToHex(this.value),\n\t\t\tdata: bytesToHex(this.data),\n\t\t\taccessList: accessListJSON,\n\t\t\tv: this.v !== undefined ? bigIntToHex(this.v) : undefined,\n\t\t\tr: this.r !== undefined ? bigIntToHex(this.r) : undefined,\n\t\t\ts: this.s !== undefined ? bigIntToHex(this.s) : undefined,\n\t\t};\n\t}\n\n\t/**\n\t * Return a compact error string representation of the object\n\t */\n\tpublic errorStr() {\n\t\tlet errorStr = this._getSharedErrorPostfix();\n\t\terrorStr += ` maxFeePerGas=${this.maxFeePerGas} maxPriorityFeePerGas=${this.maxPriorityFeePerGas}`;\n\t\treturn errorStr;\n\t}\n\n\t/**\n\t * Internal helper function to create an annotated error message\n\t *\n\t * @param msg Base error message\n\t * @hidden\n\t */\n\tprotected _errorMsg(msg: string) {\n\t\treturn `${msg} (${this.errorStr()})`;\n\t}\n}\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/integration/contract.test.ts",[],["897","898"],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/integration/external-providers/extremely_simple.test.ts",["899"],["900","901","902"],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport Web3 from '../../../src/index';\n\ndescribe('compatibility with extremely simple external provider', () => {\n\tit('should accept a simple instance that is compatible with EIP1193', () => {\n\t\tinterface RequestArguments {\n\t\t\treadonly method: string;\n\t\t\treadonly params?: readonly unknown[] | object;\n\t\t}\n\n\t\tclass Provider {\n\t\t\t// eslint-disable-next-line class-methods-use-this, @typescript-eslint/require-await, @typescript-eslint/no-unused-vars\n\t\t\tpublic async request(_: RequestArguments): Promise<unknown> {\n\t\t\t\treturn undefined as unknown;\n\t\t\t}\n\t\t}\n\n\t\tconst testProvider = new Provider();\n\t\tconst { provider } = new Web3(testProvider);\n\t\texpect(provider).toBeDefined();\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/integration/external-providers/ganache.test.ts",["903"],[],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport ganache from 'ganache';\nimport { performBasicRpcCalls } from './helper';\nimport { getSystemTestMnemonic } from '../../shared_fixtures/system_tests_utils';\n\ndescribe('compatibility with `ganache` provider', () => {\n\tit('should initialize Web3, get accounts & block number and send a transaction', async () => {\n\t\tconst { provider } = ganache.server({\n\t\t\twallet: {\n\t\t\t\tmnemonic: getSystemTestMnemonic(),\n\t\t\t},\n\t\t});\n\n\t\tawait performBasicRpcCalls(provider);\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/integration/external-providers/hardhat.test.ts",["904"],[],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport hardhat from 'hardhat';\n\nimport { performBasicRpcCalls } from './helper';\n\ndescribe('compatibility with `hardhat` provider', () => {\n\tit('should initialize Web3, get accounts & block number and send a transaction', async () => {\n\t\t// use the hardhat provider for web3.js\n\t\tawait performBasicRpcCalls(hardhat.network.provider);\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/integration/external-providers/helper.ts",["905"],[],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { SupportedProviders } from 'web3-types';\nimport Web3 from '../../../src/index';\n\n/**\n * Performs basic RPC calls (like `eth_accounts`, `eth_blockNumber` and `eth_sendTransaction`)\n * @param provider - an instance of a compatible provider\n */\nexport async function performBasicRpcCalls(provider: SupportedProviders) {\n\tconst web3 = new Web3(provider);\n\tconst accounts = await web3.eth.getAccounts();\n\texpect(accounts).toBeDefined();\n\texpect(accounts.length).toBeGreaterThan(0);\n\t// get the last block number\n\tconst blockNumber0 = await web3.eth.getBlockNumber();\n\texpect(typeof blockNumber0).toBe('bigint');\n\n\t// send a transaction\n\tconst tx = await web3.eth.sendTransaction({\n\t\tto: accounts[1],\n\t\tfrom: accounts[0],\n\t\tvalue: '1',\n\t\tgas: 21000\n\t});\n\texpect(tx.status).toBe(BigInt(1));\n\n\tconst blockNumber1 = await web3.eth.getBlockNumber();\n\texpect(typeof blockNumber1).toBe('bigint');\n\n\t// After sending a transaction, the blocknumber is supposed to be greater than or equal the block number before sending the transaction\n\texpect(blockNumber1).toBeGreaterThanOrEqual(blockNumber0);\n}\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/integration/external-providers/in3.test.ts",["906","907"],[],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { waitWithTimeout, setRequestIdStart } from 'web3-utils';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport In3Client from 'in3';\n\nimport Web3 from '../../../src/index';\n\n// Actually it could take long time to get something from `in3` because of its decentralized nature.\n// \tAnd because of that, this test only try to get the last block number. And this also simplifies the configuration needed.\ndescribe('compatibility with `in3` provider', () => {\n\tit.skip('should get last block number', async () => {\n\t\t// use the In3Client as Http-Provider for web3.js\n\t\tconst web3 = new Web3(\n\t\t\tnew In3Client({\n\t\t\t\tproof: 'none',\n\t\t\t\tsignatureCount: 0,\n\t\t\t\trequestCount: 1,\n\t\t\t\tchainId: 'mainnet',\n\t\t\t}).createWeb3Provider(),\n\t\t);\n\n\t\t// TODO: remove the next line after this issue is closed: https://github.com/blockchainsllc/in3/issues/46\n\t\tsetRequestIdStart(0);\n\n\t\t// get the last block number\n\t\tconst blockNumber = await waitWithTimeout(web3.eth.getBlockNumber(), 25000);\n\n\t\tif (typeof blockNumber === 'undefined') {\n\t\t\tconsole.warn(\n\t\t\t\t'It took too long for in3 provider to get a block. The test of in3 will be skipped',\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\texpect(typeof blockNumber).toBe('bigint');\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/integration/external-providers/infura-rpc.test.ts",["908"],["909","910"],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport Web3 from '../../../src/index';\nimport { describeIf, isIpc, itIf } from '../../shared_fixtures/system_tests_utils';\n\ndescribeIf(!isIpc)('compatibility with `infura` remote rpc providers', () => {\n\titIf(\n\t\tprocess.env.INFURA_GOERLI_WS\n\t\t\t? process.env.INFURA_GOERLI_WS.toString().includes('ws')\n\t\t\t: false,\n\t)('should create Web3 class instance with `ws` string connection', () => {\n\t\tconst web3 = new Web3(process.env.INFURA_GOERLI_WS);\n\t\t// eslint-disable-next-line jest/no-standalone-expect\n\t\texpect(web3).toBeInstanceOf(Web3);\n\t});\n\n\titIf(\n\t\tprocess.env.INFURA_GOERLI_HTTP\n\t\t\t? process.env.INFURA_GOERLI_HTTP.toString().includes('http')\n\t\t\t: false,\n\t)('should create Web3 class instance with `http` string connection', () => {\n\t\tconst web3 = new Web3(process.env.INFURA_GOERLI_HTTP);\n\t\t// eslint-disable-next-line jest/no-standalone-expect\n\t\texpect(web3).toBeInstanceOf(Web3);\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/integration/external-providers/truffle-hdwallet.test.ts",["911","912"],["913"],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport HDWalletProvider from '@truffle/hdwallet-provider';\n\nimport { performBasicRpcCalls } from './helper';\nimport {\n\tcreateNewAccount,\n\tdescribeIf,\n\tgetSystemTestProvider,\n\tisIpc,\n} from '../../shared_fixtures/system_tests_utils';\nimport Web3 from '../../../src';\n\ndescribeIf(!isIpc)('compatibility with `truffle` `HDWalletProvider` provider', () => {\n\tlet provider: HDWalletProvider;\n\n\tbeforeAll(async () => {\n\t\tconst clientUrl = getSystemTestProvider();\n\t\tconst account1 = await createNewAccount({ unlock: true, refill: true });\n\t\tconst account2 = await createNewAccount({ unlock: true, refill: true });\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n\t\tprovider = new HDWalletProvider({\n\t\t\tprivateKeys: [account1.privateKey, account2.privateKey],\n\t\t\tproviderOrUrl: clientUrl,\n\t\t});\n\t});\n\tafterAll(() => {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n\t\tprovider?.engine?.stop();\n\t});\n\ttest('should create instance with external wallet provider', () => {\n\t\tconst web3 = new Web3(provider);\n\t\texpect(web3).toBeInstanceOf(Web3);\n\t});\n\ttest('should initialize Web3, get accounts & block number and send a transaction', async () => {\n\t\tawait performBasicRpcCalls(provider);\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/integration/handle_revert.test.ts",["914","915"],[],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { TransactionRevertInstructionError } from 'web3-errors';\nimport { Contract } from 'web3-eth-contract';\nimport WebSocketProvider from 'web3-providers-ws';\nimport Web3 from '../../src/index';\nimport { BasicAbi, BasicBytecode } from '../shared_fixtures/build/Basic';\nimport {\n\tcloseOpenConnection,\n\tcreateTempAccount,\n\tgetSystemTestProvider,\n\tgetSystemTestProviderUrl,\n\tisWs,\n} from '../shared_fixtures/system_tests_utils';\n\nError.stackTraceLimit = Infinity;\n\ndescribe.skip('eth', () => {\n\tlet web3: Web3;\n\tlet accounts: string[] = [];\n\tlet clientUrl: string;\n\n\tlet contract: Contract<typeof BasicAbi>;\n\tlet deployOptions: Record<string, unknown>;\n\tlet sendOptions: Record<string, unknown>;\n\n\tbeforeEach(async () => {\n\t\tclientUrl = getSystemTestProviderUrl();\n\t\tconst acc1 = await createTempAccount();\n\t\tconst acc2 = await createTempAccount();\n\t\taccounts = [acc1.address, acc2.address];\n\t\tweb3 = new Web3(getSystemTestProvider());\n\t\tif (isWs) {\n\t\t\tweb3 = new Web3(\n\t\t\t\tnew WebSocketProvider(\n\t\t\t\t\tclientUrl,\n\t\t\t\t\t{},\n\t\t\t\t\t{ delay: 1, autoReconnect: false, maxAttempts: 1 },\n\t\t\t\t),\n\t\t\t);\n\t\t} else {\n\t\t\tweb3 = new Web3(clientUrl);\n\t\t}\n\n\t\tif (isWs) {\n\t\t\tcontract = new web3.eth.Contract(BasicAbi, undefined, {\n\t\t\t\tprovider: new WebSocketProvider(\n\t\t\t\t\tclientUrl,\n\t\t\t\t\t{},\n\t\t\t\t\t{ delay: 1, autoReconnect: false, maxAttempts: 1 },\n\t\t\t\t),\n\t\t\t});\n\t\t} else {\n\t\t\tcontract = new web3.eth.Contract(BasicAbi, undefined, {\n\t\t\t\tprovider: clientUrl,\n\t\t\t});\n\t\t}\n\n\t\tdeployOptions = {\n\t\t\tdata: BasicBytecode,\n\t\t\targuments: [10, 'string init value'],\n\t\t};\n\n\t\tsendOptions = { from: accounts[0], gas: '1000000' };\n\n\t\tcontract = await contract.deploy(deployOptions).send(sendOptions);\n\t});\n\tafterAll(async () => {\n\t\tawait closeOpenConnection(web3);\n\t\tawait closeOpenConnection(contract);\n\t});\n\n\tdescribe('handleRevert', () => {\n\t\t// todo enable when figure out what happening in eth_call (doesn't throw error)\n\t\t// eslint-disable-next-line jest/expect-expect\n\t\tit('should get revert reason', async () => {\n\t\t\tcontract.handleRevert = true;\n\t\t\tawait expect(contract.methods.reverts().send({ from: accounts[0] })).rejects.toThrow(\n\t\t\t\tnew TransactionRevertInstructionError(\n\t\t\t\t\t'Returned error: execution reverted: REVERTED WITH REVERT',\n\t\t\t\t),\n\t\t\t);\n\t\t});\n\n\t\tit('should get revert reason for eth tx', async () => {\n\t\t\tweb3.eth.handleRevert = true;\n\t\t\tawait expect(\n\t\t\t\tweb3.eth.sendTransaction({\n\t\t\t\t\tfrom: accounts[0],\n\t\t\t\t\tgas: '0x3d0900',\n\t\t\t\t\tgasPrice: '0x3B9ACBF4',\n\t\t\t\t\tinput: '0x608060405234801561001057600080fdklkl',\n\t\t\t\t\tnonce: '0x10',\n\t\t\t\t\tto: undefined,\n\t\t\t\t\tvalue: '0x0',\n\t\t\t\t\ttype: '0x0',\n\t\t\t\t\tv: '0xa96',\n\t\t\t\t\tr: '0x1ba80b16306d1de8ff809c00f67c305e8636326096aba282828d331aa2ec30a1',\n\t\t\t\t\ts: '0x39f77e0b68d5524826e4385ad4e1f01e748f32c177840184ae65d9592fdfe5c',\n\t\t\t\t}),\n\t\t\t).rejects.toThrow(\n\t\t\t\tnew TransactionRevertInstructionError(\n\t\t\t\t\t'Returned error: invalid argument 0: json: cannot unmarshal invalid hex string into Go struct field TransactionArgs.data of type hexutil.Bytes',\n\t\t\t\t),\n\t\t\t);\n\t\t});\n\n\t\tit('should execute transaction', async () => {\n\t\t\tweb3.eth.handleRevert = true;\n\t\t\tawait expect(\n\t\t\t\tweb3.eth.sendTransaction({\n\t\t\t\t\tfrom: accounts[0],\n\t\t\t\t\tto: accounts[1],\n\t\t\t\t\tgas: '0x76c0',\n\t\t\t\t\tgasPrice: '0x9184e72a000',\n\t\t\t\t\tvalue: '0x9184e72a',\n\t\t\t\t\tdata: '0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675',\n\t\t\t\t}),\n\t\t\t).resolves.toBeDefined();\n\t\t});\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/integration/ipc.test.ts",["916"],[],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { IpcProvider } from 'web3-providers-ipc';\nimport {\n\tgetSystemTestProvider,\n\tdescribeIf,\n\tisIpc,\n\tcloseOpenConnection,\n\twaitForSocketConnect,\n} from '../shared_fixtures/system_tests_utils';\nimport Web3, { EthExecutionAPI, SupportedProviders } from '../../src/index';\n\ndescribe('Web3 instance', () => {\n\tlet provider: SupportedProviders<EthExecutionAPI> | string;\n\tlet web3: Web3;\n\n\tbeforeAll(() => {\n\t\tprovider = getSystemTestProvider();\n\t\tweb3 = new Web3(provider);\n\t});\n\tafterAll(async () => {\n\t\tawait closeOpenConnection(web3);\n\t});\n\n\tdescribeIf(isIpc)('Create Web3 class instance with ipc string providers', () => {\n\t\t// https://ethereum.stackexchange.com/questions/52574/how-to-connect-to-ethereum-node-geth-via-ipc-from-outside-of-docker-container\n\t\t// https://github.com/ethereum/go-ethereum/issues/17907\n\t\tit('should create instance with string of IPC provider', async () => {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\t\t\texpect(web3).toBeInstanceOf(Web3);\n\t\t\tawait waitForSocketConnect(web3.provider as IpcProvider);\n\t\t\texpect((web3.provider as IpcProvider).getStatus()).toBe('connected');\n\t\t});\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/integration/sync.test.ts",["917"],[],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport Web3 from '../../src/index';\nimport {\n\tcloseOpenConnection,\n\tdescribeIf,\n\tgetSystemTestProviderUrl,\n\tisIpc,\n\tisSyncTest,\n\tisWs,\n} from '../shared_fixtures/system_tests_utils';\n\nconst addPeer = async (web3: Web3, eNode: string) => {\n\treturn web3.requestManager.send({\n\t\tmethod: 'admin_addPeer',\n\t\tparams: [eNode],\n\t});\n};\nconst removePeer = async (web3: Web3, eNode: string) => {\n\treturn web3.requestManager.send({\n\t\tmethod: 'admin_removePeer',\n\t\tparams: [eNode],\n\t});\n};\nconst minerStart = async (web3: Web3, start: number) => {\n\treturn web3.requestManager.send({\n\t\tmethod: 'miner_start',\n\t\tparams: [start],\n\t});\n};\nconst nodeInfo = async (web3: Web3) => {\n\treturn web3.requestManager.send({\n\t\tmethod: 'admin_nodeInfo',\n\t\tparams: [],\n\t});\n};\nconst addAccount = async (web3: Web3) => {\n\treturn web3.requestManager.send({\n\t\tmethod: 'personal_newAccount',\n\t\tparams: ['1234'],\n\t});\n};\ndescribeIf((isIpc || isWs) && isSyncTest)('Sync nodes test', () => {\n\tlet web3Node1: Web3;\n\tlet web3Node2: Web3;\n\tbeforeAll(async () => {\n\t\tconst providerPath1 = isWs\n\t\t\t? getSystemTestProviderUrl().replace('8545', '18545')\n\t\t\t: getSystemTestProviderUrl().replace('/tmp/ipc', '/tmp/ipc1');\n\t\tconst providerPath2 = isWs\n\t\t\t? getSystemTestProviderUrl().replace('8545', '28545')\n\t\t\t: getSystemTestProviderUrl().replace('/tmp/ipc', '/tmp/ipc2');\n\n\t\tweb3Node1 = new Web3(providerPath1);\n\t\tawait addAccount(web3Node1);\n\t\tweb3Node2 = new Web3(providerPath2);\n\t\tawait addAccount(web3Node2);\n\t});\n\tafterAll(async () => {\n\t\tawait closeOpenConnection(web3Node1);\n\t\tawait closeOpenConnection(web3Node2);\n\t});\n\n\tdescribe('Start/end syncing', () => {\n\t\tit('should emit start syncing and end syncing events', async () => {\n\t\t\tconst subs = await web3Node2.eth.subscribe('syncing');\n\t\t\tconst dataPromise = new Promise(resolve => {\n\t\t\t\tsubs.on('data', resolve);\n\t\t\t});\n\t\t\tconst syncStartPromise = new Promise(resolve => {\n\t\t\t\tsubs.on('changed', resolve);\n\t\t\t});\n\t\t\tawait minerStart(web3Node1, 0);\n\t\t\tconst node1Info = await nodeInfo(web3Node1);\n\t\t\tawait addPeer(web3Node2, node1Info.enode);\n\t\t\tawait minerStart(web3Node1, 1);\n\n\t\t\texpect(await syncStartPromise).toBe(true);\n\t\t\tawait dataPromise;\n\t\t\tconst syncEndPromise = new Promise(resolve => {\n\t\t\t\tsubs.on('changed', resolve);\n\t\t\t});\n\t\t\texpect(await syncEndPromise).toBe(false);\n\t\t\tawait removePeer(web3Node2, node1Info.enode);\n\t\t});\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/integration/web3-plugin-add-tx.test.ts",[],["918"],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/integration/web3.abi.test.ts",["919"],[],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { validEncodeParametersData } from '../shared_fixtures/data';\nimport {\n\tgetSystemTestProvider,\n\twaitForOpenConnection,\n\tcloseOpenConnection,\n} from '../shared_fixtures/system_tests_utils';\nimport Web3, { SupportedProviders } from '../../src/index';\n\ndescribe('web3.abi', () => {\n\tlet clientUrl: string | SupportedProviders;\n\tlet web3: Web3;\n\n\tbeforeAll(async () => {\n\t\tclientUrl = getSystemTestProvider();\n\t\tweb3 = new Web3(clientUrl);\n\n\t\tawait waitForOpenConnection(web3);\n\t});\n\n\tafterAll(async () => {\n\t\tawait closeOpenConnection(web3);\n\t});\n\n\tit('hash correctly', () => {\n\t\tconst validData = validEncodeParametersData[0];\n\n\t\tconst encodedParameters = web3.eth.abi.encodeParameters(\n\t\t\tvalidData.input[0],\n\t\t\tvalidData.input[1],\n\t\t);\n\t\texpect(encodedParameters).toEqual(validData.output);\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/integration/web3.accounts.test.ts",["920"],["921"],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Web3Account } from 'web3-eth-accounts';\nimport {\n\tgetSystemTestProvider,\n\tcreateNewAccount,\n\twaitForOpenConnection,\n\tcloseOpenConnection,\n\tcreateTempAccount,\n} from '../shared_fixtures/system_tests_utils';\nimport Web3, { SupportedProviders } from '../../src/index';\n\nconst hexRegx = /0[xX][0-9a-fA-F]+/;\n\ndescribe('web3.accounts', () => {\n\tlet clientUrl: string | SupportedProviders;\n\tlet tempAccount: string;\n\tlet web3: Web3;\n\n\tbeforeAll(async () => {\n\t\tclientUrl = getSystemTestProvider();\n\t\tweb3 = new Web3(clientUrl);\n\t\tawait waitForOpenConnection(web3);\n\t});\n\tbeforeEach(async () => {\n\t\ttempAccount = (await createTempAccount()).address;\n\t});\n\n\tafterAll(async () => {\n\t\tawait closeOpenConnection(web3);\n\t});\n\n\tdescribe('create', () => {\n\t\tit('should create account', () => {\n\t\t\tconst account: Web3Account = web3.eth.accounts.create();\n\n\t\t\texpect(account).toEqual(\n\t\t\t\texpect.objectContaining({\n\t\t\t\t\taddress: expect.stringMatching(hexRegx),\n\t\t\t\t\tprivateKey: expect.stringMatching(hexRegx),\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\n\t\tdescribe('signTransaction', () => {\n\t\t\tit('should be able to sign the transaction from created account', async () => {\n\t\t\t\tconst account: Web3Account = web3.eth.accounts.create();\n\t\t\t\tconst tx = {\n\t\t\t\t\tfrom: account.address,\n\t\t\t\t\tto: tempAccount,\n\t\t\t\t\tvalue: web3.utils.toWei('0.00001', 'ether'),\n\t\t\t\t\tgas: '0x5218',\n\t\t\t\t\tdata: '0x1',\n\t\t\t\t};\n\n\t\t\t\t// Fund this account with some ether\n\t\t\t\tawait expect(\n\t\t\t\t\tweb3.eth.sendTransaction({\n\t\t\t\t\t\tfrom: tempAccount,\n\t\t\t\t\t\tto: account.address,\n\t\t\t\t\t\tvalue: web3.utils.toWei('0.00005', 'ether'),\n\t\t\t\t\t}),\n\t\t\t\t).resolves.toBeDefined();\n\n\t\t\t\tconst txWithGas = {\n\t\t\t\t\t...tx,\n\t\t\t\t\tgasPrice: '0x271000',\n\t\t\t\t};\n\t\t\t\t// Sign the tx from that account\n\t\t\t\tconst signedTx = await account.signTransaction(txWithGas);\n\n\t\t\t\texpect(signedTx).toEqual(\n\t\t\t\t\texpect.objectContaining({\n\t\t\t\t\t\tmessageHash: expect.stringMatching(hexRegx),\n\t\t\t\t\t\trawTransaction: expect.stringMatching(hexRegx),\n\t\t\t\t\t\ttransactionHash: expect.stringMatching(hexRegx),\n\t\t\t\t\t\tv: expect.stringMatching(hexRegx),\n\t\t\t\t\t\tr: expect.stringMatching(hexRegx),\n\t\t\t\t\t\ts: expect.stringMatching(hexRegx),\n\t\t\t\t\t}),\n\t\t\t\t);\n\n\t\t\t\t// The signed transaction is accepted by the node\n\t\t\t\tawait expect(\n\t\t\t\t\tweb3.eth.sendSignedTransaction(signedTx.rawTransaction),\n\t\t\t\t).resolves.toEqual(\n\t\t\t\t\texpect.objectContaining({ transactionHash: signedTx.transactionHash }),\n\t\t\t\t);\n\t\t\t});\n\n\t\t\tit('should throw error if gas is to low', async () => {\n\t\t\t\tconst account: Web3Account = web3.eth.accounts.create();\n\n\t\t\t\tconst tx = {\n\t\t\t\t\tfrom: account.address,\n\t\t\t\t\tto: tempAccount,\n\t\t\t\t\tvalue: web3.utils.toWei('0.1', 'ether'),\n\t\t\t\t\tgas: '0x1',\n\t\t\t\t\tdata: '0x1',\n\t\t\t\t\tgasPrice: '0x38562',\n\t\t\t\t};\n\n\t\t\t\tawait expect(account.signTransaction(tx)).rejects.toThrow('gasLimit is too low.');\n\t\t\t});\n\n\t\t\t// TODO This test should fail, but it's not. Need to debug further to figure out why.\n\t\t\t// eslint-disable-next-line jest/no-disabled-tests\n\t\t\tit.skip('should throw error if signed by private key not associated with \"from\" field', async () => {\n\t\t\t\tconst account: Web3Account = web3.eth.accounts.create();\n\n\t\t\t\tconst tx = {\n\t\t\t\t\tfrom: tempAccount,\n\t\t\t\t\tto: account.address,\n\t\t\t\t\tvalue: web3.utils.toWei('0.1', 'ether'),\n\t\t\t\t\tgas: '0x1',\n\t\t\t\t\tdata: '0x1',\n\t\t\t\t};\n\n\t\t\t\tawait expect(account.signTransaction(tx)).rejects.toThrow('Error');\n\t\t\t});\n\t\t});\n\t});\n\n\tdescribe('signTransaction', () => {\n\t\tit('should be able to sign the transaction from created account', async () => {\n\t\t\tconst account: Web3Account = web3.eth.accounts.create();\n\n\t\t\tconst tx = {\n\t\t\t\tfrom: account.address,\n\t\t\t\tto: tempAccount,\n\t\t\t\tvalue: web3.utils.toWei('0.1', 'ether'),\n\t\t\t\tgas: '0x5218',\n\t\t\t\tdata: '0x1',\n\t\t\t\tgasPrice: '0x48523',\n\t\t\t};\n\n\t\t\t// Fund this account with some ether\n\t\t\tawait expect(\n\t\t\t\tweb3.eth.sendTransaction({\n\t\t\t\t\tfrom: tempAccount,\n\t\t\t\t\tto: account.address,\n\t\t\t\t\tvalue: web3.utils.toWei('0.5', 'ether'),\n\t\t\t\t}),\n\t\t\t).resolves.toBeDefined();\n\n\t\t\t// Sign the tx from that account\n\t\t\tconst signedTx = await web3.eth.accounts.signTransaction(tx, account.privateKey);\n\n\t\t\texpect(signedTx).toEqual(\n\t\t\t\texpect.objectContaining({\n\t\t\t\t\tmessageHash: expect.stringMatching(hexRegx),\n\t\t\t\t\trawTransaction: expect.stringMatching(hexRegx),\n\t\t\t\t\ttransactionHash: expect.stringMatching(hexRegx),\n\t\t\t\t\tv: expect.stringMatching(hexRegx),\n\t\t\t\t\tr: expect.stringMatching(hexRegx),\n\t\t\t\t\ts: expect.stringMatching(hexRegx),\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\t// The signed transaction is accepted by the node\n\t\t\tawait expect(web3.eth.sendSignedTransaction(signedTx.rawTransaction)).resolves.toEqual(\n\t\t\t\texpect.objectContaining({ transactionHash: signedTx.transactionHash }),\n\t\t\t);\n\t\t});\n\n\t\tit('should throw error if gas is to low', async () => {\n\t\t\tconst account: Web3Account = web3.eth.accounts.create();\n\n\t\t\tconst tx = {\n\t\t\t\tfrom: account.address,\n\t\t\t\tto: tempAccount,\n\t\t\t\tvalue: web3.utils.toWei('0.1', 'ether'),\n\t\t\t\tgas: '0x1',\n\t\t\t\tdata: '0x1',\n\t\t\t\tgasPrice: '0x1',\n\t\t\t};\n\n\t\t\tawait expect(web3.eth.accounts.signTransaction(tx, account.privateKey)).rejects.toThrow(\n\t\t\t\t'gasLimit is too low.',\n\t\t\t);\n\t\t});\n\t});\n\n\tdescribe('privateKeyToAccount', () => {\n\t\tit('should create account from private key', async () => {\n\t\t\tconst acc = await createNewAccount();\n\t\t\tconst createdAccount: Web3Account = web3.eth.accounts.privateKeyToAccount(\n\t\t\t\tacc.privateKey,\n\t\t\t);\n\t\t\texpect(acc.address.toLowerCase()).toBe(createdAccount.address.toLowerCase());\n\t\t});\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/integration/web3.config.test.ts",["922"],[],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { SupportedProviders, Web3BaseProvider } from 'web3-types';\nimport {\n\tcloseOpenConnection,\n\tcreateTempAccount,\n\tgetSystemTestProvider,\n\tisWs,\n\twaitForOpenConnection,\n} from '../shared_fixtures/system_tests_utils';\nimport Web3 from '../../src/index';\n\ndescribe('Web3 instance', () => {\n\tlet provider: string | SupportedProviders;\n\tlet accounts: string[];\n\tlet web3: Web3;\n\tlet currentAttempt = 0;\n\n    beforeEach(() => {\n\t\tcurrentAttempt = 0;\n\t});\n\n\tbeforeAll(async () => {\n\t\tprovider = getSystemTestProvider();\n\t\tconst acc1 = await createTempAccount();\n\t\tconst acc2 = await createTempAccount();\n\t\taccounts = [acc1.address, acc2.address];\n\t\tweb3 = new Web3(provider);\n\t});\n\tafterAll(async () => {\n\t\ttry {\n\t\t\tawait closeOpenConnection(web3);\n\t\t} catch (e) {\n\t\t\tconsole.warn(\"Failed to close open con\", e)\n\t\t}\n\t});\n\n    afterEach(async () => {\n\t\tif (isWs) {\n\t\t\t// make sure we try to close the connection after it is established\n\t\t\tif (\n\t\t\t\tweb3?.provider &&\n\t\t\t\t(web3.provider as unknown as Web3BaseProvider).getStatus() === 'connecting'\n\t\t\t) {\n\t\t\t\tawait waitForOpenConnection(web3, currentAttempt);\n\t\t\t}\n\n\t\t\tif (web3?.provider) {\n\t\t\t\t(web3.provider as unknown as Web3BaseProvider).disconnect(1000, '');\n\t\t\t}\n\t\t}\n\t});\n\n    it('should be send transaction, change for defaultTransactionType and successfully send transaction with different type', async () => {\n\t\tconst transaction = {\n            from: accounts[0],\n            to: accounts[0],\n            value: 100000,\n          }\n        \n          const receipt = await web3.eth.sendTransaction(transaction);\n          expect(receipt.type).toEqual(BigInt(2))\n\n        web3.setConfig({defaultTransactionType: \"0x0\"});\n        \n        const receipt2 = await web3.eth.sendTransaction(transaction);\n        expect(receipt2.type).toEqual(BigInt(0))\n\t})\n})","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/integration/web3.eth.transaction.test.ts",["923","924"],["925","926"],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport * as httpProvider from 'web3-providers-http';\nimport { Web3Account } from 'web3-eth-accounts';\nimport Web3, { DEFAULT_RETURN_FORMAT, Transaction } from '../../src';\nimport testsData from '../fixtures/transactions.json';\n\njest.mock('web3-providers-http');\n\ndescribe('signTransaction', () => {\n\tlet blockNum = 1;\n\n\tit.each(testsData)(\n\t\t'Integration test of transaction %s with Web3, Web3.Eth, Web3.Accounts and Provider should pass',\n\t\tasync txObj => {\n\t\t\tconst web3: Web3 = new Web3('http://127.0.0.1:8080');\n\n\t\t\tconst account: Web3Account = web3.eth.accounts.privateKeyToAccount(txObj.privateKey);\n\n\t\t\tweb3.eth.wallet?.add(txObj.privateKey);\n\n\t\t\tconst normalTx: Transaction = {\n\t\t\t\t...txObj.transaction,\n\t\t\t\tfrom: account.address,\n\t\t\t};\n\n\t\t\t// either make it legacy or type 0x2 tx, instead of keeping both gasPrice and (maxPriorityFeePerGas maxFeePerGas)\n\t\t\tif (txObj.transaction?.maxPriorityFeePerGas) {\n\t\t\t\tdelete normalTx['gasPrice'];\n\t\t\t} else {\n\t\t\t\tdelete normalTx['maxPriorityFeePerGas'];\n\t\t\t\tdelete normalTx['maxFeePerGas'];\n\t\t\t}\n\n\t\t\tjest.spyOn(httpProvider.HttpProvider.prototype, 'request').mockImplementation(\n\t\t\t\tasync (payload: any) => {\n\t\t\t\t\tconst response = {\n\t\t\t\t\t\tjsonrpc: '2.0',\n\t\t\t\t\t\tid: payload.id,\n\t\t\t\t\t\tresult: {},\n\t\t\t\t\t};\n\n\t\t\t\t\tswitch (payload.method) {\n\t\t\t\t\t\tcase 'net_version':\n\t\t\t\t\t\t\tresponse.result = '1';\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'eth_chainId':\n\t\t\t\t\t\t\tresponse.result = '0x1';\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'eth_blockNumber':\n\t\t\t\t\t\t\tblockNum += 10;\n\t\t\t\t\t\t\tresponse.result = `0x${blockNum.toString(16)}`;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'eth_getTransactionReceipt':\n\t\t\t\t\t\t\tresponse.result = {\n\t\t\t\t\t\t\t\tblockHash:\n\t\t\t\t\t\t\t\t\t'0xa957d47df264a31badc3ae823e10ac1d444b098d9b73d204c40426e57f47e8c3',\n\t\t\t\t\t\t\t\tblockNumber: `0x${blockNum.toString(16)}`,\n\t\t\t\t\t\t\t\tcumulativeGasUsed: '0xa12515',\n\t\t\t\t\t\t\t\t// \"effectiveGasPrice\": payload.effectiveGasPrice,\n\t\t\t\t\t\t\t\tfrom: payload.from,\n\t\t\t\t\t\t\t\tgasUsed: payload.gasLimit,\n\t\t\t\t\t\t\t\t// \"logs\": [{}],\n\t\t\t\t\t\t\t\t// \"logsBloom\": \"0xa957d47df264a31badc3ae823e10ac1d444b098d9b73d204c40426e57f47e8c3\", // 256 byte bloom filter\n\t\t\t\t\t\t\t\tstatus: '0x1',\n\t\t\t\t\t\t\t\tto: payload.to,\n\t\t\t\t\t\t\t\ttransactionHash:\n\t\t\t\t\t\t\t\t\t'0x85d995eba9763907fdf35cd2034144dd9d53ce32cbec21349d4b12823c6860c5',\n\t\t\t\t\t\t\t\ttransactionIndex: '0x66',\n\t\t\t\t\t\t\t\t// \"type\": payload.type\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'eth_sendRawTransaction':\n\t\t\t\t\t\t\tif (txObj.transaction.maxPriorityFeePerGas !== undefined) {\n\t\t\t\t\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\t\t\t\t\texpect(payload.params[0]).toBe(txObj.signedLondon); // validate transaction for London HF\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// eslint-disable-next-line jest/no-conditional-expect\n\t\t\t\t\t\t\t\texpect(payload.params[0]).toBe(txObj.signedBerlin); // validate transaction for Berlin HF\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tresponse.result =\n\t\t\t\t\t\t\t\t'0x895ebb29d30e0afa891a5ca3a2687e073bd2c7ab544117ac386c8d8ff3ad583b';\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new Error(`Unknown payload ${payload}`);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn new Promise(resolve => {\n\t\t\t\t\t\tresolve(response as any);\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tconst res = await web3.eth.sendTransaction(normalTx, DEFAULT_RETURN_FORMAT, {\n\t\t\t\tignoreGasPricing: true,\n\t\t\t\tcheckRevertBeforeSending: false,\n\t\t\t});\n\t\t\texpect(res).toBeDefined();\n\t\t},\n\t);\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/integration/web3.format.test.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/integration/web3.setProvider.test.ts",["927"],[],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport Web3 from '../../src/index';\nimport {\n\tcloseOpenConnection,\n\tdescribeIf,\n\tgetSystemTestProviderUrl,\n\tisHttp,\n\tisWs,\n\twaitForOpenConnection,\n} from '../shared_fixtures/system_tests_utils';\n\ndescribeIf(isWs || isHttp)('web3.contract.setProvider', () => {\n\tlet clientUrl: string;\n\tlet secontUrl: string;\n\tlet web3: Web3;\n\n\tbeforeAll(async () => {\n\t\tclientUrl = getSystemTestProviderUrl();\n\t\tsecontUrl = clientUrl.startsWith('http')\n\t\t\t? clientUrl.replace('http', 'ws')\n\t\t\t: clientUrl.replace('ws', 'http');\n\t\tweb3 = new Web3(clientUrl);\n\n\t\tawait waitForOpenConnection(web3);\n\t});\n\n\tafterAll(async () => {\n\t\tawait closeOpenConnection(web3);\n\t});\n\n\ttest('create few contracts and check providers', () => {\n\t\tconst c1 = new web3.eth.Contract([]);\n\t\tconst c2 = new web3.eth.Contract([]);\n\n\t\texpect(c1.provider).toBe(web3.provider);\n\t\texpect(c2.provider).toBe(web3.provider);\n\t});\n\n\ttest('create few contracts and check providers. set different provider', () => {\n\t\tconst c1 = new web3.eth.Contract([]);\n\t\tconst c2 = new web3.eth.Contract([]);\n\n\t\texpect(c1.provider).toBe(web3.provider);\n\t\texpect(c2.provider).toBe(web3.provider);\n\n\t\tweb3.setProvider(secontUrl);\n\n\t\texpect(c1.provider).toBe(web3.provider);\n\t\texpect(c2.provider).toBe(web3.provider);\n\t});\n\n\ttest('create few contracts, set different provider to contract and check other contract', () => {\n\t\tconst c1 = new web3.eth.Contract([]);\n\t\tconst c2 = new web3.eth.Contract([]);\n\n\t\texpect(c1.provider).toBe(web3.provider);\n\t\texpect(c2.provider).toBe(web3.provider);\n\n\t\tc1.setProvider(secontUrl);\n\n\t\texpect(c1.provider).toBe(web3.provider);\n\t\texpect(c2.provider).toBe(web3.provider);\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/integration/web3.test.ts",[],["928","929","930","931","932","933","934","935","936","937","938","939"],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/integration/ws.test.ts",["940"],["941"],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { WebSocketProvider } from 'web3-providers-ws';\nimport {\n    describeIf, getSystemTestProvider, isWs,\n} from '../shared_fixtures/system_tests_utils';\nimport Web3 from '../../src/index';\n\n\n\ndescribe('Web3 instance', () => {\n\tlet web3: Web3;\n\n\tbeforeEach(() => {\n\t\tconst provider = getSystemTestProvider();\n\t\tweb3 = new Web3(provider);\n\t});\n\n\tdescribeIf(isWs)('web3 ws tests', () => {\n\t\tit('should connect and disconnect using safe disconnect subscription successfully', async () => {\n            const subscription = await web3.eth.subscribe(\"newBlockHeaders\");\n            // eslint-disable-next-line\n            subscription.unsubscribe();\n            // eslint-disable-next-line\n            await expect((web3.currentProvider as WebSocketProvider).safeDisconnect()).resolves.not.toThrow();\n\t\t});\n\t});\n});","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/shared_fixtures/Basic.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/shared_fixtures/Greeter.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/shared_fixtures/build/Basic.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/shared_fixtures/build/DeployRevert.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/shared_fixtures/build/ERC20Token.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/shared_fixtures/build/ERC721Token.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/shared_fixtures/build/ErrorsContract.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/shared_fixtures/build/Greeter.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/shared_fixtures/build/GreeterWithOverloading.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/shared_fixtures/build/MsgSender.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/shared_fixtures/build/MyContract.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/shared_fixtures/build/NegativeNumbers.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/shared_fixtures/contracts/ERC20Token.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/shared_fixtures/contracts/ERC721Token.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/shared_fixtures/data.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/shared_fixtures/system_tests_utils.ts",[],["942","943","944","945","946","947","948","949","950","951"],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/shared_fixtures/utils.ts",[],["952"],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/stress/data.test.ts",[],["953","954","955","956"],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/stress/requests.test.ts",[],["957","958","959","960","961","962","963","964","965"],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/stress/validation.test.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/unit/accounts.test.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/unit/index.test.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/unit/version.test.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/unit/web3-custom-subscriptions.test.ts",["966"],["967"],"﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Web3Subscription, Web3SubscriptionManager } from 'web3-core';\nimport { Web3 } from '../../src/web3';\n\nclass CustomSubscription extends Web3Subscription<\n\t{\n\t\tdata: string;\n\t},\n\t{\n\t\treadonly customArgs?: string;\n\t}\n> {\n\tprotected _buildSubscriptionParams() {\n\t\treturn ['someCustomSubscription', this.args];\n\t}\n\n\tpublic get subscriptionManager() {\n\t\treturn super.subscriptionManager;\n\t}\n}\n\nconst CustomSub = {\n\tcustom: CustomSubscription,\n};\n\ndescribe('Web3 Custom Subscriptions', () => {\n\tlet web3: Web3<{ custom: typeof CustomSubscription }>;\n\tbeforeAll(() => {\n\t\tweb3 = new Web3({\n\t\t\tregisteredSubscriptions: CustomSub,\n\t\t});\n\t});\n\n\tit('should be able to define and subscribe to custom subscription', async () => {\n\t\tconst args = {\n\t\t\tcustomArgs: 'hello custom',\n\t\t};\n\t\tconst exec = new Promise((resolve, reject) => {\n\t\t\tconst provider = {\n\t\t\t\tsend: jest.fn().mockImplementation((obj: unknown) => {\n\t\t\t\t\texpect(obj).toMatchObject({\n\t\t\t\t\t\tid: expect.stringMatching(\n\t\t\t\t\t\t\t// match a Guid:\n\t\t\t\t\t\t\t/[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}/i,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tjsonrpc: '2.0',\n\t\t\t\t\t\tmethod: 'eth_subscribe',\n\t\t\t\t\t\tparams: ['someCustomSubscription', args],\n\t\t\t\t\t});\n\t\t\t\t\tresolve(true);\n\t\t\t\t}),\n\t\t\t\tsupportsSubscriptions: () => {\n\t\t\t\t\treturn true;\n\t\t\t\t},\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\tweb3.provider = provider;\n\n\t\t\t\t// eslint-disable-next-line no-void\n\t\t\t\tvoid web3.subscriptionManager.subscribe('custom', args);\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t});\n\t\tawait expect(exec).resolves.toBe(true);\n\t});\n\n\tit('should access subscriptionManager from derived class', async () => {\n\t\tconst sub = new CustomSubscription(\n\t\t\t{ customArgs: undefined },\n\t\t\t{\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\t\tsubscriptionManager: web3.subscriptionManager as Web3SubscriptionManager<\n\t\t\t\t\tunknown,\n\t\t\t\t\tany\n\t\t\t\t>,\n\t\t\t},\n\t\t);\n\t\texpect(web3.subscriptionManager).toBe(sub.subscriptionManager);\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/unit/web3.config.test.ts",["968","969","970","971"],[],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { ETH_DATA_FORMAT } from 'web3-types';\nimport {Web3Context} from 'web3-core'; \nimport { Web3 } from '../../src';\n\ndescribe('web3config web3 tests', () => {\n\n    describe('web3config contract', () => {\n\n        it('create web3context with configs and should set it for web3', async () => {\n            const context = new Web3Context(\"http://127.0.0.1:8545\");\n            context.setConfig({defaultTransactionType: \"0x0\"});\n            const web3 = new Web3(context);\n            expect(web3.getContextObject().config.defaultTransactionType).toBe(\"0x0\");\n            expect(web3.config.defaultTransactionType).toBe(\"0x0\");\n            expect(web3.eth.getContextObject().config.defaultTransactionType).toBe(\"0x0\")\n        });\n    \n        it('should be able to create web3 and setconfig for contracts', async () => {\n            const web3 = new Web3(\"http://127.0.0.1:8545\");\n            web3.setConfig({defaultTransactionType: \"0x0\"});\n            expect(web3.getContextObject().config.defaultTransactionType).toBe(\"0x0\");\n            expect(web3.config.defaultTransactionType).toBe(\"0x0\");\n            expect(web3.eth.getContextObject().config.defaultTransactionType).toBe(\"0x0\")\n    \n            const contract = new web3.eth.Contract([], \"\");\n            expect(contract.config.defaultTransactionType).toBe(\"0x0\")\n            expect(contract.getContextObject().config.defaultTransactionType).toBe(\"0x0\");\n\n            contract.setConfig({contractDataInputFill:\"both\"});\n            expect(contract.getContextObject().config.contractDataInputFill).toBe(\"both\");\n\n            // web3 config shouldn't change\n            expect(web3.getContextObject().config.contractDataInputFill).toBe(\"data\");\n            expect(web3.config.contractDataInputFill).toBe(\"data\");\n            expect(web3.eth.getContextObject().config.contractDataInputFill).toBe(\"data\")\n        });\n        it('should change web3 config context but not contract config context', async () => {\n            const web3 = new Web3(\"http://127.0.0.1:8545\");\n            const contract = new web3.eth.Contract([])\n            web3.setConfig({defaultTransactionType:\"0x0\"});\n            expect(contract.getContextObject().config.defaultTransactionType).toBe(\"0x2\")\n            expect(web3.getContextObject().config.defaultTransactionType).toBe(\"0x0\");\n        });\n\n        it('should not change web3config when changing contract config context', async () => {\n            const web3 = new Web3(\"http://127.0.0.1:8545\");\n            const contract = new web3.eth.Contract([])\n            contract.setConfig({defaultTransactionType:\"0x0\"});\n            expect(contract.getContextObject().config.defaultTransactionType).toBe(\"0x0\")\n            expect(web3.getContextObject().config.defaultTransactionType).toBe(\"0x2\");\n        });\n\n        it('should create two contracts with different configs', () => {\n            const web3 = new Web3('http://127.0.0.1:8545');\n\n            web3.setConfig({ contractDataInputFill: \"data\" });\n            const c1 = new web3.eth.Contract([], '')\n\n            const c2 = new web3.eth.Contract([], new Web3Context({config: {contractDataInputFill: \"input\"}}))\n            \n            const c3 = new web3.eth.Contract([], {dataInputFill: \"input\"})\n            expect(web3.config.contractDataInputFill).toBe(\"data\")\n            expect(c1.config.contractDataInputFill).toBe(\"data\")\n            expect(c2.config.contractDataInputFill).toBe(\"input\");\n            expect(c3.config.contractDataInputFill).toBe(\"input\");\n\n        });\n\n        it('should create a contract with context and returnFormat properly with different parameters', () => {\n            const web3 = new Web3('http://127.0.0.1:8545');\n            web3.setConfig({ contractDataInputFill: \"data\" });\n\n            // create contract with context in second param\n            const c1 = new web3.eth.Contract([], new Web3Context({config: {contractDataInputFill: \"input\"}}))\n\n            // create contract with context in third param\n            const c2 = new web3.eth.Contract([], \"\", new Web3Context({config: {contractDataInputFill: \"both\"}}))\n\n            // create contract with context in fourth param\n            const c3 = new web3.eth.Contract([], \"\", {gas: \"gas\"}, new Web3Context({config: {contractDataInputFill: \"both\"}}))\n\n            expect(c1.config.contractDataInputFill).toBe(\"input\")\n            expect(c1.getContextObject().config.contractDataInputFill).toBe(\"input\");\n\n            expect(c2.config.contractDataInputFill).toBe(\"both\")\n            expect(c2.getContextObject().config.contractDataInputFill).toBe(\"both\");\n\n            expect(c3.config.contractDataInputFill).toBe(\"both\")\n            expect(c3.getContextObject().config.contractDataInputFill).toBe(\"both\");\n\n            // create contract with returnFormat in fourth param\n            const c4 = new web3.eth.Contract([], \"\", {gas: \"gas\"}, ETH_DATA_FORMAT);\n            \n            // create contract with returnFormat in fifth param\n            const c5 = new web3.eth.Contract([], \"\", {gas: \"gas\"}, new Web3Context({config: {contractDataInputFill: \"data\"}}), ETH_DATA_FORMAT)\n\n            expect(c4.config.contractDataInputFill).toBe(\"data\")\n            expect(c4.getContextObject().config.contractDataInputFill).toBe(\"data\");\n\n            expect(c5.config.contractDataInputFill).toBe(\"data\")\n            expect(c5.getContextObject().config.contractDataInputFill).toBe(\"data\");\n        })\n\n        it('should create contracts with different ways to configure', () => {\n            const web3 = new Web3('http://127.0.0.1:8545');\n            web3.setConfig({ contractDataInputFill: \"data\" });\n\n            const c1 = new web3.eth.Contract([], '')\n\n            const c2 = new web3.eth.Contract([], new Web3Context({config: {contractDataInputFill: \"input\"}}))\n            \n            const c3 = new web3.eth.Contract([], {dataInputFill: \"input\"})\n\n            expect(web3.config.contractDataInputFill).toBe(\"data\")\n            expect(c1.config.contractDataInputFill).toBe(\"data\")\n            expect(c2.config.contractDataInputFill).toBe(\"input\");\n            expect(c3.config.contractDataInputFill).toBe(\"input\");\n\n        });\n\n        it('should populate dataInputFill properly', () => {\n            const web3 = new Web3(\"http://127.0.0.1:8545\");\n            // create a contract with options as second parameter\n            const c1 = new web3.eth.Contract([], {dataInputFill: \"both\"});\n            expect((c1.config.contractDataInputFill)).toBe(\"both\");\n\n            // create a contract with options as third parameter\n            const c2 = new web3.eth.Contract([], \"\", {dataInputFill: \"both\"});\n            expect((c2.config.contractDataInputFill)).toBe(\"both\");\n\n        });\n    })\n    // TODO: finish config unit tests\n\t\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/unit/web3.extend.test.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/unit/web3.test.ts",[],["972","973"],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3/test/unit/web3eip6963.test.ts",["974"],["975","976","977"],"﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport {\n  onNewProviderDiscovered,\n\trequestEIP6963Providers\n} from \"../../src/web3_eip6963\";\n\ndescribe('requestEIP6963Providers', () => {\n  it('should reject with an error if window object is not available', async () => {\n    // Mocking window object absence\n    (global as any).window = undefined;\n\n     // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n    await expect(requestEIP6963Providers()).rejects.toThrow(\"window object not available, EIP-6963 is intended to be used within a browser\");\n  });\n\n  it('should resolve with updated providers map when events are triggered', async () => {\n    class CustomEventPolyfill extends Event {\n      public detail: any;\n      public constructor(eventType: string, eventInitDict: any) {\n        super(eventType, eventInitDict);\n        this.detail = eventInitDict.detail;\n      }\n    }\n    \n    (global as any).CustomEvent = CustomEventPolyfill;\n    \n    const mockProviderDetail = {\n      info: { uuid: 'test-uuid', name: 'Test Provider', icon: 'test-icon', rdns: 'test-rdns' },\n      provider: {} // Mock provider object\n    };\n\n    const mockEvent = {\n      type: 'eip6963:announceProvider',\n      detail: mockProviderDetail\n    };\n\n    // Mock window methods\n    (global as any).window  = {\n      addEventListener: jest.fn().mockImplementation(\n\n          (_event, callback) => callback(mockEvent)), // eslint-disable-line\n      dispatchEvent: jest.fn()\n    };\n\n    const result = await requestEIP6963Providers();\n\n    expect(result).toEqual(new Map([['test-uuid', mockProviderDetail]]));\n  });\n\n  it('onNewProviderDiscovered should throw an error if window object is not available', () => {\n    // Mock the window object not being available\n    (global as any).window = undefined;\n\n    // Expect an error to be thrown\n    expect(() => {\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      onNewProviderDiscovered((_providerEvent) => {});\n    }).toThrow(\"window object not available, EIP-6963 is intended to be used within a browser\");\n\n\n  });\n\n  it('onNewProviderDiscovered should add an event listener when window object is available', () => {\n    (global as any).window = {\n      addEventListener: jest.fn(),\n    };\n\n    const callback = jest.fn();\n    onNewProviderDiscovered(callback);\n\n    // Expect the callback to have been called when the event listener is added\n    expect(global.window.addEventListener).toHaveBeenCalledWith('web3:providersMapUpdated', callback);\n  });\n\n});",{"ruleId":"978","severity":1,"message":"979","line":327,"column":8,"nodeType":"980","endLine":327,"endColumn":12},{"ruleId":"981","severity":2,"message":"982","line":1,"column":36,"nodeType":null,"endLine":2,"endColumn":1,"fix":"983","suppressions":"984"},{"ruleId":"978","severity":1,"message":"985","line":26,"column":8,"nodeType":"980","endLine":26,"endColumn":16},{"ruleId":"986","severity":2,"message":"987","line":18,"column":1,"nodeType":"988","messageId":"989","endLine":233,"endColumn":1,"suppressions":"990"},{"ruleId":"991","severity":2,"message":"992","line":120,"column":9,"nodeType":"993","messageId":"994","endLine":120,"endColumn":13,"suppressions":"995"},{"ruleId":"996","severity":1,"message":"997","line":62,"column":49,"nodeType":"998","messageId":"999","endLine":62,"endColumn":52,"suggestions":"1000"},{"ruleId":"996","severity":1,"message":"997","line":89,"column":54,"nodeType":"998","messageId":"999","endLine":89,"endColumn":57,"suggestions":"1001"},{"ruleId":"1002","severity":1,"message":"1003","line":20,"column":35,"nodeType":"1004","messageId":"1005","endLine":20,"endColumn":37},{"ruleId":"1002","severity":1,"message":"1006","line":26,"column":35,"nodeType":"1004","messageId":"1005","endLine":26,"endColumn":37},{"ruleId":"1007","severity":2,"message":"1008","line":22,"column":17,"nodeType":"1004","messageId":"1009","endLine":22,"endColumn":19,"suppressions":"1010"},{"ruleId":"1002","severity":1,"message":"1011","line":31,"column":50,"nodeType":"1004","messageId":"1005","endLine":31,"endColumn":52},{"ruleId":"1002","severity":1,"message":"1012","line":40,"column":54,"nodeType":"1004","messageId":"1005","endLine":40,"endColumn":56},{"ruleId":"1002","severity":1,"message":"1013","line":49,"column":54,"nodeType":"1004","messageId":"1005","endLine":49,"endColumn":56},{"ruleId":"1002","severity":1,"message":"1014","line":26,"column":30,"nodeType":"1004","messageId":"1005","endLine":26,"endColumn":32},{"ruleId":"1002","severity":1,"message":"1015","line":40,"column":32,"nodeType":"1004","messageId":"1005","endLine":40,"endColumn":34},{"ruleId":"1016","severity":2,"message":"1017","line":23,"column":8,"nodeType":"1018","endLine":23,"endColumn":50,"fix":"1019","suppressions":"1020"},{"ruleId":"1021","severity":2,"message":"1022","line":25,"column":14,"nodeType":"1023","messageId":"1024","endLine":25,"endColumn":29,"suppressions":"1025"},{"ruleId":"1026","severity":2,"message":"1027","line":25,"column":14,"nodeType":"1023","messageId":"1028","endLine":25,"endColumn":29,"suppressions":"1029"},{"ruleId":"1030","severity":2,"message":"1031","line":31,"column":10,"nodeType":"1032","messageId":"1033","endLine":31,"endColumn":43,"suppressions":"1034"},{"ruleId":"1030","severity":2,"message":"1031","line":50,"column":17,"nodeType":"1032","messageId":"1033","endLine":50,"endColumn":40,"suppressions":"1035"},{"ruleId":"1030","severity":2,"message":"1036","line":51,"column":27,"nodeType":"1037","messageId":"1038","endLine":51,"endColumn":36,"suppressions":"1039"},{"ruleId":"1030","severity":2,"message":"1036","line":52,"column":27,"nodeType":"1037","messageId":"1038","endLine":52,"endColumn":36,"suppressions":"1040"},{"ruleId":"1030","severity":2,"message":"1036","line":54,"column":26,"nodeType":"1037","messageId":"1038","endLine":54,"endColumn":39,"suppressions":"1041"},{"ruleId":"1016","severity":2,"message":"1042","line":24,"column":8,"nodeType":"1018","endLine":24,"endColumn":53,"fix":"1043","suppressions":"1044"},{"ruleId":"1021","severity":2,"message":"1022","line":27,"column":14,"nodeType":"1023","messageId":"1024","endLine":27,"endColumn":29,"suppressions":"1045"},{"ruleId":"1026","severity":2,"message":"1027","line":27,"column":14,"nodeType":"1023","messageId":"1028","endLine":27,"endColumn":29,"suppressions":"1046"},{"ruleId":"1030","severity":2,"message":"1031","line":33,"column":10,"nodeType":"1032","messageId":"1033","endLine":33,"endColumn":43,"suppressions":"1047"},{"ruleId":"1030","severity":2,"message":"1036","line":41,"column":26,"nodeType":"1037","messageId":"1038","endLine":41,"endColumn":43,"suppressions":"1048"},{"ruleId":"1030","severity":2,"message":"1036","line":47,"column":26,"nodeType":"1037","messageId":"1038","endLine":47,"endColumn":43,"suppressions":"1049"},{"ruleId":"1016","severity":2,"message":"1042","line":23,"column":8,"nodeType":"1018","endLine":23,"endColumn":53,"fix":"1050","suppressions":"1051"},{"ruleId":"1021","severity":2,"message":"1022","line":26,"column":14,"nodeType":"1023","messageId":"1024","endLine":26,"endColumn":29,"suppressions":"1052"},{"ruleId":"1026","severity":2,"message":"1027","line":26,"column":14,"nodeType":"1023","messageId":"1028","endLine":26,"endColumn":29,"suppressions":"1053"},{"ruleId":"1030","severity":2,"message":"1031","line":32,"column":10,"nodeType":"1032","messageId":"1033","endLine":32,"endColumn":43,"suppressions":"1054"},{"ruleId":"1030","severity":2,"message":"1036","line":64,"column":27,"nodeType":"1037","messageId":"1038","endLine":64,"endColumn":50,"suppressions":"1055"},{"ruleId":"1056","severity":2,"message":"1057","line":68,"column":4,"nodeType":"1023","messageId":"1058","endLine":68,"endColumn":52,"suppressions":"1059"},{"ruleId":"1016","severity":2,"message":"1042","line":26,"column":8,"nodeType":"1018","endLine":26,"endColumn":53,"fix":"1060","suppressions":"1061"},{"ruleId":"1016","severity":2,"message":"1042","line":24,"column":8,"nodeType":"1018","endLine":24,"endColumn":53,"fix":"1062","suppressions":"1063"},{"ruleId":"1021","severity":2,"message":"1022","line":27,"column":14,"nodeType":"1023","messageId":"1024","endLine":27,"endColumn":29,"suppressions":"1064"},{"ruleId":"1026","severity":2,"message":"1027","line":27,"column":14,"nodeType":"1023","messageId":"1028","endLine":27,"endColumn":29,"suppressions":"1065"},{"ruleId":"1030","severity":2,"message":"1031","line":35,"column":10,"nodeType":"1032","messageId":"1033","endLine":35,"endColumn":43,"suppressions":"1066"},{"ruleId":"1030","severity":2,"message":"1036","line":43,"column":10,"nodeType":"1037","messageId":"1038","endLine":43,"endColumn":39,"suppressions":"1067"},{"ruleId":"1016","severity":2,"message":"1042","line":27,"column":8,"nodeType":"1018","endLine":27,"endColumn":53,"fix":"1068","suppressions":"1069"},{"ruleId":"1016","severity":2,"message":"1070","line":32,"column":8,"nodeType":"1018","endLine":32,"endColumn":55,"fix":"1071","suppressions":"1072"},{"ruleId":"1021","severity":2,"message":"1022","line":35,"column":14,"nodeType":"1023","messageId":"1024","endLine":35,"endColumn":29,"suppressions":"1073"},{"ruleId":"1026","severity":2,"message":"1027","line":35,"column":14,"nodeType":"1023","messageId":"1028","endLine":35,"endColumn":29,"suppressions":"1074"},{"ruleId":"1030","severity":2,"message":"1031","line":46,"column":12,"nodeType":"1032","messageId":"1033","endLine":46,"endColumn":45,"suppressions":"1075"},{"ruleId":"1030","severity":2,"message":"1031","line":50,"column":22,"nodeType":"1032","messageId":"1033","endLine":50,"endColumn":78,"suppressions":"1076"},{"ruleId":"1030","severity":2,"message":"1036","line":52,"column":18,"nodeType":"1037","messageId":"1038","endLine":52,"endColumn":46,"suppressions":"1077"},{"ruleId":"1030","severity":2,"message":"1036","line":52,"column":18,"nodeType":"1037","messageId":"1038","endLine":52,"endColumn":39,"suppressions":"1078"},{"ruleId":"1030","severity":2,"message":"1036","line":53,"column":18,"nodeType":"1037","messageId":"1038","endLine":53,"endColumn":48,"suppressions":"1079"},{"ruleId":"1030","severity":2,"message":"1036","line":53,"column":18,"nodeType":"1037","messageId":"1038","endLine":53,"endColumn":41,"suppressions":"1080"},{"ruleId":"1030","severity":2,"message":"1036","line":54,"column":18,"nodeType":"1037","messageId":"1038","endLine":54,"endColumn":50,"suppressions":"1081"},{"ruleId":"1030","severity":2,"message":"1036","line":54,"column":18,"nodeType":"1037","messageId":"1038","endLine":54,"endColumn":43,"suppressions":"1082"},{"ruleId":"1030","severity":2,"message":"1031","line":75,"column":12,"nodeType":"1032","messageId":"1033","endLine":75,"endColumn":45,"suppressions":"1083"},{"ruleId":"1030","severity":2,"message":"1036","line":76,"column":30,"nodeType":"1037","messageId":"1038","endLine":81,"endColumn":11,"suppressions":"1084"},{"ruleId":"1030","severity":2,"message":"1036","line":76,"column":30,"nodeType":"1037","messageId":"1038","endLine":77,"endColumn":13,"suppressions":"1085"},{"ruleId":"1030","severity":2,"message":"1031","line":76,"column":30,"nodeType":"1032","messageId":"1033","endLine":76,"endColumn":66,"suppressions":"1086"},{"ruleId":"1030","severity":2,"message":"1031","line":89,"column":22,"nodeType":"1032","messageId":"1033","endLine":92,"endColumn":6,"suppressions":"1087"},{"ruleId":"1030","severity":2,"message":"1036","line":94,"column":18,"nodeType":"1037","messageId":"1038","endLine":94,"endColumn":46,"suppressions":"1088"},{"ruleId":"1030","severity":2,"message":"1036","line":94,"column":18,"nodeType":"1037","messageId":"1038","endLine":94,"endColumn":39,"suppressions":"1089"},{"ruleId":"1030","severity":2,"message":"1036","line":95,"column":18,"nodeType":"1037","messageId":"1038","endLine":95,"endColumn":48,"suppressions":"1090"},{"ruleId":"1030","severity":2,"message":"1036","line":95,"column":18,"nodeType":"1037","messageId":"1038","endLine":95,"endColumn":41,"suppressions":"1091"},{"ruleId":"1030","severity":2,"message":"1036","line":96,"column":18,"nodeType":"1037","messageId":"1038","endLine":96,"endColumn":50,"suppressions":"1092"},{"ruleId":"1030","severity":2,"message":"1036","line":96,"column":18,"nodeType":"1037","messageId":"1038","endLine":96,"endColumn":43,"suppressions":"1093"},{"ruleId":"1030","severity":2,"message":"1036","line":97,"column":18,"nodeType":"1037","messageId":"1038","endLine":97,"endColumn":53,"suppressions":"1094"},{"ruleId":"1030","severity":2,"message":"1036","line":97,"column":18,"nodeType":"1037","messageId":"1038","endLine":97,"endColumn":46,"suppressions":"1095"},{"ruleId":"1096","severity":1,"message":"1097","line":19,"column":4,"nodeType":null,"messageId":"1098","endLine":19,"endColumn":9},{"ruleId":"1016","severity":2,"message":"1099","line":28,"column":21,"nodeType":"1018","endLine":28,"endColumn":48,"fix":"1100","suppressions":"1101"},{"ruleId":"1102","severity":2,"message":"1103","line":45,"column":9,"nodeType":"1104","messageId":"1009","endLine":48,"endColumn":3,"fix":"1105","suppressions":"1106"},{"ruleId":"1107","severity":2,"message":"1108","line":55,"column":2,"nodeType":"1109","messageId":"1110","endLine":56,"endColumn":44,"fix":"1111","suppressions":"1112"},{"ruleId":"1102","severity":2,"message":"1103","line":67,"column":9,"nodeType":"1104","messageId":"1009","endLine":70,"endColumn":3,"fix":"1113","suppressions":"1114"},{"ruleId":"1102","severity":2,"message":"1103","line":79,"column":9,"nodeType":"1104","messageId":"1009","endLine":82,"endColumn":3,"fix":"1115","suppressions":"1116"},{"ruleId":"978","severity":1,"message":"979","line":19,"column":8,"nodeType":"980","endLine":19,"endColumn":12},{"ruleId":"1096","severity":1,"message":"1097","line":69,"column":7,"nodeType":null,"messageId":"1098","endLine":69,"endColumn":12},{"ruleId":"1117","severity":2,"message":"1118","line":90,"column":5,"nodeType":"1023","messageId":"1119","endLine":90,"endColumn":45,"suppressions":"1120"},{"ruleId":"1117","severity":2,"message":"1118","line":94,"column":5,"nodeType":"1023","messageId":"1119","endLine":94,"endColumn":52,"suppressions":"1121"},{"ruleId":"1117","severity":2,"message":"1118","line":98,"column":5,"nodeType":"1023","messageId":"1119","endLine":98,"endColumn":50,"suppressions":"1122"},{"ruleId":"1117","severity":2,"message":"1118","line":102,"column":5,"nodeType":"1023","messageId":"1119","endLine":102,"endColumn":53,"suppressions":"1123"},{"ruleId":"978","severity":1,"message":"979","line":17,"column":8,"nodeType":"980","endLine":17,"endColumn":12},{"ruleId":"978","severity":1,"message":"979","line":20,"column":8,"nodeType":"980","endLine":20,"endColumn":12},{"ruleId":"1096","severity":1,"message":"1097","line":76,"column":9,"nodeType":null,"messageId":"1098","endLine":76,"endColumn":14},{"ruleId":"1117","severity":2,"message":"1118","line":81,"column":6,"nodeType":"1023","messageId":"1119","endLine":81,"endColumn":57,"suppressions":"1124"},{"ruleId":"1117","severity":2,"message":"1118","line":85,"column":6,"nodeType":"1023","messageId":"1119","endLine":85,"endColumn":42,"suppressions":"1125"},{"ruleId":"1117","severity":2,"message":"1118","line":89,"column":6,"nodeType":"1023","messageId":"1119","endLine":89,"endColumn":50,"suppressions":"1126"},{"ruleId":"1117","severity":2,"message":"1118","line":98,"column":6,"nodeType":"1023","messageId":"1119","endLine":98,"endColumn":46,"suppressions":"1127"},{"ruleId":"1117","severity":2,"message":"1118","line":102,"column":6,"nodeType":"1023","messageId":"1119","endLine":102,"endColumn":43,"suppressions":"1128"},{"ruleId":"1117","severity":2,"message":"1118","line":106,"column":6,"nodeType":"1023","messageId":"1119","endLine":106,"endColumn":43,"suppressions":"1129"},{"ruleId":"978","severity":1,"message":"979","line":22,"column":8,"nodeType":"980","endLine":22,"endColumn":12},{"ruleId":"1117","severity":2,"message":"1118","line":89,"column":4,"nodeType":"1023","messageId":"1119","endLine":89,"endColumn":41,"suppressions":"1130"},{"ruleId":"1117","severity":2,"message":"1118","line":92,"column":4,"nodeType":"1023","messageId":"1119","endLine":92,"endColumn":77,"suppressions":"1131"},{"ruleId":"1117","severity":2,"message":"1118","line":96,"column":5,"nodeType":"1023","messageId":"1119","endLine":96,"endColumn":67,"suppressions":"1132"},{"ruleId":"978","severity":1,"message":"979","line":19,"column":8,"nodeType":"980","endLine":19,"endColumn":12},{"ruleId":"1117","severity":2,"message":"1118","line":52,"column":5,"nodeType":"1023","messageId":"1119","endLine":52,"endColumn":42,"suppressions":"1133"},{"ruleId":"1117","severity":2,"message":"1118","line":56,"column":5,"nodeType":"1023","messageId":"1119","endLine":56,"endColumn":45,"suppressions":"1134"},{"ruleId":"1117","severity":2,"message":"1118","line":60,"column":5,"nodeType":"1023","messageId":"1119","endLine":60,"endColumn":42,"suppressions":"1135"},{"ruleId":"1117","severity":2,"message":"1118","line":64,"column":5,"nodeType":"1023","messageId":"1119","endLine":64,"endColumn":42,"suppressions":"1136"},{"ruleId":"978","severity":1,"message":"979","line":20,"column":8,"nodeType":"980","endLine":20,"endColumn":12},{"ruleId":"1117","severity":2,"message":"1118","line":75,"column":6,"nodeType":"1023","messageId":"1119","endLine":75,"endColumn":51,"suppressions":"1137"},{"ruleId":"1117","severity":2,"message":"1118","line":79,"column":6,"nodeType":"1023","messageId":"1119","endLine":79,"endColumn":58,"suppressions":"1138"},{"ruleId":"1117","severity":2,"message":"1118","line":83,"column":6,"nodeType":"1023","messageId":"1119","endLine":83,"endColumn":56,"suppressions":"1139"},{"ruleId":"1117","severity":2,"message":"1118","line":87,"column":6,"nodeType":"1023","messageId":"1119","endLine":87,"endColumn":59,"suppressions":"1140"},{"ruleId":"1117","severity":2,"message":"1118","line":96,"column":6,"nodeType":"1023","messageId":"1119","endLine":96,"endColumn":43,"suppressions":"1141"},{"ruleId":"1117","severity":2,"message":"1118","line":100,"column":6,"nodeType":"1023","messageId":"1119","endLine":100,"endColumn":46,"suppressions":"1142"},{"ruleId":"1117","severity":2,"message":"1118","line":104,"column":6,"nodeType":"1023","messageId":"1119","endLine":104,"endColumn":43,"suppressions":"1143"},{"ruleId":"1117","severity":2,"message":"1118","line":108,"column":6,"nodeType":"1023","messageId":"1119","endLine":108,"endColumn":43,"suppressions":"1144"},{"ruleId":"978","severity":1,"message":"979","line":17,"column":8,"nodeType":"980","endLine":17,"endColumn":12},{"ruleId":"1145","severity":2,"message":"1146","line":38,"column":2,"nodeType":"1023","messageId":"1147","endLine":59,"endColumn":3,"fix":"1148","suppressions":"1149"},{"ruleId":"978","severity":1,"message":"979","line":19,"column":8,"nodeType":"980","endLine":19,"endColumn":12},{"ruleId":"1117","severity":2,"message":"1118","line":53,"column":5,"nodeType":"1023","messageId":"1119","endLine":53,"endColumn":41,"suppressions":"1150"},{"ruleId":"1117","severity":2,"message":"1118","line":57,"column":5,"nodeType":"1023","messageId":"1119","endLine":57,"endColumn":48,"suppressions":"1151"},{"ruleId":"1117","severity":2,"message":"1118","line":61,"column":5,"nodeType":"1023","messageId":"1119","endLine":61,"endColumn":46,"suppressions":"1152"},{"ruleId":"1117","severity":2,"message":"1118","line":65,"column":5,"nodeType":"1023","messageId":"1119","endLine":65,"endColumn":49,"suppressions":"1153"},{"ruleId":"978","severity":1,"message":"979","line":19,"column":8,"nodeType":"980","endLine":19,"endColumn":12},{"ruleId":"978","severity":1,"message":"979","line":19,"column":8,"nodeType":"980","endLine":19,"endColumn":12},{"ruleId":"1117","severity":2,"message":"1118","line":52,"column":5,"nodeType":"1023","messageId":"1119","endLine":52,"endColumn":42,"suppressions":"1154"},{"ruleId":"1117","severity":2,"message":"1118","line":56,"column":5,"nodeType":"1023","messageId":"1119","endLine":56,"endColumn":45,"suppressions":"1155"},{"ruleId":"1117","severity":2,"message":"1118","line":60,"column":5,"nodeType":"1023","messageId":"1119","endLine":60,"endColumn":42,"suppressions":"1156"},{"ruleId":"1117","severity":2,"message":"1118","line":64,"column":5,"nodeType":"1023","messageId":"1119","endLine":64,"endColumn":42,"suppressions":"1157"},{"ruleId":"978","severity":1,"message":"979","line":17,"column":8,"nodeType":"980","endLine":17,"endColumn":12},{"ruleId":"978","severity":1,"message":"979","line":17,"column":8,"nodeType":"980","endLine":17,"endColumn":12},{"ruleId":"978","severity":1,"message":"979","line":19,"column":8,"nodeType":"980","endLine":19,"endColumn":12},{"ruleId":"1117","severity":2,"message":"1118","line":70,"column":4,"nodeType":"1023","messageId":"1119","endLine":70,"endColumn":41,"suppressions":"1158"},{"ruleId":"1117","severity":2,"message":"1118","line":73,"column":4,"nodeType":"1023","messageId":"1119","endLine":79,"endColumn":6,"suppressions":"1159"},{"ruleId":"1117","severity":2,"message":"1118","line":74,"column":14,"nodeType":"1023","messageId":"1119","endLine":74,"endColumn":32,"suppressions":"1160"},{"ruleId":"1117","severity":2,"message":"1118","line":75,"column":15,"nodeType":"1023","messageId":"1119","endLine":75,"endColumn":33,"suppressions":"1161"},{"ruleId":"1117","severity":2,"message":"1118","line":76,"column":12,"nodeType":"1023","messageId":"1119","endLine":76,"endColumn":30,"suppressions":"1162"},{"ruleId":"1117","severity":2,"message":"1118","line":77,"column":18,"nodeType":"1023","messageId":"1119","endLine":77,"endColumn":36,"suppressions":"1163"},{"ruleId":"1117","severity":2,"message":"1118","line":78,"column":19,"nodeType":"1023","messageId":"1119","endLine":78,"endColumn":44,"suppressions":"1164"},{"ruleId":"1117","severity":2,"message":"1118","line":82,"column":4,"nodeType":"1023","messageId":"1119","endLine":89,"endColumn":6,"suppressions":"1165"},{"ruleId":"1117","severity":2,"message":"1118","line":83,"column":19,"nodeType":"1023","messageId":"1119","endLine":83,"endColumn":44,"suppressions":"1166"},{"ruleId":"1117","severity":2,"message":"1118","line":84,"column":14,"nodeType":"1023","messageId":"1119","endLine":84,"endColumn":32,"suppressions":"1167"},{"ruleId":"1117","severity":2,"message":"1118","line":85,"column":15,"nodeType":"1023","messageId":"1119","endLine":85,"endColumn":33,"suppressions":"1168"},{"ruleId":"1117","severity":2,"message":"1118","line":86,"column":12,"nodeType":"1023","messageId":"1119","endLine":86,"endColumn":30,"suppressions":"1169"},{"ruleId":"1117","severity":2,"message":"1118","line":87,"column":18,"nodeType":"1023","messageId":"1119","endLine":87,"endColumn":36,"suppressions":"1170"},{"ruleId":"1117","severity":2,"message":"1118","line":88,"column":19,"nodeType":"1023","messageId":"1119","endLine":88,"endColumn":44,"suppressions":"1171"},{"ruleId":"978","severity":1,"message":"979","line":19,"column":8,"nodeType":"980","endLine":19,"endColumn":12},{"ruleId":"978","severity":1,"message":"979","line":17,"column":8,"nodeType":"980","endLine":17,"endColumn":12},{"ruleId":"1117","severity":2,"message":"1118","line":68,"column":4,"nodeType":"1023","messageId":"1119","endLine":68,"endColumn":40,"suppressions":"1172"},{"ruleId":"1117","severity":2,"message":"1118","line":71,"column":4,"nodeType":"1023","messageId":"1119","endLine":71,"endColumn":40,"suppressions":"1173"},{"ruleId":"978","severity":1,"message":"979","line":21,"column":8,"nodeType":"980","endLine":21,"endColumn":12},{"ruleId":"1117","severity":2,"message":"1118","line":71,"column":4,"nodeType":"1023","messageId":"1119","endLine":71,"endColumn":29,"suppressions":"1174"},{"ruleId":"1117","severity":2,"message":"1118","line":77,"column":4,"nodeType":"1023","messageId":"1119","endLine":77,"endColumn":53,"suppressions":"1175"},{"ruleId":"1117","severity":2,"message":"1118","line":79,"column":4,"nodeType":"1023","messageId":"1119","endLine":100,"endColumn":6,"suppressions":"1176"},{"ruleId":"1117","severity":2,"message":"1118","line":80,"column":11,"nodeType":"1023","messageId":"1119","endLine":80,"endColumn":29,"suppressions":"1177"},{"ruleId":"1117","severity":2,"message":"1118","line":81,"column":12,"nodeType":"1023","messageId":"1119","endLine":81,"endColumn":30,"suppressions":"1178"},{"ruleId":"1117","severity":2,"message":"1118","line":82,"column":16,"nodeType":"1023","messageId":"1119","endLine":82,"endColumn":34,"suppressions":"1179"},{"ruleId":"1117","severity":2,"message":"1118","line":83,"column":18,"nodeType":"1023","messageId":"1119","endLine":83,"endColumn":36,"suppressions":"1180"},{"ruleId":"1117","severity":2,"message":"1118","line":84,"column":23,"nodeType":"1023","messageId":"1119","endLine":84,"endColumn":41,"suppressions":"1181"},{"ruleId":"1117","severity":2,"message":"1118","line":85,"column":11,"nodeType":"1023","messageId":"1119","endLine":85,"endColumn":29,"suppressions":"1182"},{"ruleId":"1117","severity":2,"message":"1118","line":86,"column":15,"nodeType":"1023","messageId":"1119","endLine":86,"endColumn":33,"suppressions":"1183"},{"ruleId":"1117","severity":2,"message":"1118","line":87,"column":10,"nodeType":"1023","messageId":"1119","endLine":87,"endColumn":28,"suppressions":"1184"},{"ruleId":"1117","severity":2,"message":"1118","line":88,"column":12,"nodeType":"1023","messageId":"1119","endLine":88,"endColumn":30,"suppressions":"1185"},{"ruleId":"1117","severity":2,"message":"1118","line":89,"column":11,"nodeType":"1023","messageId":"1119","endLine":89,"endColumn":29,"suppressions":"1186"},{"ruleId":"1117","severity":2,"message":"1118","line":90,"column":8,"nodeType":"1023","messageId":"1119","endLine":90,"endColumn":26,"suppressions":"1187"},{"ruleId":"1117","severity":2,"message":"1118","line":91,"column":8,"nodeType":"1023","messageId":"1119","endLine":91,"endColumn":26,"suppressions":"1188"},{"ruleId":"1117","severity":2,"message":"1118","line":92,"column":8,"nodeType":"1023","messageId":"1119","endLine":92,"endColumn":26,"suppressions":"1189"},{"ruleId":"978","severity":1,"message":"979","line":19,"column":8,"nodeType":"980","endLine":19,"endColumn":12},{"ruleId":"978","severity":1,"message":"979","line":17,"column":8,"nodeType":"980","endLine":17,"endColumn":12},{"ruleId":"978","severity":1,"message":"979","line":17,"column":8,"nodeType":"980","endLine":17,"endColumn":12},{"ruleId":"978","severity":1,"message":"979","line":18,"column":8,"nodeType":"980","endLine":18,"endColumn":12},{"ruleId":"1117","severity":2,"message":"1118","line":61,"column":5,"nodeType":"1023","messageId":"1119","endLine":61,"endColumn":52,"suppressions":"1190"},{"ruleId":"1117","severity":2,"message":"1118","line":65,"column":5,"nodeType":"1023","messageId":"1119","endLine":65,"endColumn":64,"suppressions":"1191"},{"ruleId":"978","severity":1,"message":"979","line":19,"column":8,"nodeType":"980","endLine":19,"endColumn":12},{"ruleId":"1117","severity":2,"message":"1118","line":73,"column":5,"nodeType":"1023","messageId":"1119","endLine":73,"endColumn":37,"suppressions":"1192"},{"ruleId":"1117","severity":2,"message":"1118","line":77,"column":5,"nodeType":"1023","messageId":"1119","endLine":77,"endColumn":74,"suppressions":"1193"},{"ruleId":"978","severity":1,"message":"979","line":20,"column":8,"nodeType":"980","endLine":20,"endColumn":12},{"ruleId":"1117","severity":2,"message":"1118","line":82,"column":5,"nodeType":"1023","messageId":"1119","endLine":84,"endColumn":6,"suppressions":"1194"},{"ruleId":"1117","severity":2,"message":"1118","line":86,"column":5,"nodeType":"1023","messageId":"1119","endLine":88,"endColumn":6,"suppressions":"1195"},{"ruleId":"1117","severity":2,"message":"1118","line":90,"column":5,"nodeType":"1023","messageId":"1119","endLine":92,"endColumn":6,"suppressions":"1196"},{"ruleId":"1117","severity":2,"message":"1118","line":96,"column":5,"nodeType":"1023","messageId":"1119","endLine":96,"endColumn":80,"suppressions":"1197"},{"ruleId":"1117","severity":2,"message":"1118","line":98,"column":5,"nodeType":"1023","messageId":"1119","endLine":98,"endColumn":74,"suppressions":"1198"},{"ruleId":"1117","severity":2,"message":"1118","line":100,"column":5,"nodeType":"1023","messageId":"1119","endLine":102,"endColumn":6,"suppressions":"1199"},{"ruleId":"1117","severity":2,"message":"1118","line":106,"column":5,"nodeType":"1023","messageId":"1119","endLine":106,"endColumn":85,"suppressions":"1200"},{"ruleId":"1117","severity":2,"message":"1118","line":108,"column":5,"nodeType":"1023","messageId":"1119","endLine":108,"endColumn":79,"suppressions":"1201"},{"ruleId":"1117","severity":2,"message":"1118","line":110,"column":5,"nodeType":"1023","messageId":"1119","endLine":112,"endColumn":6,"suppressions":"1202"},{"ruleId":"1117","severity":2,"message":"1118","line":116,"column":5,"nodeType":"1023","messageId":"1119","endLine":116,"endColumn":85,"suppressions":"1203"},{"ruleId":"1117","severity":2,"message":"1118","line":118,"column":5,"nodeType":"1023","messageId":"1119","endLine":118,"endColumn":79,"suppressions":"1204"},{"ruleId":"1117","severity":2,"message":"1118","line":120,"column":5,"nodeType":"1023","messageId":"1119","endLine":122,"endColumn":6,"suppressions":"1205"},{"ruleId":"1117","severity":2,"message":"1118","line":130,"column":5,"nodeType":"1023","messageId":"1119","endLine":130,"endColumn":67,"suppressions":"1206"},{"ruleId":"1117","severity":2,"message":"1118","line":132,"column":5,"nodeType":"1023","messageId":"1119","endLine":132,"endColumn":57,"suppressions":"1207"},{"ruleId":"1117","severity":2,"message":"1118","line":134,"column":5,"nodeType":"1023","messageId":"1119","endLine":134,"endColumn":79,"suppressions":"1208"},{"ruleId":"1117","severity":2,"message":"1118","line":136,"column":5,"nodeType":"1023","messageId":"1119","endLine":136,"endColumn":60,"suppressions":"1209"},{"ruleId":"1117","severity":2,"message":"1118","line":140,"column":5,"nodeType":"1023","messageId":"1119","endLine":142,"endColumn":6,"suppressions":"1210"},{"ruleId":"1117","severity":2,"message":"1118","line":144,"column":5,"nodeType":"1023","messageId":"1119","endLine":146,"endColumn":6,"suppressions":"1211"},{"ruleId":"1117","severity":2,"message":"1118","line":148,"column":5,"nodeType":"1023","messageId":"1119","endLine":150,"endColumn":6,"suppressions":"1212"},{"ruleId":"1117","severity":2,"message":"1118","line":152,"column":5,"nodeType":"1023","messageId":"1119","endLine":154,"endColumn":6,"suppressions":"1213"},{"ruleId":"978","severity":1,"message":"979","line":17,"column":8,"nodeType":"980","endLine":17,"endColumn":12},{"ruleId":"1117","severity":2,"message":"1118","line":71,"column":4,"nodeType":"1023","messageId":"1119","endLine":71,"endColumn":51,"suppressions":"1214"},{"ruleId":"1117","severity":2,"message":"1118","line":74,"column":4,"nodeType":"1023","messageId":"1119","endLine":76,"endColumn":5,"suppressions":"1215"},{"ruleId":"1117","severity":2,"message":"1118","line":79,"column":4,"nodeType":"1023","messageId":"1119","endLine":79,"endColumn":51,"suppressions":"1216"},{"ruleId":"978","severity":1,"message":"979","line":20,"column":8,"nodeType":"980","endLine":20,"endColumn":12},{"ruleId":"978","severity":1,"message":"979","line":20,"column":8,"nodeType":"980","endLine":20,"endColumn":12},{"ruleId":"978","severity":1,"message":"979","line":19,"column":8,"nodeType":"980","endLine":19,"endColumn":12},{"ruleId":"1117","severity":2,"message":"1118","line":66,"column":5,"nodeType":"1023","messageId":"1119","endLine":68,"endColumn":6,"suppressions":"1217"},{"ruleId":"1117","severity":2,"message":"1118","line":72,"column":5,"nodeType":"1023","messageId":"1119","endLine":78,"endColumn":6,"suppressions":"1218"},{"ruleId":"1117","severity":2,"message":"1118","line":110,"column":5,"nodeType":"1023","messageId":"1119","endLine":110,"endColumn":40,"suppressions":"1219"},{"ruleId":"1117","severity":2,"message":"1118","line":114,"column":5,"nodeType":"1023","messageId":"1119","endLine":114,"endColumn":77,"suppressions":"1220"},{"ruleId":"978","severity":1,"message":"979","line":17,"column":8,"nodeType":"980","endLine":17,"endColumn":12},{"ruleId":"1056","severity":2,"message":"1057","line":72,"column":3,"nodeType":"1023","messageId":"1058","endLine":88,"endColumn":5,"suppressions":"1221"},{"ruleId":"1056","severity":2,"message":"1057","line":99,"column":3,"nodeType":"1023","messageId":"1058","endLine":99,"endColumn":38,"suppressions":"1222"},{"ruleId":"1056","severity":2,"message":"1057","line":115,"column":3,"nodeType":"1023","messageId":"1058","endLine":115,"endColumn":39,"suppressions":"1223"},{"ruleId":"1056","severity":2,"message":"1057","line":122,"column":3,"nodeType":"1023","messageId":"1058","endLine":159,"endColumn":5,"suppressions":"1224"},{"ruleId":"978","severity":1,"message":"979","line":19,"column":8,"nodeType":"980","endLine":19,"endColumn":12},{"ruleId":"1117","severity":2,"message":"1118","line":64,"column":5,"nodeType":"1023","messageId":"1119","endLine":64,"endColumn":38,"suppressions":"1225"},{"ruleId":"1117","severity":2,"message":"1118","line":68,"column":5,"nodeType":"1023","messageId":"1119","endLine":68,"endColumn":75,"suppressions":"1226"},{"ruleId":"978","severity":1,"message":"979","line":20,"column":8,"nodeType":"980","endLine":20,"endColumn":12},{"ruleId":"1117","severity":2,"message":"1118","line":84,"column":6,"nodeType":"1023","messageId":"1119","endLine":86,"endColumn":7,"suppressions":"1227"},{"ruleId":"1117","severity":2,"message":"1118","line":88,"column":6,"nodeType":"1023","messageId":"1119","endLine":90,"endColumn":7,"suppressions":"1228"},{"ruleId":"1117","severity":2,"message":"1118","line":92,"column":6,"nodeType":"1023","messageId":"1119","endLine":96,"endColumn":7,"suppressions":"1229"},{"ruleId":"1117","severity":2,"message":"1118","line":100,"column":6,"nodeType":"1023","messageId":"1119","endLine":100,"endColumn":84,"suppressions":"1230"},{"ruleId":"1117","severity":2,"message":"1118","line":102,"column":6,"nodeType":"1023","messageId":"1119","endLine":104,"endColumn":7,"suppressions":"1231"},{"ruleId":"1117","severity":2,"message":"1118","line":106,"column":6,"nodeType":"1023","messageId":"1119","endLine":108,"endColumn":7,"suppressions":"1232"},{"ruleId":"1117","severity":2,"message":"1118","line":112,"column":6,"nodeType":"1023","messageId":"1119","endLine":114,"endColumn":7,"suppressions":"1233"},{"ruleId":"1117","severity":2,"message":"1118","line":116,"column":6,"nodeType":"1023","messageId":"1119","endLine":118,"endColumn":7,"suppressions":"1234"},{"ruleId":"1117","severity":2,"message":"1118","line":120,"column":6,"nodeType":"1023","messageId":"1119","endLine":122,"endColumn":7,"suppressions":"1235"},{"ruleId":"1117","severity":2,"message":"1118","line":126,"column":6,"nodeType":"1023","messageId":"1119","endLine":128,"endColumn":7,"suppressions":"1236"},{"ruleId":"1117","severity":2,"message":"1118","line":130,"column":6,"nodeType":"1023","messageId":"1119","endLine":132,"endColumn":7,"suppressions":"1237"},{"ruleId":"1117","severity":2,"message":"1118","line":134,"column":6,"nodeType":"1023","messageId":"1119","endLine":136,"endColumn":7,"suppressions":"1238"},{"ruleId":"1117","severity":2,"message":"1118","line":145,"column":6,"nodeType":"1023","messageId":"1119","endLine":145,"endColumn":72,"suppressions":"1239"},{"ruleId":"1117","severity":2,"message":"1118","line":147,"column":6,"nodeType":"1023","messageId":"1119","endLine":147,"endColumn":62,"suppressions":"1240"},{"ruleId":"1117","severity":2,"message":"1118","line":149,"column":6,"nodeType":"1023","messageId":"1119","endLine":149,"endColumn":84,"suppressions":"1241"},{"ruleId":"1117","severity":2,"message":"1118","line":151,"column":6,"nodeType":"1023","messageId":"1119","endLine":151,"endColumn":65,"suppressions":"1242"},{"ruleId":"1117","severity":2,"message":"1118","line":155,"column":6,"nodeType":"1023","messageId":"1119","endLine":157,"endColumn":7,"suppressions":"1243"},{"ruleId":"1117","severity":2,"message":"1118","line":159,"column":6,"nodeType":"1023","messageId":"1119","endLine":161,"endColumn":7,"suppressions":"1244"},{"ruleId":"1117","severity":2,"message":"1118","line":163,"column":6,"nodeType":"1023","messageId":"1119","endLine":165,"endColumn":7,"suppressions":"1245"},{"ruleId":"1117","severity":2,"message":"1118","line":167,"column":6,"nodeType":"1023","messageId":"1119","endLine":171,"endColumn":7,"suppressions":"1246"},{"ruleId":"978","severity":1,"message":"979","line":17,"column":8,"nodeType":"980","endLine":17,"endColumn":12},{"ruleId":"1117","severity":2,"message":"1118","line":76,"column":4,"nodeType":"1023","messageId":"1119","endLine":79,"endColumn":18,"suppressions":"1247"},{"ruleId":"1117","severity":2,"message":"1118","line":82,"column":4,"nodeType":"1023","messageId":"1119","endLine":86,"endColumn":5,"suppressions":"1248"},{"ruleId":"978","severity":1,"message":"979","line":20,"column":8,"nodeType":"980","endLine":20,"endColumn":12},{"ruleId":"978","severity":1,"message":"979","line":20,"column":8,"nodeType":"980","endLine":20,"endColumn":12},{"ruleId":"978","severity":1,"message":"979","line":17,"column":8,"nodeType":"980","endLine":17,"endColumn":12},{"ruleId":"1056","severity":2,"message":"1057","line":64,"column":4,"nodeType":"1023","messageId":"1058","endLine":80,"endColumn":6,"suppressions":"1249"},{"ruleId":"1056","severity":2,"message":"1057","line":105,"column":4,"nodeType":"1023","messageId":"1058","endLine":121,"endColumn":6,"suppressions":"1250"},{"ruleId":"1056","severity":2,"message":"1057","line":145,"column":4,"nodeType":"1023","messageId":"1058","endLine":161,"endColumn":6,"suppressions":"1251"},{"ruleId":"978","severity":1,"message":"979","line":19,"column":8,"nodeType":"980","endLine":19,"endColumn":12},{"ruleId":"1016","severity":2,"message":"1017","line":24,"column":8,"nodeType":"1018","endLine":24,"endColumn":50,"fix":"1252","suppressions":"1253"},{"ruleId":"1016","severity":2,"message":"1042","line":25,"column":8,"nodeType":"1018","endLine":25,"endColumn":53,"fix":"1254","suppressions":"1255"},{"ruleId":"1016","severity":2,"message":"1042","line":24,"column":8,"nodeType":"1018","endLine":24,"endColumn":53,"fix":"1256","suppressions":"1257"},{"ruleId":"1056","severity":2,"message":"1057","line":67,"column":4,"nodeType":"1023","messageId":"1058","endLine":67,"endColumn":52,"suppressions":"1258"},{"ruleId":"1016","severity":2,"message":"1042","line":26,"column":8,"nodeType":"1018","endLine":26,"endColumn":53,"fix":"1259","suppressions":"1260"},{"ruleId":"1016","severity":2,"message":"1042","line":25,"column":8,"nodeType":"1018","endLine":25,"endColumn":53,"fix":"1261","suppressions":"1262"},{"ruleId":"1016","severity":2,"message":"1042","line":29,"column":8,"nodeType":"1018","endLine":29,"endColumn":53,"fix":"1263","suppressions":"1264"},{"ruleId":"1016","severity":2,"message":"1070","line":30,"column":51,"nodeType":"1018","endLine":30,"endColumn":98,"fix":"1265","suppressions":"1266"},{"ruleId":"1096","severity":1,"message":"1267","line":66,"column":5,"nodeType":null,"messageId":"1098","endLine":66,"endColumn":12},{"ruleId":"1096","severity":1,"message":"1268","line":73,"column":13,"nodeType":null,"messageId":"1269","endLine":73,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1270","line":74,"column":25,"nodeType":null,"messageId":"1271","endLine":74,"endColumn":26},{"ruleId":"1096","severity":1,"message":"1272","line":87,"column":13,"nodeType":null,"messageId":"1273","endLine":87,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1272","line":88,"column":59,"nodeType":null,"messageId":"1273","endLine":88,"endColumn":60},{"ruleId":"1096","severity":1,"message":"1272","line":110,"column":13,"nodeType":null,"messageId":"1273","endLine":110,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1272","line":111,"column":58,"nodeType":null,"messageId":"1273","endLine":111,"endColumn":59},{"ruleId":"1096","severity":1,"message":"1274","line":252,"column":5,"nodeType":null,"messageId":"1275","endLine":252,"endColumn":11},{"ruleId":"1096","severity":1,"message":"1272","line":265,"column":13,"nodeType":null,"messageId":"1273","endLine":265,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1272","line":266,"column":58,"nodeType":null,"messageId":"1273","endLine":266,"endColumn":59},{"ruleId":"1096","severity":1,"message":"1272","line":295,"column":13,"nodeType":null,"messageId":"1273","endLine":295,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1272","line":296,"column":59,"nodeType":null,"messageId":"1273","endLine":296,"endColumn":60},{"ruleId":"1276","severity":1,"message":"1277","line":374,"column":5,"nodeType":"1278","messageId":"1279","endLine":374,"endColumn":7},{"ruleId":"1276","severity":1,"message":"1277","line":375,"column":32,"nodeType":"1278","messageId":"1279","endLine":375,"endColumn":34},{"ruleId":"1276","severity":1,"message":"1277","line":376,"column":32,"nodeType":"1278","messageId":"1279","endLine":376,"endColumn":34},{"ruleId":"1096","severity":1,"message":"1274","line":440,"column":5,"nodeType":null,"messageId":"1275","endLine":440,"endColumn":11},{"ruleId":"1096","severity":1,"message":"1267","line":441,"column":5,"nodeType":null,"messageId":"1098","endLine":441,"endColumn":12},{"ruleId":"1280","severity":2,"message":"1281","line":20,"column":1,"nodeType":"1282","endLine":20,"endColumn":39,"suppressions":"1283"},{"ruleId":"1284","severity":2,"message":"1285","line":47,"column":6,"nodeType":"1286","messageId":"1287","endLine":47,"endColumn":38,"suppressions":"1288"},{"ruleId":"1284","severity":2,"message":"1285","line":80,"column":6,"nodeType":"1286","messageId":"1287","endLine":80,"endColumn":38,"suppressions":"1289"},{"ruleId":"978","severity":1,"message":"979","line":18,"column":8,"nodeType":"980","endLine":18,"endColumn":12},{"ruleId":"1290","severity":2,"message":"1291","line":29,"column":4,"nodeType":"1292","messageId":"1293","endLine":29,"endColumn":24,"suppressions":"1294"},{"ruleId":"1002","severity":1,"message":"1295","line":29,"column":4,"nodeType":"1292","messageId":"1005","endLine":29,"endColumn":24,"suppressions":"1296"},{"ruleId":"1297","severity":1,"message":"1298","line":29,"column":25,"nodeType":"993","messageId":"1299","endLine":29,"endColumn":44,"suppressions":"1300"},{"ruleId":"1301","severity":1,"message":"1302","line":24,"column":2,"nodeType":"1023","messageId":"1303","endLine":32,"endColumn":4},{"ruleId":"1301","severity":1,"message":"1302","line":24,"column":2,"nodeType":"1023","messageId":"1303","endLine":27,"endColumn":4},{"ruleId":"978","severity":1,"message":"979","line":19,"column":8,"nodeType":"980","endLine":19,"endColumn":12},{"ruleId":"978","severity":1,"message":"979","line":22,"column":8,"nodeType":"980","endLine":22,"endColumn":12},{"ruleId":"1304","severity":1,"message":"1305","line":27,"column":2,"nodeType":"1023","messageId":"1306","endLine":51,"endColumn":4},{"ruleId":"978","severity":1,"message":"979","line":18,"column":8,"nodeType":"980","endLine":18,"endColumn":12},{"ruleId":"1056","severity":2,"message":"1057","line":29,"column":3,"nodeType":"1023","messageId":"1058","endLine":29,"endColumn":36,"suppressions":"1307"},{"ruleId":"1056","severity":2,"message":"1057","line":39,"column":3,"nodeType":"1023","messageId":"1058","endLine":39,"endColumn":36,"suppressions":"1308"},{"ruleId":"978","severity":1,"message":"979","line":27,"column":8,"nodeType":"980","endLine":27,"endColumn":12},{"ruleId":"1301","severity":1,"message":"1302","line":50,"column":2,"nodeType":"1023","messageId":"1303","endLine":52,"endColumn":4},{"ruleId":"1030","severity":2,"message":"1036","line":44,"column":3,"nodeType":"1037","messageId":"1038","endLine":44,"endColumn":25,"suppressions":"1309"},{"ruleId":"978","severity":1,"message":"979","line":20,"column":8,"nodeType":"980","endLine":20,"endColumn":12},{"ruleId":"1304","severity":1,"message":"1310","line":32,"column":1,"nodeType":"1023","messageId":"1311","endLine":136,"endColumn":3},{"ruleId":"978","severity":1,"message":"979","line":26,"column":8,"nodeType":"980","endLine":26,"endColumn":12},{"ruleId":"978","severity":1,"message":"979","line":18,"column":8,"nodeType":"980","endLine":18,"endColumn":12},{"ruleId":"1312","severity":2,"message":"1313","line":66,"column":4,"nodeType":"1314","messageId":"1315","endLine":68,"endColumn":7,"suggestions":"1316","suppressions":"1317"},{"ruleId":"978","severity":1,"message":"979","line":24,"column":8,"nodeType":"980","endLine":24,"endColumn":12},{"ruleId":"978","severity":1,"message":"979","line":26,"column":8,"nodeType":"980","endLine":26,"endColumn":12},{"ruleId":"1304","severity":1,"message":"1305","line":123,"column":4,"nodeType":"1023","messageId":"1306","endLine":135,"endColumn":6,"suppressions":"1318"},{"ruleId":"978","severity":1,"message":"979","line":25,"column":8,"nodeType":"980","endLine":25,"endColumn":12},{"ruleId":"978","severity":1,"message":"979","line":20,"column":8,"nodeType":"980","endLine":20,"endColumn":12},{"ruleId":"1319","severity":1,"message":"1320","line":105,"column":43,"nodeType":"993","messageId":"1321","endLine":105,"endColumn":50},{"ruleId":"1117","severity":2,"message":"1118","line":95,"column":9,"nodeType":"1023","messageId":"1119","endLine":95,"endColumn":59,"suppressions":"1322"},{"ruleId":"1117","severity":2,"message":"1118","line":98,"column":9,"nodeType":"1023","messageId":"1119","endLine":98,"endColumn":59,"suppressions":"1323"},{"ruleId":"978","severity":1,"message":"979","line":18,"column":8,"nodeType":"980","endLine":18,"endColumn":12},{"ruleId":"1056","severity":2,"message":"1057","line":103,"column":3,"nodeType":"1023","messageId":"1058","endLine":103,"endColumn":68,"suppressions":"1324"},{"ruleId":"1056","severity":2,"message":"1057","line":104,"column":3,"nodeType":"1023","messageId":"1058","endLine":104,"endColumn":72,"suppressions":"1325"},{"ruleId":"1056","severity":2,"message":"1057","line":105,"column":3,"nodeType":"1023","messageId":"1058","endLine":105,"endColumn":75,"suppressions":"1326"},{"ruleId":"1056","severity":2,"message":"1057","line":106,"column":3,"nodeType":"1023","messageId":"1058","endLine":106,"endColumn":79,"suppressions":"1327"},{"ruleId":"1056","severity":2,"message":"1057","line":112,"column":3,"nodeType":"1023","messageId":"1058","endLine":112,"endColumn":68,"suppressions":"1328"},{"ruleId":"1056","severity":2,"message":"1057","line":113,"column":3,"nodeType":"1023","messageId":"1058","endLine":113,"endColumn":72,"suppressions":"1329"},{"ruleId":"1056","severity":2,"message":"1057","line":114,"column":3,"nodeType":"1023","messageId":"1058","endLine":114,"endColumn":75,"suppressions":"1330"},{"ruleId":"1056","severity":2,"message":"1057","line":115,"column":3,"nodeType":"1023","messageId":"1058","endLine":115,"endColumn":79,"suppressions":"1331"},{"ruleId":"1056","severity":2,"message":"1057","line":121,"column":3,"nodeType":"1023","messageId":"1058","endLine":121,"endColumn":68,"suppressions":"1332"},{"ruleId":"1056","severity":2,"message":"1057","line":122,"column":3,"nodeType":"1023","messageId":"1058","endLine":122,"endColumn":72,"suppressions":"1333"},{"ruleId":"1056","severity":2,"message":"1057","line":123,"column":3,"nodeType":"1023","messageId":"1058","endLine":123,"endColumn":75,"suppressions":"1334"},{"ruleId":"1056","severity":2,"message":"1057","line":124,"column":3,"nodeType":"1023","messageId":"1058","endLine":124,"endColumn":79,"suppressions":"1335"},{"ruleId":"978","severity":1,"message":"979","line":22,"column":8,"nodeType":"980","endLine":22,"endColumn":12},{"ruleId":"1312","severity":2,"message":"1313","line":38,"column":13,"nodeType":"1314","messageId":"1315","endLine":38,"endColumn":40,"suggestions":"1336","suppressions":"1337"},{"ruleId":"1280","severity":2,"message":"1338","line":29,"column":1,"nodeType":"1282","endLine":29,"endColumn":49,"suppressions":"1339"},{"ruleId":"1280","severity":2,"message":"1340","line":57,"column":1,"nodeType":"1282","endLine":57,"endColumn":25,"suppressions":"1341"},{"ruleId":"1342","severity":2,"message":"1343","line":72,"column":2,"nodeType":"1344","messageId":"1345","endLine":72,"endColumn":21,"suppressions":"1346"},{"ruleId":"1284","severity":2,"message":"1285","line":74,"column":2,"nodeType":"1347","messageId":"1287","endLine":74,"endColumn":56,"suppressions":"1348"},{"ruleId":"1030","severity":2,"message":"1036","line":74,"column":19,"nodeType":"1037","messageId":"1038","endLine":74,"endColumn":30,"suppressions":"1349"},{"ruleId":"1350","severity":2,"message":"1351","line":152,"column":4,"nodeType":"1352","messageId":"1353","endLine":152,"endColumn":20,"suppressions":"1354"},{"ruleId":"1355","severity":2,"message":"1356","line":152,"column":4,"nodeType":"993","messageId":"1357","endLine":152,"endColumn":18,"suppressions":"1358"},{"ruleId":"1359","severity":2,"message":"1360","line":491,"column":4,"nodeType":"1361","messageId":"1362","endLine":496,"endColumn":6,"suppressions":"1363"},{"ruleId":"1284","severity":2,"message":"1285","line":505,"column":2,"nodeType":"1023","messageId":"1287","endLine":508,"endColumn":3,"suppressions":"1364"},{"ruleId":"1284","severity":2,"message":"1285","line":507,"column":38,"nodeType":"1347","messageId":"1287","endLine":507,"endColumn":90,"suppressions":"1365"},{"ruleId":"1276","severity":1,"message":"1277","line":50,"column":27,"nodeType":"1278","messageId":"1279","endLine":50,"endColumn":38,"suppressions":"1366"},{"ruleId":"1280","severity":2,"message":"1340","line":19,"column":1,"nodeType":"1282","endLine":19,"endColumn":29,"suppressions":"1367"},{"ruleId":"1016","severity":2,"message":"1368","line":21,"column":22,"nodeType":"1018","endLine":21,"endColumn":57,"fix":"1369","suppressions":"1370"},{"ruleId":"1016","severity":2,"message":"1371","line":22,"column":41,"nodeType":"1018","endLine":22,"endColumn":75,"fix":"1372","suppressions":"1373"},{"ruleId":"1350","severity":2,"message":"1351","line":67,"column":27,"nodeType":"1352","messageId":"1353","endLine":67,"endColumn":30,"suppressions":"1374"},{"ruleId":"1280","severity":2,"message":"1340","line":21,"column":1,"nodeType":"1282","endLine":21,"endColumn":58,"suppressions":"1375"},{"ruleId":"1016","severity":2,"message":"1371","line":22,"column":41,"nodeType":"1018","endLine":22,"endColumn":75,"fix":"1376","suppressions":"1377"},{"ruleId":"1016","severity":2,"message":"1378","line":23,"column":52,"nodeType":"1018","endLine":23,"endColumn":92,"fix":"1379","suppressions":"1380"},{"ruleId":"1381","severity":2,"message":"1382","line":29,"column":2,"nodeType":"1383","messageId":"1384","endLine":48,"endColumn":3,"suppressions":"1385"},{"ruleId":"1350","severity":2,"message":"1351","line":29,"column":39,"nodeType":"1352","messageId":"1353","endLine":29,"endColumn":42,"suppressions":"1386"},{"ruleId":"1350","severity":2,"message":"1351","line":75,"column":25,"nodeType":"1352","messageId":"1353","endLine":75,"endColumn":28,"suppressions":"1387"},{"ruleId":"1388","severity":2,"message":"1389","line":119,"column":19,"nodeType":"993","messageId":"1390","endLine":119,"endColumn":32,"suppressions":"1391"},{"ruleId":"1350","severity":2,"message":"1351","line":131,"column":38,"nodeType":"1352","messageId":"1353","endLine":131,"endColumn":41,"suppressions":"1392"},{"ruleId":"1350","severity":2,"message":"1351","line":142,"column":38,"nodeType":"1352","messageId":"1353","endLine":142,"endColumn":41,"suppressions":"1393"},{"ruleId":"1002","severity":1,"message":"1394","line":85,"column":70,"nodeType":"1004","messageId":"1005","endLine":85,"endColumn":72},{"ruleId":"1395","severity":2,"message":"1396","line":77,"column":5,"nodeType":"1397","messageId":"1398","endLine":77,"endColumn":60,"suppressions":"1399"},{"ruleId":"1002","severity":1,"message":"1394","line":26,"column":83,"nodeType":"1004","messageId":"1005","endLine":26,"endColumn":85},{"ruleId":"1002","severity":1,"message":"1394","line":35,"column":82,"nodeType":"1004","messageId":"1005","endLine":35,"endColumn":84},{"ruleId":"1002","severity":1,"message":"1394","line":54,"column":90,"nodeType":"1004","messageId":"1005","endLine":54,"endColumn":92},{"ruleId":"1002","severity":1,"message":"1394","line":62,"column":91,"nodeType":"1004","messageId":"1005","endLine":62,"endColumn":93},{"ruleId":"1400","severity":2,"message":"1401","line":86,"column":5,"nodeType":"1314","messageId":"1402","endLine":86,"endColumn":66,"suppressions":"1403"},{"ruleId":"1400","severity":2,"message":"1401","line":92,"column":5,"nodeType":"1314","messageId":"1402","endLine":94,"endColumn":32,"suppressions":"1404"},{"ruleId":"1297","severity":1,"message":"1405","line":73,"column":32,"nodeType":"993","messageId":"1299","endLine":73,"endColumn":46},{"ruleId":"1284","severity":2,"message":"1285","line":57,"column":33,"nodeType":"1023","messageId":"1287","endLine":57,"endColumn":52,"suppressions":"1406"},{"ruleId":"1030","severity":2,"message":"1036","line":57,"column":33,"nodeType":"993","messageId":"1038","endLine":57,"endColumn":41,"suppressions":"1407"},{"ruleId":"1007","severity":2,"message":"1408","line":73,"column":51,"nodeType":"1004","messageId":"1009","endLine":73,"endColumn":53,"suppressions":"1409"},"import/no-named-as-default","Using exported name 'Web3' as identifier for default export.","ImportDefaultSpecifier","header/header","incorrect header",{"range":"1410","text":"1411"},["1412"],"Using exported name 'Contract' as identifier for default export.","max-classes-per-file","File has too many classes (2). Maximum allowed is 1.","Program","maximumExceeded",["1413"],"@typescript-eslint/no-this-alias","Unexpected aliasing of 'this' to local variable.","Identifier","thisAssignment",["1414"],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["1415","1416"],["1417","1418"],"@typescript-eslint/require-await","Async arrow function 'abiDecode' has no 'await' expression.","ArrowFunctionExpression","missingAwait","Async arrow function 'abiEncode' has no 'await' expression.","@typescript-eslint/no-empty-function","Unexpected empty method 'request'.","unexpected",["1419"],"Async arrow function 'processingContractDeploy' has no 'await' expression.","Async arrow function 'processingContractMethodSend' has no 'await' expression.","Async arrow function 'processingContractMethodCall' has no 'await' expression.","Async arrow function 'sign' has no 'await' expression.","Async arrow function 'verify' has no 'await' expression.","import/no-relative-packages","Relative import from another package is not allowed. Use `web3/test/shared_fixtures/system_tests_utils` instead of `../../shared_fixtures/system_tests_utils`","Literal",{"range":"1420","text":"1421"},["1422"],"@typescript-eslint/no-require-imports","A `require()` style import is forbidden.","CallExpression","noRequireImports",["1423"],"@typescript-eslint/no-var-requires","Require statement not part of import statement.","noVarReqs",["1424"],"@typescript-eslint/no-unsafe-call","Unsafe construction of an any type value.","NewExpression","unsafeNew",["1425"],["1426"],"Unsafe call of an `any` typed value.","MemberExpression","unsafeCall",["1427"],["1428"],["1429"],"Relative import from another package is not allowed. Use `web3/test/shared_fixtures/system_tests_utils` instead of `../../../shared_fixtures/system_tests_utils`",{"range":"1430","text":"1421"},["1431"],["1432"],["1433"],["1434"],["1435"],["1436"],{"range":"1437","text":"1421"},["1438"],["1439"],["1440"],["1441"],["1442"],"jest/no-standalone-expect","Expect must be inside of a test block.","unexpectedExpect",["1443"],{"range":"1444","text":"1421"},["1445"],{"range":"1446","text":"1421"},["1447"],["1448"],["1449"],["1450"],["1451"],{"range":"1452","text":"1421"},["1453"],"Relative import from another package is not allowed. Use `web3/test/shared_fixtures/contracts/ERC20Token` instead of `../../../shared_fixtures/contracts/ERC20Token`",{"range":"1454","text":"1455"},["1456"],["1457"],["1458"],["1459"],["1460"],["1461"],["1462"],["1463"],["1464"],["1465"],["1466"],["1467"],["1468"],["1469"],["1470"],["1471"],["1472"],["1473"],["1474"],["1475"],["1476"],["1477"],["1478"],["1479"],"tsdoc/syntax","tsdoc-undefined-tag: The TSDoc tag \"@NOTE\" is not defined in this configuration","tsdoc-undefined-tag","Relative import from another package is not allowed. Use `web3.js/.secrets.json` instead of `../../../../.secrets.json`",{"range":"1480","text":"1481"},["1482"],"no-else-return","Unnecessary 'else' after 'return'.","IfStatement",{"range":"1483","text":"1484"},["1485"],"@typescript-eslint/no-unnecessary-type-assertion","This assertion is unnecessary since it does not change the type of the expression.","TSAsExpression","unnecessaryAssertion",{"range":"1486","text":"1487"},["1488"],{"range":"1489","text":"1490"},["1491"],{"range":"1492","text":"1493"},["1494"],"jest/no-conditional-expect","Avoid calling `expect` conditionally`","conditionalExpect",["1495"],["1496"],["1497"],["1498"],["1499"],["1500"],["1501"],["1502"],["1503"],["1504"],["1505"],["1506"],["1507"],["1508"],["1509"],["1510"],["1511"],["1512"],["1513"],["1514"],["1515"],["1516"],["1517"],["1518"],["1519"],"jest/consistent-test-it","Prefer using 'test' instead of 'it'","consistentMethod",{"range":"1520","text":"1521"},["1522"],["1523"],["1524"],["1525"],["1526"],["1527"],["1528"],["1529"],["1530"],["1531"],["1532"],["1533"],["1534"],["1535"],["1536"],["1537"],["1538"],["1539"],["1540"],["1541"],["1542"],["1543"],["1544"],["1545"],["1546"],["1547"],["1548"],["1549"],["1550"],["1551"],["1552"],["1553"],["1554"],["1555"],["1556"],["1557"],["1558"],["1559"],["1560"],["1561"],["1562"],["1563"],["1564"],["1565"],["1566"],["1567"],["1568"],["1569"],["1570"],["1571"],["1572"],["1573"],["1574"],["1575"],["1576"],["1577"],["1578"],["1579"],["1580"],["1581"],["1582"],["1583"],["1584"],["1585"],["1586"],["1587"],["1588"],["1589"],["1590"],["1591"],["1592"],["1593"],["1594"],["1595"],["1596"],["1597"],["1598"],["1599"],["1600"],["1601"],["1602"],["1603"],["1604"],["1605"],["1606"],["1607"],["1608"],["1609"],["1610"],["1611"],["1612"],["1613"],["1614"],["1615"],["1616"],["1617"],["1618"],["1619"],["1620"],["1621"],["1622"],["1623"],["1624"],{"range":"1625","text":"1421"},["1626"],{"range":"1627","text":"1421"},["1628"],{"range":"1629","text":"1421"},["1630"],["1631"],{"range":"1632","text":"1421"},["1633"],{"range":"1634","text":"1421"},["1635"],{"range":"1636","text":"1421"},["1637"],{"range":"1638","text":"1455"},["1639"],"tsdoc-undefined-tag: The TSDoc tag \"@hidden\" is not defined in this configuration","tsdoc-malformed-inline-tag: Expecting a TSDoc tag starting with \"{@\"","tsdoc-malformed-inline-tag","tsdoc-escape-right-brace: The \"}\" character should be escaped using a backslash to avoid confusion with a TSDoc inline tag","tsdoc-escape-right-brace","tsdoc-code-span-missing-delimiter: The code span is missing its closing backtick","tsdoc-code-span-missing-delimiter","tsdoc-param-tag-missing-hyphen: The @param block should be followed by a parameter name and then a hyphen","tsdoc-param-tag-missing-hyphen","@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull","import/no-extraneous-dependencies","'@ethereumjs/rlp' should be listed in the project's dependencies. Run 'npm i -S @ethereumjs/rlp' to add it","ImportDeclaration",["1640"],"@typescript-eslint/no-unsafe-return","Unsafe return of an `any` typed value.","ReturnStatement","unsafeReturn",["1641"],["1642"],"class-methods-use-this","Expected 'this' to be used by class async method 'request'.","FunctionExpression","missingThis",["1643"],"Async method 'request' has no 'await' expression.",["1644"],"@typescript-eslint/no-unused-vars","'_' is defined but never used.","unusedVar",["1645"],"jest/expect-expect","Test has no assertions","noAssertions","jest/no-disabled-tests","Disabled test","disabledTest",["1646"],["1647"],["1648"],"Disabled test suite","disabledSuite","@typescript-eslint/no-floating-promises","Promises must be awaited, end with a call to .catch, end with a call to .then with a rejection handler or be explicitly marked as ignored with the `void` operator.","ExpressionStatement","floatingVoid",["1649"],["1650"],["1651"],"@typescript-eslint/restrict-template-expressions","Invalid type \"any\" of template literal expression.","invalidType",["1652"],["1653"],["1654"],["1655"],["1656"],["1657"],["1658"],["1659"],["1660"],["1661"],["1662"],["1663"],["1664"],["1665"],["1666"],["1667"],"'web3-hardhat-plugin' should be listed in the project's dependencies. Run 'npm i -S web3-hardhat-plugin' to add it",["1668"],"'web3' should be listed in the project's dependencies. Run 'npm i -S web3' to add it",["1669"],"@typescript-eslint/ban-ts-comment","Include a description after the \"@ts-expect-error\" directive to explain why the @ts-expect-error is necessary. The description must be 3 characters or longer.","Line","tsDirectiveCommentRequiresDescription",["1670"],"ConditionalExpression",["1671"],["1672"],"no-plusplus","Unary operator '++' used.","UpdateExpression","unexpectedUnaryOp",["1673"],"no-param-reassign","Assignment to function parameter 'currentAttempt'.","assignmentToFunctionParam",["1674"],"no-await-in-loop","Unexpected `await` inside a loop.","AwaitExpression","unexpectedAwait",["1675"],["1676"],["1677"],["1678"],["1679"],"Relative import from another package is not allowed. Use `web3.js/scripts/accounts.json` instead of `../../../../scripts/accounts.json`",{"range":"1680","text":"1681"},["1682"],"Relative import from another package is not allowed. Use `web3.js/fixtures/build/Basic` instead of `../../../../fixtures/build/Basic`",{"range":"1683","text":"1684"},["1685"],["1686"],["1687"],{"range":"1688","text":"1684"},["1689"],"Relative import from another package is not allowed. Use `web3.js/scripts/system_tests_utils` instead of `../../../../scripts/system_tests_utils`",{"range":"1690","text":"1691"},["1692"],"@typescript-eslint/prefer-for-of","Expected a `for-of` loop instead of a `for` loop with this simple iteration.","ForStatement","preferForOf",["1693"],["1694"],["1695"],"no-self-assign","'parallelCount' is assigned to itself.","selfAssignment",["1696"],["1697"],["1698"],"Async arrow function has no 'await' expression.","no-void","Expected 'undefined' and instead saw 'void'.","UnaryExpression","noVoid",["1699"],"no-new","Do not use 'new' for side effects.","noNewStatement",["1700"],["1701"],"'_providerEvent' is defined but never used.",["1702"],["1703"],"Unexpected empty arrow function.",["1704"],[0,34],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n",{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"messageId":"1706","fix":"1707","desc":"1708"},{"messageId":"1709","fix":"1710","desc":"1711"},{"messageId":"1706","fix":"1712","desc":"1708"},{"messageId":"1709","fix":"1713","desc":"1711"},{"kind":"1705","justification":"1487"},[828,870],"\"web3/test/shared_fixtures/system_tests_utils\"",{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},[865,910],{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},[788,833],{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},[969,1014],{"kind":"1705","justification":"1487"},[900,945],{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},[887,932],{"kind":"1705","justification":"1487"},[1044,1091],"\"web3/test/shared_fixtures/contracts/ERC20Token\"",{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},[1277,1304],"\"web3.js/.secrets.json\"",{"kind":"1705","justification":"1487"},[1802,2227],"(): string => {\n\tif (process.env.TEST_ACCOUNT_ADDRESS !== undefined) {\n\t\treturn process.env.TEST_ACCOUNT_ADDRESS;\n\t\t// eslint-disable-next-line no-else-return\n\t} if (getSystemTestBackend() === BACKEND.SEPOLIA || getSystemTestBackend() === BACKEND.MAINNET) {\n\t\treturn secrets[getSystemTestBackend().toUpperCase() as 'SEPOLIA' | 'MAINNET'].ACCOUNT\n\t\t\t.address;\n\t}\n\n\tthrow new Error('Unable to get test account address');\n}",{"kind":"1705","justification":"1487"},[2461,2470],"",{"kind":"1705","justification":"1487"},[2514,3056],"(): boolean => {\n\tif (process.env.ALLOWED_SEND_TRANSACTION !== undefined) {\n\t\t// https://github.com/actions/runner/issues/1483\n\t\tif (process.env.ALLOWED_SEND_TRANSACTION === 'false') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn Boolean(process.env.ALLOWED_SEND_TRANSACTION);\n\t\t// eslint-disable-next-line no-else-return\n\t} if (getSystemTestBackend() === BACKEND.SEPOLIA || getSystemTestBackend() === BACKEND.MAINNET) {\n\t\treturn secrets[getSystemTestBackend().toUpperCase() as 'SEPOLIA' | 'MAINNET']\n\t\t\t.ALLOWED_SEND_TRANSACTION;\n\t}\n\n\treturn false;\n}",{"kind":"1705","justification":"1487"},[3102,3542],"(): string => {\n\tif (process.env.TEST_ACCOUNT_PRIVATE_KEY !== undefined) {\n\t\treturn process.env.TEST_ACCOUNT_PRIVATE_KEY;\n\t\t// eslint-disable-next-line no-else-return\n\t} if (getSystemTestBackend() === BACKEND.SEPOLIA || getSystemTestBackend() === BACKEND.MAINNET) {\n\t\treturn secrets[getSystemTestBackend().toUpperCase() as 'SEPOLIA' | 'MAINNET'].ACCOUNT\n\t\t\t.privateKey;\n\t}\n\n\tthrow new Error('Unable to get test account private key');\n}",{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},[1480,1482],"test",{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},[799,841],{"kind":"1705","justification":"1487"},[890,935],{"kind":"1705","justification":"1487"},[813,858],{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},[969,1014],{"kind":"1705","justification":"1487"},[925,970],{"kind":"1705","justification":"1487"},[905,950],{"kind":"1705","justification":"1487"},[1002,1049],{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"messageId":"1714","fix":"1715","desc":"1716"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"messageId":"1714","fix":"1717","desc":"1716"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},[778,813],"\"web3.js/scripts/accounts.json\"",{"kind":"1705","justification":"1487"},[855,889],"\"web3.js/fixtures/build/Basic\"",{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},[875,909],{"kind":"1705","justification":"1487"},[962,1002],"\"web3.js/scripts/system_tests_utils\"",{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},{"kind":"1705","justification":"1487"},"directive","suggestUnknown",{"range":"1718","text":"1719"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"1718","text":"1720"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"1721","text":"1719"},{"range":"1721","text":"1720"},"floatingFixVoid",{"range":"1722","text":"1723"},"Add void operator to ignore.",{"range":"1724","text":"1725"},[1989,1992],"unknown","never",[2766,2769],[2205,2288],"void sub.on('sending', txData => {\n\t\t\t\tresolve(txData as unknown as Transaction);\n\t\t\t});",[1276,1303],"void subscription.unsubscribe();"]