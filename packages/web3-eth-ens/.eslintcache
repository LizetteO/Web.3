[{"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/src/abi/ens/ENSRegistry.ts":"1","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/src/abi/ens/PublicResolver.ts":"2","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/src/config.ts":"3","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/src/ens.ts":"4","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/src/index.ts":"5","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/src/registry.ts":"6","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/src/resolver.ts":"7","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/src/utils.ts":"8","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/test/fixtures/ens/abi/ENSRegistry.ts":"9","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/test/fixtures/ens/abi/NameWrapper.ts":"10","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/test/fixtures/ens/abi/PublicResolver.ts":"11","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/test/fixtures/ens/bytecode/ENSRegistryBytecode.ts":"12","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/test/fixtures/ens/bytecode/NameWrapperBytecode.ts":"13","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/test/fixtures/ens/bytecode/PublicResolverBytecode.ts":"14","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/test/fixtures/system_tests_utils.ts":"15","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/test/fixtures/utils.ts":"16","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/test/integration/ens.events.test.ts":"17","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/test/integration/ens.test.ts":"18","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/test/integration/resolver.test.ts":"19","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/test/unit/constructor.test.ts":"20","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/test/unit/ens.test.ts":"21","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/test/unit/index.test.ts":"22","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/test/unit/registry.test.ts":"23","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/test/unit/resolver.test.ts":"24","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/test/unit/utils.test.ts":"25"},{"size":3125,"mtime":1685553797007,"results":"26","hashOfConfig":"27"},{"size":9485,"mtime":1709133735799,"results":"28","hashOfConfig":"27"},{"size":1747,"mtime":1711449453863,"results":"29","hashOfConfig":"27"},{"size":9908,"mtime":1713453005521,"results":"30","hashOfConfig":"27"},{"size":1538,"mtime":1685575123090,"results":"31","hashOfConfig":"27"},{"size":2885,"mtime":1685575123090,"results":"32","hashOfConfig":"27"},{"size":4619,"mtime":1711449453864,"results":"33","hashOfConfig":"27"},{"size":1276,"mtime":1678154646118,"results":"34","hashOfConfig":"27"},{"size":6339,"mtime":1685553797008,"results":"35","hashOfConfig":"36"},{"size":1063,"mtime":1678154646118,"results":"37","hashOfConfig":"36"},{"size":13816,"mtime":1685553797008,"results":"38","hashOfConfig":"36"},{"size":13862,"mtime":1678154646118,"results":"39","hashOfConfig":"36"},{"size":1260,"mtime":1678154646119,"results":"40","hashOfConfig":"36"},{"size":24655,"mtime":1678154646119,"results":"41","hashOfConfig":"36"},{"size":15907,"mtime":1713826363670,"results":"42","hashOfConfig":"36"},{"size":1219,"mtime":1678154646119,"results":"43","hashOfConfig":"36"},{"size":5276,"mtime":1713453005522,"results":"44","hashOfConfig":"36"},{"size":5795,"mtime":1713453005522,"results":"45","hashOfConfig":"36"},{"size":8283,"mtime":1713453005522,"results":"46","hashOfConfig":"36"},{"size":2372,"mtime":1709133735800,"results":"47","hashOfConfig":"36"},{"size":8500,"mtime":1709133735801,"results":"48","hashOfConfig":"36"},{"size":884,"mtime":1678154646120,"results":"49","hashOfConfig":"36"},{"size":6778,"mtime":1685553797009,"results":"50","hashOfConfig":"36"},{"size":11656,"mtime":1711449453865,"results":"51","hashOfConfig":"36"},{"size":1168,"mtime":1678154646121,"results":"52","hashOfConfig":"36"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"afyc0x",{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1acr6lx",{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/src/abi/ens/ENSRegistry.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/src/abi/ens/PublicResolver.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/src/config.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/src/ens.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/src/index.ts",["131"],[],"ï»¿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * The `web3.eth.ens` functions let you interact with ENS. We recommend reading the [ENS documentation](https://docs.ens.domains/) to get deeper insights about the internals of the name service.\n *\n * ## Breaking Changes\n *\n * -   All the API level interfaces returning or accepting `null` in 1.x, use `undefined` in 4.x.\n * -   Functions don't accept a callback anymore.\n * -   Functions that accepted an optional `TransactionConfig` as the last argument, now accept an optional `NonPayableCallOptions`. See `web3-eth-contract` package for more details.\n * -   Removed all non-read methods. If you need modifing resolver or registry, please use https://www.npmjs.com/package/@ensdomains/ensjs\n */\n/**\n * This comment _supports3_ [Markdown](https://marked.js.org/)\n */\nimport { registryAddresses } from './config.js';\n\nexport * from './ens.js';\nexport { registryAddresses };\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/src/registry.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/src/resolver.ts",[],["132","133"],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/src/utils.ts",[],["134"],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/test/fixtures/ens/abi/ENSRegistry.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/test/fixtures/ens/abi/NameWrapper.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/test/fixtures/ens/abi/PublicResolver.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/test/fixtures/ens/bytecode/ENSRegistryBytecode.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/test/fixtures/ens/bytecode/NameWrapperBytecode.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/test/fixtures/ens/bytecode/PublicResolverBytecode.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/test/fixtures/system_tests_utils.ts",[],["135","136","137","138","139","140","141","142","143","144","145","146","147","148"],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/test/fixtures/utils.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/test/integration/ens.events.test.ts",[],["149","150","151","152","153"],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/test/integration/ens.test.ts",[],["154"],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/test/integration/resolver.test.ts",[],["155","156","157"],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/test/unit/constructor.test.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/test/unit/ens.test.ts",["158","159","160"],["161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177"],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Web3Context, Web3ContextObject, Web3PromiEvent } from 'web3-core';\nimport { ENSNetworkNotSyncedError, ENSUnsupportedNetworkError } from 'web3-errors';\nimport { Contract } from 'web3-eth-contract';\nimport { PublicResolverAbi } from '../../src/abi/ens/PublicResolver';\nimport { registryAddresses } from '../../src/config';\n\nimport { ENS } from '../../src/ens';\n\njest.useFakeTimers().setSystemTime(new Date('2020-01-01'));\n\njest.mock('web3-eth', () => ({\n\t__esModule: true,\n\tisSyncing: jest.fn(),\n}));\n\n// eslint-disable-next-line @typescript-eslint/no-require-imports, @typescript-eslint/no-var-requires\nconst { isSyncing } = require('web3-eth');\n\nconst expectedNetworkId = '0x1';\njest.mock('web3-net', () => ({\n\tgetId: jest.fn(),\n}));\n// eslint-disable-next-line @typescript-eslint/no-require-imports, @typescript-eslint/no-var-requires\nconst { getId } = require('web3-net');\n\ndescribe('ens', () => {\n\tlet object: Web3ContextObject;\n\tlet resolverContract: Contract<typeof PublicResolverAbi>;\n\tconst mockAddress = '0x0000000000000000000000000000000000000000';\n\tconst ENS_NAME = 'web3js.eth';\n\tlet ens: ENS;\n\n\tbeforeAll(() => {\n\t\tconst context = new Web3Context('http://test.com');\n\t\tobject = context.getContextObject();\n\n\t\tresolverContract = new Contract(PublicResolverAbi, mockAddress);\n\t\tens = new ENS(registryAddresses.main, object);\n\t});\n\n\tdescribe('Resolver', () => {\n\t\tit('getResolver', async () => {\n\t\t\tconst getResolverMock = jest\n\t\t\t\t.spyOn(ens['_registry'], 'getResolver')\n\t\t\t\t.mockResolvedValue(resolverContract);\n\n\t\t\tawait ens.getResolver(ENS_NAME);\n\n\t\t\texpect(getResolverMock).toHaveBeenCalledWith(ENS_NAME);\n\t\t});\n\t});\n\n\tdescribe('Record', () => {\n\t\tit('recordExists', async () => {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t\t\tconst call = jest.spyOn({ call: () => {} }, 'call');\n\n\t\t\tconst recordExistsMock = jest.spyOn(ens['_registry'], 'recordExists').mockReturnValue({\n\t\t\t\tcall,\n\t\t\t} as unknown as Web3PromiEvent<any, any>);\n\t\t\tawait ens.recordExists(ENS_NAME);\n\n\t\t\texpect(recordExistsMock).toHaveBeenCalledWith(ENS_NAME);\n\t\t});\n\t});\n\n\tdescribe('ttl', () => {\n\t\tit('getTTL', async () => {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t\t\tconst call = jest.spyOn({ call: () => {} }, 'call');\n\n\t\t\tconst getTTLMock = jest.spyOn(ens['_registry'], 'getTTL').mockReturnValue({\n\t\t\t\tcall,\n\t\t\t} as unknown as Web3PromiEvent<any, any>);\n\n\t\t\tawait ens.getTTL(ENS_NAME);\n\t\t\texpect(getTTLMock).toHaveBeenCalledWith(ENS_NAME);\n\t\t});\n\t});\n\n\tdescribe('owner', () => {\n\t\tit('getOwner', async () => {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t\t\tconst call = jest.spyOn({ call: () => {} }, 'call');\n\n\t\t\tconst getOwnerMock = jest.spyOn(ens['_registry'], 'getOwner').mockReturnValue({\n\t\t\t\tcall,\n\t\t\t} as unknown as Web3PromiEvent<any, any>);\n\n\t\t\tawait ens.getOwner(ENS_NAME);\n\t\t\texpect(getOwnerMock).toHaveBeenCalledWith(ENS_NAME);\n\t\t});\n\t});\n\n\tdescribe('addr', () => {\n\t\tit('setAddr valid', async () => {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t\t\tconst send = jest.spyOn({ send: () => {} }, 'send');\n\n\t\t\tconst setAddressMock = jest.spyOn(ens['_resolver'], 'setAddress').mockReturnValue({\n\t\t\t\tsend,\n\t\t\t} as unknown as Web3PromiEvent<any, any>);\n\n\t\t\tconst sendOptions = { from: mockAddress };\n\t\t\tawait ens.setAddress(ENS_NAME, mockAddress, sendOptions);\n\t\t\texpect(setAddressMock).toHaveBeenCalledWith(\n\t\t\t\tENS_NAME,\n\t\t\t\tmockAddress,\n\t\t\t\tsendOptions,\n\t\t\t);\n\t\t});\n\t\tit('getAddress', async () => {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t\t\tconst call = jest.spyOn({ call: () => {} }, 'call');\n\n\t\t\tconst addrMock = jest.spyOn(ens['_resolver'], 'getAddress').mockReturnValue({\n\t\t\t\tcall,\n\t\t\t} as unknown as Web3PromiEvent<any, any>);\n\n\t\t\tawait ens.getAddress(ENS_NAME);\n\n\t\t\texpect(addrMock).toHaveBeenCalledWith(ENS_NAME, 60);\n\t\t});\n\t});\n\n\tdescribe('events', () => {\n\t\tit('get events', async () => {\n\t\t\tconst { events } = ens;\n\t\t\texpect(typeof events.NewOwner).toBe('function');\n\t\t\texpect(typeof events.allEvents).toBe('function');\n\t\t\texpect(typeof events.NewResolver).toBe('function');\n\t\t\texpect(typeof events.Transfer).toBe('function');\n\t\t});\n\t});\n\n\tdescribe('constructor', () => {\n\t\tit('default params', async () => {\n\t\t\tconst localEns = new ENS();\n\t\t\texpect(localEns.provider).toBeUndefined();\n\t\t\texpect(localEns.registryAddress).toBe(registryAddresses.main);\n\t\t});\n\t\tit('set params', async () => {\n\t\t\tconst localEns = new ENS(registryAddresses.goerli, 'http://127.0.0.1:8545');\n\t\t\t// @ts-expect-error check clientUrl field\n\t\t\texpect(localEns.provider?.clientUrl).toBe('http://127.0.0.1:8545');\n\t\t\texpect(localEns.registryAddress).toBe(registryAddresses.goerli);\n\t\t});\n\t});\n\n\tdescribe('pubkey', () => {\n\t\tit('getPubkey', async () => {\n\t\t\tconst pubkeyMock = jest.spyOn(ens['_resolver'], 'getPubkey').mockReturnValue({\n\t\t\t\tcall: jest.fn(),\n\t\t\t} as unknown as Web3PromiEvent<any, any>);\n\n\t\t\tawait ens.getPubkey(ENS_NAME);\n\t\t\texpect(pubkeyMock).toHaveBeenCalledWith(ENS_NAME);\n\t\t});\n\n\t\tdescribe('Contenthash', () => {\n\t\t\tit('getContenthash', async () => {\n\t\t\t\tconst contenthashMock = jest\n\t\t\t\t\t.spyOn(ens['_resolver'], 'getContenthash')\n\t\t\t\t\t.mockReturnValue({\n\t\t\t\t\t\tcall: jest.fn(),\n\t\t\t\t\t} as unknown as Web3PromiEvent<any, any>);\n\n\t\t\t\tawait ens.getContenthash(ENS_NAME);\n\n\t\t\t\texpect(contenthashMock).toHaveBeenCalledWith(ENS_NAME);\n\t\t\t});\n\t\t});\n\t});\n\n\tit('supportsInterface', async () => {\n\t\tconst interfaceId = 'setAddr';\n\t\tconst supportsInterfaceMock = jest\n\t\t\t.spyOn(ens['_resolver'], 'supportsInterface')\n\t\t\t.mockReturnValue({\n\t\t\t\tcall: jest.fn(),\n\t\t\t} as unknown as Web3PromiEvent<any, any>);\n\n\t\tawait ens.supportsInterface(ENS_NAME, interfaceId);\n\n\t\texpect(supportsInterfaceMock).toHaveBeenCalledWith(ENS_NAME, interfaceId);\n\t});\n\n\tdescribe('CheckNetwork', () => {\n\t\tbeforeEach(() => {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n\t\t\tgetId.mockReset();\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n\t\t\tisSyncing.mockReset();\n\t\t});\n\t\tit('Not last sync/ENSNetworkNotSyncedError', async () => {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n\t\t\tgetId.mockImplementation(() => expectedNetworkId);\n\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n\t\t\tisSyncing.mockImplementation(() => {\n\t\t\t\treturn {\n\t\t\t\t\tstartingBlock: 100,\n\t\t\t\t\tcurrentBlock: 312,\n\t\t\t\t\thighestBlock: 51266,\n\t\t\t\t} as unknown;\n\t\t\t});\n\t\t\tawait expect(ens.checkNetwork()).rejects.toThrow(new ENSNetworkNotSyncedError());\n\t\t});\n\n\t\tit('Threshold exceeded from previous check/ENSNetworkNotSyncedError', async () => {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n\t\t\tgetId.mockImplementation(() => expectedNetworkId);\n\n\t\t\t// An initial check, in order to update `_lastSyncCheck`\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n\t\t\tisSyncing.mockImplementation(() => {\n\t\t\t\treturn false;\n\t\t\t});\n\t\t\t// update `_lastSyncCheck`\n\t\t\tawait ens.checkNetwork();\n\n\t\t\t// now - this._lastSyncCheck > 3600)\n\t\t\tjest.useFakeTimers().setSystemTime(new Date('2020-01-01').getTime() + 3601000); // (3600 + 1) * 1000\n\t\t\tawait expect(ens.checkNetwork()).resolves.not.toThrow();\n\t\t});\n\n\t\tit('ENSUnsupportedNetworkError', async () => {\n\t\t\t// reset from previous check\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n\t\t\tens['_detectedAddress'] = undefined;\n\n\t\t\tconst network = 'AnUnsupportedNetwork';\n\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n\t\t\tgetId.mockImplementation(() => network);\n\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n\t\t\tisSyncing.mockImplementation(() => {\n\t\t\t\treturn {\n\t\t\t\t\tstartingBlock: 100,\n\t\t\t\t\tcurrentBlock: 312,\n\t\t\t\t\thighestBlock: 51266,\n\t\t\t\t} as unknown;\n\t\t\t});\n\n\t\t\tawait expect(ens.checkNetwork()).rejects.toThrow(\n\t\t\t\tnew ENSUnsupportedNetworkError(network),\n\t\t\t);\n\t\t});\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/test/unit/index.test.ts",[],[],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/test/unit/registry.test.ts",["178","179","180"],["181","182","183","184","185","186","187"],"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Web3Context, Web3ContextObject } from 'web3-core';\nimport { NonPayableMethodObject } from 'web3-eth-contract';\nimport { Registry } from '../../src/registry';\nimport { namehash } from '../../src/utils';\n\ndescribe('registry', () => {\n\tlet object: Web3ContextObject;\n\tlet registry: Registry;\n\tconst mockAddress = '0x0000000000000000000000000000000000000000';\n\tconst ENS_NAME = 'web3js.eth';\n\n\tbeforeAll(() => {\n\t\tconst context = new Web3Context('http://test.com');\n\t\tobject = context.getContextObject();\n\n\t\tregistry = new Registry(object);\n\t});\n\n\tafterEach(() => {\n\t\tjest.clearAllMocks();\n\t});\n\n\tit('constructor with custom address', async () => {\n\t\tconst tempRegistry = new Registry(object, mockAddress);\n\n\t\texpect(tempRegistry).toBeInstanceOf(Registry);\n\t});\n\n\tdescribe('owner', () => {\n\t\tit('getOwner', async () => {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t\t\tconst call = jest.spyOn({ call: () => {} }, 'call');\n\n\t\t\tconst getOwnerMock = jest.spyOn(registry['contract'].methods, 'owner').mockReturnValue({\n\t\t\t\tcall,\n\t\t\t} as unknown as NonPayableMethodObject<any, any>);\n\n\t\t\tawait registry.getOwner(ENS_NAME);\n\t\t\texpect(getOwnerMock).toHaveBeenCalledWith(namehash(ENS_NAME));\n\t\t\texpect(call).toHaveBeenCalled();\n\t\t});\n\t\tit('getOwner throw (transaction reverted)', async () => {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t\t\tconst call = jest.spyOn({ call: () => {} }, 'call').mockImplementation(() => {\n\t\t\t\tthrow new Error();\n\t\t\t});\n\n\t\t\tconst getOwnerMock = jest\n\t\t\t\t.spyOn(registry['contract'].methods, 'owner')\n\t\t\t\t.mockReturnValue({ call } as unknown as NonPayableMethodObject<any, any>);\n\n\t\t\tawait expect(async () => {\n\t\t\t\tawait registry.getOwner(ENS_NAME);\n\t\t\t}).rejects.toThrow(new Error());\n\t\t\texpect(getOwnerMock).toHaveBeenCalledWith(namehash(ENS_NAME));\n\t\t\texpect(call).toHaveBeenCalled();\n\t\t});\n\t});\n\n\tdescribe('ttl', () => {\n\t\tit('getTTL', async () => {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t\t\tconst call = jest.spyOn({ call: () => {} }, 'call');\n\n\t\t\tconst getTTLMock = jest.spyOn(registry['contract'].methods, 'ttl').mockReturnValue({\n\t\t\t\tcall,\n\t\t\t} as unknown as NonPayableMethodObject<any, any>);\n\n\t\t\tawait registry.getTTL(ENS_NAME);\n\t\t\texpect(getTTLMock).toHaveBeenCalledWith(namehash(ENS_NAME));\n\t\t\texpect(call).toHaveBeenCalled();\n\t\t});\n\t\tit('getTTL throw (transaction reverted)', async () => {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t\t\tconst call = jest.spyOn({ call: () => {} }, 'call').mockImplementation(() => {\n\t\t\t\tthrow new Error();\n\t\t\t});\n\n\t\t\tconst getTTLMock = jest\n\t\t\t\t.spyOn(registry['contract'].methods, 'ttl')\n\t\t\t\t.mockReturnValue({ call } as unknown as NonPayableMethodObject<any, any>);\n\n\t\t\tawait expect(async () => {\n\t\t\t\tawait registry.getTTL(ENS_NAME);\n\t\t\t}).rejects.toThrow(new Error());\n\t\t\texpect(getTTLMock).toHaveBeenCalledWith(namehash(ENS_NAME));\n\t\t\texpect(call).toHaveBeenCalled();\n\t\t});\n\t});\n\n\tdescribe('record', () => {\n\t\tit('recordExists', async () => {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t\t\tconst call = jest.spyOn({ call: () => {} }, 'call');\n\n\t\t\tconst setRecordMock = jest\n\t\t\t\t.spyOn(registry['contract'].methods, 'recordExists')\n\t\t\t\t.mockReturnValue({\n\t\t\t\t\tcall,\n\t\t\t\t} as unknown as NonPayableMethodObject<any, any>);\n\n\t\t\tawait registry.recordExists(ENS_NAME);\n\t\t\texpect(setRecordMock).toHaveBeenCalledWith(namehash(ENS_NAME));\n\t\t\texpect(call).toHaveBeenCalled();\n\t\t});\n\t\tit('recordExists throw (transaction reverted)', async () => {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t\t\tconst call = jest.spyOn({ call: () => {} }, 'call').mockImplementation(() => {\n\t\t\t\tthrow new Error();\n\t\t\t});\n\n\t\t\tconst setRecordMock = jest\n\t\t\t\t.spyOn(registry['contract'].methods, 'recordExists')\n\t\t\t\t.mockReturnValue({\n\t\t\t\t\tcall,\n\t\t\t\t} as unknown as NonPayableMethodObject<any, any>);\n\n\t\t\tawait expect(async () => {\n\t\t\t\tawait registry.recordExists(ENS_NAME);\n\t\t\t}).rejects.toThrow(new Error());\n\t\t\texpect(setRecordMock).toHaveBeenCalledWith(namehash(ENS_NAME));\n\t\t\texpect(call).toHaveBeenCalled();\n\t\t});\n\t});\n\n\tdescribe('resolver', () => {\n\t\tit('resolver', async () => {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t\t\tconst call = jest\n\t\t\t\t.spyOn(\n\t\t\t\t\t{\n\t\t\t\t\t\tcall: async () => {\n\t\t\t\t\t\t\treturn mockAddress;\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t'call',\n\t\t\t\t)\n\t\t\t\t.mockReturnValue(Promise.resolve(mockAddress));\n\n\t\t\tconst resolverMock = jest\n\t\t\t\t.spyOn(registry['contract'].methods, 'resolver')\n\t\t\t\t.mockReturnValue({\n\t\t\t\t\tcall,\n\t\t\t\t} as unknown as NonPayableMethodObject<any, any>);\n\n\t\t\tawait registry.getResolver(ENS_NAME);\n\t\t\texpect(resolverMock).toHaveBeenCalledWith(namehash(ENS_NAME));\n\t\t\texpect(call).toHaveBeenCalled();\n\t\t});\n\n\t\tit('resolver (return non string)', async () => {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t\t\tconst call = jest\n\t\t\t\t.spyOn(\n\t\t\t\t\t{\n\t\t\t\t\t\tcall: async () => {\n\t\t\t\t\t\t\treturn 5; // something that is not string\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t'call',\n\t\t\t\t)\n\t\t\t\t.mockReturnValue(Promise.resolve(5)); // something that is not string\n\n\t\t\tconst resolverMock = jest\n\t\t\t\t.spyOn(registry['contract'].methods, 'resolver')\n\t\t\t\t.mockReturnValue({\n\t\t\t\t\tcall,\n\t\t\t\t} as unknown as NonPayableMethodObject<any, any>);\n\n\t\t\tawait expect(async () => {\n\t\t\t\tawait registry.getResolver(ENS_NAME);\n\t\t\t}).rejects.toThrow(new Error());\n\t\t\texpect(resolverMock).toHaveBeenCalledWith(namehash(ENS_NAME));\n\t\t\texpect(call).toHaveBeenCalled();\n\t\t});\n\n\t\tit('resolver throw (transaction reverted)', async () => {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t\t\tconst call = jest.spyOn({ call: () => {} }, 'call').mockImplementation(() => {\n\t\t\t\tthrow new Error();\n\t\t\t});\n\t\t\tconst resolverMock = jest\n\t\t\t\t.spyOn(registry['contract'].methods, 'resolver')\n\t\t\t\t.mockReturnValue({\n\t\t\t\t\tcall,\n\t\t\t\t} as unknown as NonPayableMethodObject<any, any>);\n\n\t\t\tawait expect(async () => {\n\t\t\t\tawait registry.getResolver(ENS_NAME);\n\t\t\t}).rejects.toThrow(new Error());\n\t\t\texpect(resolverMock).toHaveBeenCalledWith(namehash(ENS_NAME));\n\t\t\texpect(call).toHaveBeenCalled();\n\t\t});\n\t});\n});\n","/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/test/unit/resolver.test.ts",[],["188","189"],"/Users/alexeykosinski/work/chainsafe/web3.js/packages/web3-eth-ens/test/unit/utils.test.ts",[],[],{"ruleId":"190","severity":1,"message":"191","line":26,"column":122,"nodeType":null,"messageId":"192","endLine":26,"endColumn":123},{"ruleId":"193","severity":2,"message":"194","line":46,"column":2,"nodeType":"195","messageId":"196","endLine":46,"endColumn":36,"suppressions":"197"},{"ruleId":"198","severity":2,"message":"199","line":84,"column":43,"nodeType":"200","messageId":"201","endLine":84,"endColumn":64,"fix":"202","suppressions":"203"},{"ruleId":"204","severity":2,"message":"205","line":20,"column":10,"nodeType":"206","messageId":"207","endLine":20,"endColumn":23,"suppressions":"208"},{"ruleId":"209","severity":2,"message":"210","line":21,"column":1,"nodeType":"211","endLine":26,"endColumn":28,"suppressions":"212"},{"ruleId":"209","severity":2,"message":"213","line":29,"column":1,"nodeType":"211","endLine":29,"endColumn":49,"suppressions":"214"},{"ruleId":"209","severity":2,"message":"215","line":55,"column":1,"nodeType":"211","endLine":55,"endColumn":46,"suppressions":"216"},{"ruleId":"209","severity":2,"message":"217","line":57,"column":1,"nodeType":"211","endLine":57,"endColumn":25,"suppressions":"218"},{"ruleId":"209","severity":2,"message":"219","line":62,"column":1,"nodeType":"211","endLine":62,"endColumn":48,"suppressions":"220"},{"ruleId":"209","severity":2,"message":"221","line":64,"column":1,"nodeType":"211","endLine":64,"endColumn":50,"suppressions":"222"},{"ruleId":"223","severity":2,"message":"224","line":72,"column":2,"nodeType":"225","messageId":"226","endLine":72,"endColumn":21,"suppressions":"227"},{"ruleId":"228","severity":2,"message":"229","line":74,"column":2,"nodeType":"230","messageId":"231","endLine":74,"endColumn":56,"suppressions":"232"},{"ruleId":"233","severity":2,"message":"234","line":74,"column":19,"nodeType":"235","messageId":"236","endLine":74,"endColumn":30,"suppressions":"237"},{"ruleId":"238","severity":2,"message":"239","line":152,"column":4,"nodeType":"240","messageId":"241","endLine":152,"endColumn":20,"suppressions":"242"},{"ruleId":"243","severity":2,"message":"244","line":152,"column":4,"nodeType":"206","messageId":"245","endLine":152,"endColumn":18,"suppressions":"246"},{"ruleId":"247","severity":2,"message":"248","line":491,"column":4,"nodeType":"249","messageId":"250","endLine":496,"endColumn":6,"suppressions":"251"},{"ruleId":"228","severity":2,"message":"229","line":505,"column":2,"nodeType":"252","messageId":"231","endLine":508,"endColumn":3,"suppressions":"253"},{"ruleId":"228","severity":2,"message":"229","line":507,"column":38,"nodeType":"230","messageId":"231","endLine":507,"endColumn":90,"suppressions":"254"},{"ruleId":"209","severity":2,"message":"221","line":24,"column":1,"nodeType":"211","endLine":24,"endColumn":50,"suppressions":"255"},{"ruleId":"256","severity":2,"message":"257","line":143,"column":2,"nodeType":"206","messageId":"258","endLine":143,"endColumn":4,"fix":"259","suppressions":"260"},{"ruleId":"261","severity":1,"message":"262","line":143,"column":2,"nodeType":"252","messageId":"263","endLine":157,"endColumn":4,"suppressions":"264"},{"ruleId":"265","severity":2,"message":"266","line":145,"column":27,"nodeType":"267","messageId":"268","endLine":156,"endColumn":4,"suppressions":"269"},{"ruleId":"270","severity":2,"message":"271","line":145,"column":27,"nodeType":"206","messageId":"272","endLine":145,"endColumn":32,"suppressions":"273"},{"ruleId":"209","severity":2,"message":"221","line":23,"column":1,"nodeType":"211","endLine":23,"endColumn":50,"suppressions":"274"},{"ruleId":"209","severity":2,"message":"221","line":23,"column":1,"nodeType":"211","endLine":23,"endColumn":50,"suppressions":"275"},{"ruleId":"265","severity":2,"message":"266","line":190,"column":27,"nodeType":"267","messageId":"268","endLine":198,"endColumn":4,"suppressions":"276"},{"ruleId":"270","severity":2,"message":"271","line":190,"column":27,"nodeType":"206","messageId":"272","endLine":190,"endColumn":32,"suppressions":"277"},{"ruleId":"278","severity":1,"message":"279","line":144,"column":29,"nodeType":"267","messageId":"280","endLine":144,"endColumn":31},{"ruleId":"278","severity":1,"message":"279","line":154,"column":33,"nodeType":"267","messageId":"280","endLine":154,"endColumn":35},{"ruleId":"278","severity":1,"message":"279","line":159,"column":29,"nodeType":"267","messageId":"280","endLine":159,"endColumn":31},{"ruleId":"281","severity":2,"message":"282","line":34,"column":23,"nodeType":"252","messageId":"283","endLine":34,"endColumn":42,"suppressions":"284"},{"ruleId":"285","severity":2,"message":"286","line":34,"column":23,"nodeType":"252","messageId":"287","endLine":34,"endColumn":42,"suppressions":"288"},{"ruleId":"281","severity":2,"message":"282","line":41,"column":19,"nodeType":"252","messageId":"283","endLine":41,"endColumn":38,"suppressions":"289"},{"ruleId":"285","severity":2,"message":"286","line":41,"column":19,"nodeType":"252","messageId":"287","endLine":41,"endColumn":38,"suppressions":"290"},{"ruleId":"291","severity":2,"message":"292","line":73,"column":42,"nodeType":"267","messageId":"293","endLine":73,"endColumn":44,"suppressions":"294"},{"ruleId":"291","severity":2,"message":"292","line":87,"column":42,"nodeType":"267","messageId":"293","endLine":87,"endColumn":44,"suppressions":"295"},{"ruleId":"291","severity":2,"message":"292","line":101,"column":42,"nodeType":"267","messageId":"293","endLine":101,"endColumn":44,"suppressions":"296"},{"ruleId":"291","severity":2,"message":"297","line":115,"column":42,"nodeType":"267","messageId":"293","endLine":115,"endColumn":44,"suppressions":"298"},{"ruleId":"291","severity":2,"message":"292","line":131,"column":42,"nodeType":"267","messageId":"293","endLine":131,"endColumn":44,"suppressions":"299"},{"ruleId":"233","severity":2,"message":"234","line":208,"column":4,"nodeType":"235","messageId":"236","endLine":208,"endColumn":19,"suppressions":"300"},{"ruleId":"233","severity":2,"message":"234","line":210,"column":4,"nodeType":"235","messageId":"236","endLine":210,"endColumn":23,"suppressions":"301"},{"ruleId":"233","severity":2,"message":"234","line":214,"column":4,"nodeType":"235","messageId":"236","endLine":214,"endColumn":28,"suppressions":"302"},{"ruleId":"233","severity":2,"message":"234","line":217,"column":4,"nodeType":"235","messageId":"236","endLine":217,"endColumn":32,"suppressions":"303"},{"ruleId":"233","severity":2,"message":"234","line":229,"column":4,"nodeType":"235","messageId":"236","endLine":229,"endColumn":28,"suppressions":"304"},{"ruleId":"233","severity":2,"message":"234","line":233,"column":4,"nodeType":"235","messageId":"236","endLine":233,"endColumn":32,"suppressions":"305"},{"ruleId":"233","severity":2,"message":"234","line":252,"column":4,"nodeType":"235","messageId":"236","endLine":252,"endColumn":28,"suppressions":"306"},{"ruleId":"233","severity":2,"message":"234","line":255,"column":4,"nodeType":"235","messageId":"236","endLine":255,"endColumn":32,"suppressions":"307"},{"ruleId":"278","severity":1,"message":"279","line":40,"column":49,"nodeType":"267","messageId":"280","endLine":40,"endColumn":51},{"ruleId":"278","severity":1,"message":"308","line":149,"column":22,"nodeType":"267","messageId":"280","endLine":149,"endColumn":24},{"ruleId":"278","severity":1,"message":"308","line":173,"column":22,"nodeType":"267","messageId":"280","endLine":173,"endColumn":24},{"ruleId":"291","severity":2,"message":"292","line":49,"column":42,"nodeType":"267","messageId":"293","endLine":49,"endColumn":44,"suppressions":"309"},{"ruleId":"291","severity":2,"message":"292","line":61,"column":42,"nodeType":"267","messageId":"293","endLine":61,"endColumn":44,"suppressions":"310"},{"ruleId":"291","severity":2,"message":"292","line":80,"column":42,"nodeType":"267","messageId":"293","endLine":80,"endColumn":44,"suppressions":"311"},{"ruleId":"291","severity":2,"message":"292","line":92,"column":42,"nodeType":"267","messageId":"293","endLine":92,"endColumn":44,"suppressions":"312"},{"ruleId":"291","severity":2,"message":"292","line":111,"column":42,"nodeType":"267","messageId":"293","endLine":111,"endColumn":44,"suppressions":"313"},{"ruleId":"291","severity":2,"message":"292","line":125,"column":42,"nodeType":"267","messageId":"293","endLine":125,"endColumn":44,"suppressions":"314"},{"ruleId":"291","severity":2,"message":"292","line":196,"column":42,"nodeType":"267","messageId":"293","endLine":196,"endColumn":44,"suppressions":"315"},{"ruleId":"291","severity":2,"message":"292","line":278,"column":42,"nodeType":"267","messageId":"293","endLine":278,"endColumn":44,"suppressions":"316"},{"ruleId":"291","severity":2,"message":"292","line":317,"column":43,"nodeType":"267","messageId":"293","endLine":317,"endColumn":45,"suppressions":"317"},"tsdoc/syntax","tsdoc-at-sign-in-word: The \"@\" character looks like part of a TSDoc tag; use a backslash to escape it","tsdoc-at-sign-in-word","class-methods-use-this","Expected 'this' to be used by class async method 'checkInterfaceSupport'.","FunctionExpression","missingThis",["318"],"@typescript-eslint/no-inferrable-types","Type number trivially inferred from a number literal, remove type annotation.","AssignmentPattern","noInferrableType",{"range":"319","text":"320"},["321"],"camelcase","Identifier 'ens_normalize' is not in camel case.","Identifier","notCamelCase",["322"],"import/no-extraneous-dependencies","'web3-eth-accounts' should be listed in the project's dependencies. Run 'npm i -S web3-eth-accounts' to add it","ImportDeclaration",["323"],"'web3-hardhat-plugin' should be listed in the project's dependencies. Run 'npm i -S web3-hardhat-plugin' to add it",["324"],"'web3-eth-personal' should be listed in the project's dependencies. Run 'npm i -S web3-eth-personal' to add it",["325"],"'web3' should be listed in the project's dependencies. Run 'npm i -S web3' to add it",["326"],"'web3-providers-http' should be listed in the project's dependencies. Run 'npm i -S web3-providers-http' to add it",["327"],"'web3-providers-ipc' should be listed in the project's dependencies. Run 'npm i -S web3-providers-ipc' to add it",["328"],"@typescript-eslint/ban-ts-comment","Include a description after the \"@ts-expect-error\" directive to explain why the @ts-expect-error is necessary. The description must be 3 characters or longer.","Line","tsDirectiveCommentRequiresDescription",["329"],"@typescript-eslint/no-unsafe-return","Unsafe return of an `any` typed value.","ConditionalExpression","unsafeReturn",["330"],"@typescript-eslint/no-unsafe-call","Unsafe call of an `any` typed value.","MemberExpression","unsafeCall",["331"],"no-plusplus","Unary operator '++' used.","UpdateExpression","unexpectedUnaryOp",["332"],"no-param-reassign","Assignment to function parameter 'currentAttempt'.","assignmentToFunctionParam",["333"],"no-await-in-loop","Unexpected `await` inside a loop.","AwaitExpression","unexpectedAwait",["334"],"CallExpression",["335"],["336"],["337"],"jest/consistent-test-it","Prefer using 'test' instead of 'it'","consistentMethod",{"range":"338","text":"339"},["340"],"jest/expect-expect","Test has no assertions","noAssertions",["341"],"@typescript-eslint/no-misused-promises","Promise returned in function argument where a void return was expected.","ArrowFunctionExpression","voidReturnArgument",["342"],"no-async-promise-executor","Promise executor functions should not be async.","async",["343"],["344"],["345"],["346"],["347"],"@typescript-eslint/require-await","Async arrow function has no 'await' expression.","missingAwait","@typescript-eslint/no-require-imports","A `require()` style import is forbidden.","noRequireImports",["348"],"@typescript-eslint/no-var-requires","Require statement not part of import statement.","noVarReqs",["349"],["350"],["351"],"@typescript-eslint/no-empty-function","Unexpected empty method 'call'.","unexpected",["352"],["353"],["354"],"Unexpected empty method 'send'.",["355"],["356"],["357"],["358"],["359"],["360"],["361"],["362"],["363"],["364"],"Async method 'call' has no 'await' expression.",["365"],["366"],["367"],["368"],["369"],["370"],["371"],["372"],["373"],{"kind":"374","justification":"320"},[2874,2882],"",{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},[4807,4809],"test",{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},{"kind":"374","justification":"320"},"directive"]